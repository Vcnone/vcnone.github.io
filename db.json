{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/img/05 gettyimages-165903336_resized.jpg","path":"img/05 gettyimages-165903336_resized.jpg","modified":1,"renderable":0},{"_id":"source/img/03 gettyimages-669891618_resized.jpg","path":"img/03 gettyimages-669891618_resized.jpg","modified":1,"renderable":0},{"_id":"source/img/Supervisord.jpg","path":"img/Supervisord.jpg","modified":1,"renderable":0},{"_id":"source/img/archive.jpg","path":"img/archive.jpg","modified":1,"renderable":0},{"_id":"source/img/avater.png","path":"img/avater.png","modified":1,"renderable":0},{"_id":"source/img/category.jpg","path":"img/category.jpg","modified":1,"renderable":0},{"_id":"source/img/categoryper.jpg","path":"img/categoryper.jpg","modified":1,"renderable":0},{"_id":"source/img/defaulttop.jpg","path":"img/defaulttop.jpg","modified":1,"renderable":0},{"_id":"source/img/default.jpg","path":"img/default.jpg","modified":1,"renderable":0},{"_id":"source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":0},{"_id":"source/img/homepage.jpg","path":"img/homepage.jpg","modified":1,"renderable":0},{"_id":"source/img/nvm.jpg","path":"img/nvm.jpg","modified":1,"renderable":0},{"_id":"source/img/tag.jpg","path":"img/tag.jpg","modified":1,"renderable":0},{"_id":"source/img/tagper.jpg","path":"img/tagper.jpg","modified":1,"renderable":0},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/gongan.png","path":"img/gongan.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"903cb6b0c4edc5aeaff68f288b52e6f7f5fe28ae","modified":1636074654965},{"_id":"source/_data/sidebar.njk","hash":"e8fab6b929a0720ccfe4aca33c165c5b79bc1472","modified":1619880855600},{"_id":"source/404/index.md","hash":"c39dd7a669e693a191591b6d03c513221afb67e9","modified":1619872823588},{"_id":"source/_data/link.yml","hash":"795f0225767fc911a908f6b25f9ad0b4862a86b9","modified":1636640119661},{"_id":"source/categories/index.md","hash":"b74ec8043f0c65f9e79c67d08aecf60ed8e37065","modified":1619871179470},{"_id":"source/home/index.md","hash":"27899cb7ce803a8a66543def9e16122587d68b37","modified":1630636832332},{"_id":"source/index.md","hash":"021fbc01b0a798999044e22877f2969543d25942","modified":1636031426075},{"_id":"source/aria2/index.md","hash":"a846694f9fd9d5e9a0536bedfa684010af64e488","modified":1652533941521},{"_id":"source/_posts/2021-05-01-Python-pip.md","hash":"fee5fbe72899515d781b626ca13e682b83e0db8b","modified":1652795527266},{"_id":"source/_posts/2021-05-01-Syncthing.md","hash":"000805bc8557868679a4c4fb96c7ec18c19b687f","modified":1652795516865},{"_id":"source/_posts/2021-05-01-Supervisor.md","hash":"d63bc25aabb9a1e68aa8bb104a4c6d60a6f3d932","modified":1652796208665},{"_id":"source/_posts/2021-06-14-GithubPage.md","hash":"8fc9ae6df03599c951daedafacdf3e8c41b4d12f","modified":1652795432909},{"_id":"source/css/color@0.0.0.css","hash":"915628a08f160c421c9fea664ff678b56a9a04bf","modified":1636723982710},{"_id":"source/_posts/2022-05-17-NVM-Windows.md","hash":"d4e9d8edcefcd93743a7403f91bc6208b6fdc43a","modified":1652796285522},{"_id":"source/_posts/2021-06-15-nginx反向代理GIthubPage.md","hash":"a1e5e72932550c691c5eb7a3b84b12e55349ee58","modified":1652795282251},{"_id":"source/_posts/2021-09-12-LNMP搭建.md","hash":"9710524ebab419fce329f382ce85ea04f9c1f052","modified":1652795459498},{"_id":"source/_posts/2021-10-25-Hexo-多deploy.md","hash":"bcb18f5e03c4f516384ee4576598f95a2d7ba668","modified":1652795281440},{"_id":"source/css/custom@0.0.1.css","hash":"c38a503c3edfda0b574e62c1109c4e707c692662","modified":1636726321999},{"_id":"source/tags/index.md","hash":"d21e299b1a2dff74226b2fd25adfbcfbb76d1b2d","modified":1619871156204},{"_id":"source/link/index.md","hash":"bb69a5fef016d07952f5a233c022a1a26c04c202","modified":1636121668512},{"_id":"source/nps/index.md","hash":"1581e5567a62c9071dab01e3713c147834e7dafd","modified":1636704269970},{"_id":"source/img/Supervisord.jpg","hash":"a75140eab6c7515c1f72930e4fd07ba40dbcdbb3","modified":1652796184921},{"_id":"source/img/avater.png","hash":"2e56b53d5f5b2bf9ea4f18a33d9df22c28695c0b","modified":1652717507720},{"_id":"source/schedule/index.md","hash":"df057c0174ee8bc8c8591c7d46f613613ecbab90","modified":1619887672453},{"_id":"source/img/favicon.png","hash":"5d20424ab09df4eb147bd19e31179f16486cd9a1","modified":1619852561000},{"_id":"source/img/defaulttop.jpg","hash":"3ea7411ab63f480c04c3baa531a41ba88d33d69f","modified":1578886286000},{"_id":"source/img/03 gettyimages-669891618_resized.jpg","hash":"5ea79e552946b287bd51443556f18fd9e21cb0f7","modified":1578886286000},{"_id":"source/img/tag.jpg","hash":"aa616ad5d12516f0169775c63c91871286b1869c","modified":1578886286000},{"_id":"source/img/05 gettyimages-165903336_resized.jpg","hash":"bd405c9200476cfad7185055d50f5b7a97fef4aa","modified":1578886286000},{"_id":"source/img/default.jpg","hash":"82440c01f72a6e31bc655ac7b576c2f6a7f34d5a","modified":1578886286000},{"_id":"source/img/tagper.jpg","hash":"598af7e8e47f528750ad1be4386fb7967d13de0b","modified":1578886286000},{"_id":"source/img/archive.jpg","hash":"6f633ecc673a7eb33be5cca8d0a6d8c7546ba343","modified":1578886286000},{"_id":"source/img/nvm.jpg","hash":"92643f48e719fe09dfdae78fb5a60d2de55ab05f","modified":1652796265234},{"_id":"source/img/homepage.jpg","hash":"6237910735e386a2d2bc13439003e6eb97d57322","modified":1578886286000},{"_id":"source/img/categoryper.jpg","hash":"f66ab584e33ebc0457074b58bd0ac2da575df7fb","modified":1578886286000},{"_id":"source/img/category.jpg","hash":"14309bc6c1eb14fd194741a854138fcf9fec773e","modified":1578886286000},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1636103617809},{"_id":"themes/butterfly/package.json","hash":"0d66e1eb43bca8ffbe030c4651d6ce90d15f7bb2","modified":1652797080033},{"_id":"themes/butterfly/README.md","hash":"d83c496aadb40f5bf9c67bdeba527353409bc559","modified":1652797079996},{"_id":"themes/butterfly/README_CN.md","hash":"fafeccf7b611e8d16d524d27558d942cc9fe0c2f","modified":1652797079997},{"_id":"themes/butterfly/_config.yml","hash":"a06c8a50a49d14c8b53187239f4813a1463c6c64","modified":1652797079998},{"_id":"themes/butterfly/languages/default.yml","hash":"335731ef259a3cec2499a2d5b050025ff4bdc608","modified":1652797079999},{"_id":"themes/butterfly/languages/en.yml","hash":"a96ab1bbe74e99ca2e4d67da9d83f442eb9b73af","modified":1652797080000},{"_id":"themes/butterfly/.github/stale.yml","hash":"79b830939587a5c029b20db6615ba73907d60bb4","modified":1652797079996},{"_id":"themes/butterfly/layout/archive.pug","hash":"2d5bf4b1755f89898c579c18d601be83d2bc8ebd","modified":1636103617814},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"dcb10d62249bb149af8ad78db3ee6e342c6d6be7","modified":1652797080002},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"4adf079fb0170e3a8de6ddbb0392d6d1120030c4","modified":1652797080001},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1651156597652},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1636103617847},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1636103617809},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1651156597622},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1636103617848},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1652797079995},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1652797079995},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1651156597623},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1651156597653},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"ddea99847fd41323f183cd0c9dae3174c586f5b3","modified":1652797080002},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"343f3cb328eb27ef04c0a4bf7fab44b1be76100a","modified":1652797080003},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"d34830ac1c8c686a6c4d519854cf1b2f6c41d364","modified":1644213170958},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"4473ba26e06a782e91ed181d0ceb83f8745aad1f","modified":1652797080005},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1636103617871},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4f41fc46410e1e3018ff87e1d1a5c28be7258119","modified":1652797080006},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"205562ec188bfba5686c51af77486550d0927df5","modified":1651156597634},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"bb1847f45e713cc88b1c0a97035ec01f0209c995","modified":1636103617824},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1636103617872},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1636103617874},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"e1043b8f149371d5a4ab0f1306eabc2988bed071","modified":1652797079994},{"_id":"themes/butterfly/source/css/var.styl","hash":"584ef7b18d5e677eb2e62f9b139097d3b714a993","modified":1651156597686},{"_id":"themes/butterfly/source/img/gongan.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1644212423192},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1651156597656},{"_id":"themes/butterfly/source/js/main.js","hash":"a2c1c55b5b8ec9a83cf6242ebc9ea9be95e1f0c1","modified":1651156597686},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"4db1170be7a9360e2c5399d281b979da730df2a3","modified":1636103617876},{"_id":"themes/butterfly/scripts/events/config.js","hash":"8c3fa850933e4165c3354dea7b82d6f738bd7186","modified":1652797080034},{"_id":"themes/butterfly/scripts/events/init.js","hash":"b3e05e3440b078f57391c113d6b0c8ecff112720","modified":1652797080035},{"_id":"themes/butterfly/source/js/utils.js","hash":"fdb9e5b38f076953a2431b8f682388b030694b55","modified":1651156597688},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1651156597655},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"6c3b7d0874fa499800a4fd49894c481b05ec750c","modified":1651156597657},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"b92cc4648cfe5fb28c58943727823d1178b73a4a","modified":1651156597656},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1651156597658},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"6d4cd2393945a9316339351cab588265f5c18d73","modified":1651156597659},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1651156597658},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1636103617853},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1651156597660},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1636103617854},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1651156597660},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"420ba8b11e7316b4c09eb301d39814bc9bae9f90","modified":1636103617854},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1651156597661},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1636103617851},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"83bfb16ab8d440be04e1b1f889f6affa7ad65a67","modified":1652797080036},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1636103617849},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1636103617855},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"c445140fa16f19bf5fb617fa735504e7799d4d42","modified":1652797080035},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1636103617851},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"dd8e6813976be64e80eba6562b54e74527ab306d","modified":1636103617822},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"2e1ab0c2ca59a1ff5a5ba9b6ef60f3e34af5430c","modified":1636103617822},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"a9e56b1c41bf327859b0a7bcb8e72b458bd851b2","modified":1651156597629},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1636103617821},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"384de3c04809ec5fa996e8aa0628f770cd4bff3e","modified":1636103617852},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1651156597628},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"3a2797d2744607ba6cdb5a02853851957c0f7e29","modified":1636103617819},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"07380718ed3af19a7e64b30e8c13726fe5983947","modified":1636103617816},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c1e45d4d0bd905ddcd2282de4fe89be92e67847d","modified":1651156597625},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"711e92da2677c3a9e9f50babd4430929dba0f524","modified":1652797080004},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"8a3f9e674b44e6a92d4df22baca65d9d30007dc3","modified":1652797080004},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1636103617819},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fc3e67e5ae4774d9e89964ba96beed28f34ee8f0","modified":1651156597627},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1636103617818},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1651156597631},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1636103617819},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1651156597627},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1636103617817},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"971038debf539333b1687b4a1d87cf4fc965a846","modified":1636103617823},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"8f43fdeaf8cff4a35bab74b48c963786ca015620","modified":1651156597632},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"9c8e65939d048a579ea08d063c0f98550376f536","modified":1651156597630},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1652797080007},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1651156597633},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1651156597631},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"e2eba0fcb8332cb333b2aff9c76664e40e2e1974","modified":1651156597632},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1652797080026},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1652797080025},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"a2aa5caf338ff5323b6ff0601ebcc09e710d8398","modified":1651156597664},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"7b5fea9e1c113cab4c75f9d31d8efebe70d82e7a","modified":1652797080031},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1652797080015},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1651156597666},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1636103617843},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1651156597649},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"b9d7d23dc8810542b8c8ffcbfbd3694318debcc6","modified":1651156597663},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1652797080006},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1636103617843},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f562648de515abc873609bfe9b9f799c8cf42b72","modified":1652797080037},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"a5e6f9a88fe146c2c42c38e79f85c42351e9346d","modified":1652797080025},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"08641633d38903351a7424baf9893d9038ba057d","modified":1652797080032},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1651156597650},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1636103617844},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1651156597652},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1636103617846},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1636103617846},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"471b20e71a19db1f5115727082e5188200c49383","modified":1636103617845},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"5e0e9e9b2cd3c256d52423e2278e790aa387a53a","modified":1651156597652},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"62adef7998fb9bebc5891a49472cfea944a1bf7a","modified":1636103617846},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f27ad7b5d781c98bcac5c12c2d70b69b830e0374","modified":1636103617860},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"b224bed22ce063d0d74e1f135812e16fdba87bca","modified":1652797080038},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"e931ef81754a7b9d999fa23d134c620e68e75491","modified":1651156597668},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1651156597667},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"844858ae87c7278996ce484c6b456db354c48764","modified":1651156597669},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"f3aac52defb3497079a313e8c63ac2f7ee24dfbe","modified":1651156597669},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1651156597670},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"9f880a6fa91784a4d3e9ffb0d4607e8a74d4d929","modified":1652797080038},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"1c1c585ba99cb4004956b5e98fc044260b456f99","modified":1651156597672},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1651156597671},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1651156597671},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"0bcd07ffbd2a86a1b24eaefabd7e278034b14ee2","modified":1651156597674},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1636103617844},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"e02b52bdd337c0ed3c9d3a507d1011403c38881d","modified":1652797080040},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"1fed25162d7204480e9bcf476b3246e1717107ca","modified":1651156597674},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1651156597677},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1651156597675},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"d72218cb5a6bfe048ae1c92009bd815a08a53d3a","modified":1651156597676},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1652797080039},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"a714776e3d585369f2285b6bb4e1564539c58d8b","modified":1651156597677},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1651156597678},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"c42b872df237726483d93d6124b8751d4f64cf86","modified":1651156597678},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"d1398399eb7f1cc004fbcefa18f56188cc8fec8c","modified":1652797080040},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1636103617871},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"cced94e70b4b90130cfa215582be2adbf883efba","modified":1652797080041},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"45792c13c7c439d412b7dc597d74d24f3b598406","modified":1652797080041},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1651156597682},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"6e20ab5f90a0dd6eb6fdca58e69961bd2f16a632","modified":1652797080042},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1651156597681},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"84c42716e833d2d1dd47195ea996803ffa0e58ec","modified":1651156597682},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"f72e002d56903a49c36174e77e42f88b8af8bd44","modified":1652797080043},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1651156597683},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1636103617869},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1651156597683},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1651156597685},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"076cd87805207c9b5612ec9771f6994287f4c169","modified":1651156597684},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"a18415004d03c0a1783eccac522fbcb6ce0ea1f1","modified":1636103617827},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1636103617827},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4eebb2d94ca75809ef0cf32d70f13e9bf1e87091","modified":1636103617827},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1651156597679},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1651156597685},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"6e5ccc9ea4346c71ad4cbf1e9f1cb83bb45e6f27","modified":1652797080009},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"13741770ce1fbc86396e2a34741750f18014de68","modified":1652797080008},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1636103617829},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1636103617829},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"2fb4df7ecf4c404f9dba848660ec9a2f7616acd3","modified":1652797080008},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1636103617830},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1636103617834},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"cd358595d04894d4d647b79b80d995abbc0f061b","modified":1652797080017},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1636103617829},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"bb467bb22f3d0775b33f9eacbfc086ecb7831e78","modified":1636103617830},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1636103617830},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"e435f8b55508c82b9151842375952f50ee012ff1","modified":1652797080019},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"5f921c64073f73ae1f2d80969f4d3905d91396ce","modified":1652797080009},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"a222477bddba3c646ee9b8560442c2cb204adb11","modified":1652797080010},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"3df2f59c9552a1f2e6f0d50c4ae97e72c5392b59","modified":1652797080011},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"d5f81fd5443a1b09efb165b5f4447a35949d14ad","modified":1636103617831},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"319463fc8ff993b798f2293b659b522ad7770cf0","modified":1652797080011},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"414f876d28f8497d6d551363a89c5c69bf1533eb","modified":1651156597638},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1636103617832},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"810e8ca2669433f649329859922aabbb30d76178","modified":1651156597639},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"d48d59ebf8c0142fb3c4592a0d35874f85e6fd4c","modified":1652797080012},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1652797080013},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"e45152e4ebc3fb2462916be93f98d18f0574f2d3","modified":1652797080014},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1651156597644},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"4dedd90365d3a3779c83f0a2572c29e6b2aad623","modified":1652797080012},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1651156597644},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"33368c0b80e4c4e78f3c7ee9bec0fed70ad838ca","modified":1652797080023},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"fa83e2320b2c0f469341817eadc2603644df71ee","modified":1652797080022},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"af5d3d87b736598dafcf5871863596592cacdfe1","modified":1652797080027},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"63ef0b2a75cf26a94c5bcd885f3a1c144451b852","modified":1652797080024},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"16cf05cf9649322da57e9b8d316573bb65f8d8d8","modified":1636103617837},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"a0b332b8666eafc07f1a5166cff92b3c926d4500","modified":1652797080020},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1636103617840},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1652797080029},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3b5ef84744a1a8fec5a63554079008040d96f924","modified":1652797080028},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"b45fc15c3ae7db3a0fbce0d6da74a72a95ca8a2b","modified":1652797080030},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1636103617841},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1651156597665},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1636103617842},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1651156597666},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1651156597664},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1636103617859},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1636103617858},{"_id":"public/css/color@0.0.0.css","hash":"3354c8b8c8748b98bf403b1ef021292412f74337","modified":1652862908771},{"_id":"public/css/custom@0.0.1.css","hash":"82256785bb0638bcdfbc79b99a12d3fd766e3250","modified":1652862908771},{"_id":"public/baidusitemap.xml","hash":"e5da3dad8ddeecb95a65fba04cac08e93c2c92dc","modified":1652862908771},{"_id":"public/search.xml","hash":"9ded5bd5ee372b8af0a3abecd3cbb794e022f684","modified":1652862908771},{"_id":"public/sitemap.xml","hash":"28da6774f9ea19125d6f5d9b4f0e9ff1c4f6e418","modified":1652862908771},{"_id":"public/aria2/index.html","hash":"b14df89bc196cfd76fd567ebccb747d98a41a2e2","modified":1652862908771},{"_id":"public/home/index.html","hash":"8b7d24d525698ef1b3cafc0e3c59f4bdca81f9cd","modified":1652862908771},{"_id":"public/index.html","hash":"456a4ce8a015ec1332a89abaf095899fe13749af","modified":1652862908771},{"_id":"public/categories/index.html","hash":"8ccbe57b5689d593add26c0480ee8ad6333f953d","modified":1652862908771},{"_id":"public/link/index.html","hash":"8eea58d6741d7b605ab1e0ac3f2bcec489d0fc7f","modified":1652862908771},{"_id":"public/404/index.html","hash":"77690c5eb01f704e0fbd7182c900c452fac1d097","modified":1652862908771},{"_id":"public/schedule/index.html","hash":"da657d34890c5b36258a583b834b9e53357b0e90","modified":1652862908771},{"_id":"public/nps/index.html","hash":"2ab120657e2df7deb1b935a387480462f263540b","modified":1652862908771},{"_id":"public/tags/index.html","hash":"4e69df5b33f50e531b0f4e38aecfb1dbc8875c44","modified":1652862908771},{"_id":"public/2022/05/17/NVM-Windows/index.html","hash":"b23e799c344e53ef39d1e1273627760003ed56f8","modified":1652862908771},{"_id":"public/2021/10/25/Hexo-多deploy/index.html","hash":"36fdf41d298f2076d1c9516804502d72c3f4577d","modified":1652862908771},{"_id":"public/2021/09/12/LNMP搭建/index.html","hash":"587149e40cd0fb31bcd4407fa3663a8f551523cd","modified":1652862908771},{"_id":"public/2021/06/15/nginx反向代理GIthubPage/index.html","hash":"264178b854575a366cc8ea1dfe2da49bcbf16856","modified":1652862908771},{"_id":"public/2021/06/14/GithubPage/index.html","hash":"3af2d49cc0360a1249ebb34dc4a57675795b7d5e","modified":1652862908771},{"_id":"public/2021/05/01/Python-pip/index.html","hash":"a9fe4ddedf4410385894596e957e0d2069114950","modified":1652862908771},{"_id":"public/2021/05/01/Supervisor/index.html","hash":"e9b1ee9f0f57552ea63e970a174ed9f6a4a2b325","modified":1652862908771},{"_id":"public/2021/05/01/Syncthing/index.html","hash":"32324cc3509d44700132dfe1c4f5d7b85b2a4b29","modified":1652862908771},{"_id":"public/archives/index.html","hash":"175b6af4dcdbfc55d84ecb7c66db3f90f60aa3f8","modified":1652862908771},{"_id":"public/page/2/index.html","hash":"e22fdbd659818c1e04f0fd4ca9be691810ae51cf","modified":1652862908771},{"_id":"public/archives/2021/index.html","hash":"a315f0c6ce76fe7e71c32d503c37fe5d9498ecf8","modified":1652862908771},{"_id":"public/archives/2021/06/index.html","hash":"a061f75f0116fe4b475e8a38a826b8f581d72e67","modified":1652862908771},{"_id":"public/archives/2021/05/index.html","hash":"7cb11c71747641f2ec472c53db0ca0abb2e5f4ff","modified":1652862908771},{"_id":"public/archives/2021/09/index.html","hash":"cb40aa20d4dd5c634c31bd59bd735ed3916f325f","modified":1652862908771},{"_id":"public/archives/2021/10/index.html","hash":"0e357b4b2320dbb45a948dcb0d5d315d5ae6ebc9","modified":1652862908771},{"_id":"public/archives/2022/index.html","hash":"7270203cf79efbc239a43e01377bc8d001c147fd","modified":1652862908771},{"_id":"public/categories/建站/index.html","hash":"4be9332f6e4c42992d459168f3bedd640e246549","modified":1652862908771},{"_id":"public/archives/2022/05/index.html","hash":"0dd4a953194fda3c9b9181810338d2dcbfa3168d","modified":1652862908771},{"_id":"public/categories/软件/index.html","hash":"ab7e8d620e2220f333ce90f414674d4c60cbd8b1","modified":1652862908771},{"_id":"public/tags/工具/index.html","hash":"4e3e0e29f590ff7de699db609386e68ce94d8011","modified":1652862908771},{"_id":"public/tags/服务部署/index.html","hash":"9cea591ad4537b7d9bd5e3d5553b10ca62cb72b7","modified":1652862908771},{"_id":"public/tags/博客/index.html","hash":"62be7db1e0d9e1d7c67239799359155a66c5a3e3","modified":1652862908771},{"_id":"public/img/Supervisord.jpg","hash":"a75140eab6c7515c1f72930e4fd07ba40dbcdbb3","modified":1652862908771},{"_id":"public/img/avater.png","hash":"2e56b53d5f5b2bf9ea4f18a33d9df22c28695c0b","modified":1652862908771},{"_id":"public/CNAME","hash":"903cb6b0c4edc5aeaff68f288b52e6f7f5fe28ae","modified":1652862908771},{"_id":"public/img/favicon.png","hash":"5d20424ab09df4eb147bd19e31179f16486cd9a1","modified":1652862908771},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1652862908771},{"_id":"public/img/gongan.png","hash":"29c400bc3b89f6085766dac4e0330ded5cb73d52","modified":1652862908771},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1652862908771},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1652862908771},{"_id":"public/css/index.css","hash":"5d5cee04c0609f4d9cb4f1a8994c0c204cd08a64","modified":1652862908771},{"_id":"public/js/main.js","hash":"04efcbd28b37875cfec88eb87cab7256a9ebb327","modified":1652862908771},{"_id":"public/img/defaulttop.jpg","hash":"3ea7411ab63f480c04c3baa531a41ba88d33d69f","modified":1652862908771},{"_id":"public/js/search/algolia.js","hash":"ce8131b712dca80f289015aef75f86e727f62981","modified":1652862908771},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1652862908771},{"_id":"public/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1652862908771},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1652862908771},{"_id":"public/img/03 gettyimages-669891618_resized.jpg","hash":"5ea79e552946b287bd51443556f18fd9e21cb0f7","modified":1652862908771},{"_id":"public/img/tag.jpg","hash":"aa616ad5d12516f0169775c63c91871286b1869c","modified":1652862908771},{"_id":"public/img/05 gettyimages-165903336_resized.jpg","hash":"bd405c9200476cfad7185055d50f5b7a97fef4aa","modified":1652862908771},{"_id":"public/img/default.jpg","hash":"82440c01f72a6e31bc655ac7b576c2f6a7f34d5a","modified":1652862908771},{"_id":"public/img/tagper.jpg","hash":"598af7e8e47f528750ad1be4386fb7967d13de0b","modified":1652862908771},{"_id":"public/img/archive.jpg","hash":"6f633ecc673a7eb33be5cca8d0a6d8c7546ba343","modified":1652862908771},{"_id":"public/img/nvm.jpg","hash":"92643f48e719fe09dfdae78fb5a60d2de55ab05f","modified":1652862908771},{"_id":"public/img/homepage.jpg","hash":"6237910735e386a2d2bc13439003e6eb97d57322","modified":1652862908771},{"_id":"public/img/categoryper.jpg","hash":"f66ab584e33ebc0457074b58bd0ac2da575df7fb","modified":1652862908771},{"_id":"public/img/category.jpg","hash":"14309bc6c1eb14fd194741a854138fcf9fec773e","modified":1652862908771}],"Category":[{"name":"建站","_id":"cl3bbwfd30007t8j7ggktdor7"},{"name":"软件","_id":"cl3bbwfdg000ut8j7f11vbrwe"}],"Data":[{"_id":"sidebar","data":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>"},{"_id":"link","data":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}],"Page":[{"title":"VC的鱼塘","date":"2021-05-01T09:10:11.000Z","_content":"\n# 常用链接\n\n- [爱思唯尔](https://www.sciencedirect.com)\n- [The Old Reader](https://theoldreader.com)\n- [ResearchGate](https://www.researchgate.net)\n- [熊猫学术](https://sc.panda321.com)——谷歌镜像，不用google，你有bing\n- [谷歌学术](https://scholar.google.com)\n- [必应学术](https://cn.bing.com/academic)\n- [NTRS](https://ntrs.nasa.gov/search)\n- [美国航空航天学会](https://arc.aiaa.org/)\n\n# 软件\n\n- [Node.js](https://nodejs.org/zh-cn/download/)\n- [Git](https://github.com/git-for-windows/git/releases/)\n- [PotPlayer-64](https://t1.daumcdn.net/potplayer/PotPlayer/Version/Latest/PotPlayerSetup64.exe)\n- [Typora](https://www.typora.io/windows/typora-setup-x64.exe?)\n- [Visual Studio Community 2019](https://visualstudio.microsoft.com/zh-hans/downloads/)\n- [WinRAR](https://dl.lancdn.com/landian/soft/winrar/v6.0.0_x64.exe)\n- [Zotero](https://www.zotero.org/download/)\n- [语雀](https://www.yuque.com/install/desktop)\n- [知云文献翻译](https://www.yuque.com/xtranslator/zy/gga6xa#MxFlT)\n- UltraISO\n- IDM 6.39.1\n- iWebPDF2018\n- Origin 2021\n- Abaqus 6.14-3\n- Catia 2018\n- AutoCAD 2020\n- Siemens.NX.1980\n- 福昕高级PDF编辑器\n","source":"index.md","raw":"---\ntitle: VC的鱼塘\ndate: 2021-05-01 17:10:11\n---\n\n# 常用链接\n\n- [爱思唯尔](https://www.sciencedirect.com)\n- [The Old Reader](https://theoldreader.com)\n- [ResearchGate](https://www.researchgate.net)\n- [熊猫学术](https://sc.panda321.com)——谷歌镜像，不用google，你有bing\n- [谷歌学术](https://scholar.google.com)\n- [必应学术](https://cn.bing.com/academic)\n- [NTRS](https://ntrs.nasa.gov/search)\n- [美国航空航天学会](https://arc.aiaa.org/)\n\n# 软件\n\n- [Node.js](https://nodejs.org/zh-cn/download/)\n- [Git](https://github.com/git-for-windows/git/releases/)\n- [PotPlayer-64](https://t1.daumcdn.net/potplayer/PotPlayer/Version/Latest/PotPlayerSetup64.exe)\n- [Typora](https://www.typora.io/windows/typora-setup-x64.exe?)\n- [Visual Studio Community 2019](https://visualstudio.microsoft.com/zh-hans/downloads/)\n- [WinRAR](https://dl.lancdn.com/landian/soft/winrar/v6.0.0_x64.exe)\n- [Zotero](https://www.zotero.org/download/)\n- [语雀](https://www.yuque.com/install/desktop)\n- [知云文献翻译](https://www.yuque.com/xtranslator/zy/gga6xa#MxFlT)\n- UltraISO\n- IDM 6.39.1\n- iWebPDF2018\n- Origin 2021\n- Abaqus 6.14-3\n- Catia 2018\n- AutoCAD 2020\n- Siemens.NX.1980\n- 福昕高级PDF编辑器\n","updated":"2021-11-04T13:10:26.075Z","path":"index.html","comments":1,"layout":"page","_id":"cl3bbwfcr0000t8j7aq3l7cb9","content":"<h1 id=\"常用链接\"><a href=\"#常用链接\" class=\"headerlink\" title=\"常用链接\"></a>常用链接</h1><ul>\n<li><a href=\"https://www.sciencedirect.com/\">爱思唯尔</a></li>\n<li><a href=\"https://theoldreader.com/\">The Old Reader</a></li>\n<li><a href=\"https://www.researchgate.net/\">ResearchGate</a></li>\n<li><a href=\"https://sc.panda321.com/\">熊猫学术</a>——谷歌镜像，不用google，你有bing</li>\n<li><a href=\"https://scholar.google.com/\">谷歌学术</a></li>\n<li><a href=\"https://cn.bing.com/academic\">必应学术</a></li>\n<li><a href=\"https://ntrs.nasa.gov/search\">NTRS</a></li>\n<li><a href=\"https://arc.aiaa.org/\">美国航空航天学会</a></li>\n</ul>\n<h1 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h1><ul>\n<li><a href=\"https://nodejs.org/zh-cn/download/\">Node.js</a></li>\n<li><a href=\"https://github.com/git-for-windows/git/releases/\">Git</a></li>\n<li><a href=\"https://t1.daumcdn.net/potplayer/PotPlayer/Version/Latest/PotPlayerSetup64.exe\">PotPlayer-64</a></li>\n<li><a href=\"https://www.typora.io/windows/typora-setup-x64.exe\">Typora</a></li>\n<li><a href=\"https://visualstudio.microsoft.com/zh-hans/downloads/\">Visual Studio Community 2019</a></li>\n<li><a href=\"https://dl.lancdn.com/landian/soft/winrar/v6.0.0_x64.exe\">WinRAR</a></li>\n<li><a href=\"https://www.zotero.org/download/\">Zotero</a></li>\n<li><a href=\"https://www.yuque.com/install/desktop\">语雀</a></li>\n<li><a href=\"https://www.yuque.com/xtranslator/zy/gga6xa#MxFlT\">知云文献翻译</a></li>\n<li>UltraISO</li>\n<li>IDM 6.39.1</li>\n<li>iWebPDF2018</li>\n<li>Origin 2021</li>\n<li>Abaqus 6.14-3</li>\n<li>Catia 2018</li>\n<li>AutoCAD 2020</li>\n<li>Siemens.NX.1980</li>\n<li>福昕高级PDF编辑器</li>\n</ul>\n","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"cover":"/img/defaulttop.jpg","excerpt":"","more":"<h1 id=\"常用链接\"><a href=\"#常用链接\" class=\"headerlink\" title=\"常用链接\"></a>常用链接</h1><ul>\n<li><a href=\"https://www.sciencedirect.com/\">爱思唯尔</a></li>\n<li><a href=\"https://theoldreader.com/\">The Old Reader</a></li>\n<li><a href=\"https://www.researchgate.net/\">ResearchGate</a></li>\n<li><a href=\"https://sc.panda321.com/\">熊猫学术</a>——谷歌镜像，不用google，你有bing</li>\n<li><a href=\"https://scholar.google.com/\">谷歌学术</a></li>\n<li><a href=\"https://cn.bing.com/academic\">必应学术</a></li>\n<li><a href=\"https://ntrs.nasa.gov/search\">NTRS</a></li>\n<li><a href=\"https://arc.aiaa.org/\">美国航空航天学会</a></li>\n</ul>\n<h1 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h1><ul>\n<li><a href=\"https://nodejs.org/zh-cn/download/\">Node.js</a></li>\n<li><a href=\"https://github.com/git-for-windows/git/releases/\">Git</a></li>\n<li><a href=\"https://t1.daumcdn.net/potplayer/PotPlayer/Version/Latest/PotPlayerSetup64.exe\">PotPlayer-64</a></li>\n<li><a href=\"https://www.typora.io/windows/typora-setup-x64.exe\">Typora</a></li>\n<li><a href=\"https://visualstudio.microsoft.com/zh-hans/downloads/\">Visual Studio Community 2019</a></li>\n<li><a href=\"https://dl.lancdn.com/landian/soft/winrar/v6.0.0_x64.exe\">WinRAR</a></li>\n<li><a href=\"https://www.zotero.org/download/\">Zotero</a></li>\n<li><a href=\"https://www.yuque.com/install/desktop\">语雀</a></li>\n<li><a href=\"https://www.yuque.com/xtranslator/zy/gga6xa#MxFlT\">知云文献翻译</a></li>\n<li>UltraISO</li>\n<li>IDM 6.39.1</li>\n<li>iWebPDF2018</li>\n<li>Origin 2021</li>\n<li>Abaqus 6.14-3</li>\n<li>Catia 2018</li>\n<li>AutoCAD 2020</li>\n<li>Siemens.NX.1980</li>\n<li>福昕高级PDF编辑器</li>\n</ul>\n"},{"title":"aria2","date":"2022-05-14T13:05:34.000Z","top_img":"https://raw.githubusercontent.com/mayswind/AriaNg-WebSite/master/screenshots/desktop.png","_content":"\n# aria2 - The ultra fast download utility\n\n## [Disclaimer](https://github.com/aria2/aria2#disclaimer)\n\nThis program comes with no warranty. You must use this program at your own risk.\n\n## [Introduction](https://github.com/aria2/aria2#introduction)\n\naria2 is a utility for downloading files. The supported protocols are HTTP(S), FTP, SFTP, BitTorrent, and Metalink. aria2 can download a file from multiple sources/protocols and tries to utilize your maximum download bandwidth. It supports downloading a file from HTTP(S)/FTP/SFTP and BitTorrent at the same time, while the data downloaded from HTTP(S)/FTP/SFTP is uploaded to the BitTorrent swarm. Using Metalink's chunk checksums, aria2 automatically validates chunks of data while downloading a file like BitTorrent.\n\nThe project page is located at [https://aria2.github.io/](https://aria2.github.io/).\n\nSee [aria2 Online Manual](https://aria2.github.io/manual/en/html/) ([Russian translation](https://aria2.github.io/manual/ru/html/), [Portuguese translation](https://aria2.github.io/manual/pt/html/)) to learn how to use aria2.](https://ehang-io.github.io/nps/)","source":"aria2/index.md","raw":"---\ntitle: aria2\ndate: 2022-05-14 21:05:34\ntop_img: https://raw.githubusercontent.com/mayswind/AriaNg-WebSite/master/screenshots/desktop.png\n---\n\n# aria2 - The ultra fast download utility\n\n## [Disclaimer](https://github.com/aria2/aria2#disclaimer)\n\nThis program comes with no warranty. You must use this program at your own risk.\n\n## [Introduction](https://github.com/aria2/aria2#introduction)\n\naria2 is a utility for downloading files. The supported protocols are HTTP(S), FTP, SFTP, BitTorrent, and Metalink. aria2 can download a file from multiple sources/protocols and tries to utilize your maximum download bandwidth. It supports downloading a file from HTTP(S)/FTP/SFTP and BitTorrent at the same time, while the data downloaded from HTTP(S)/FTP/SFTP is uploaded to the BitTorrent swarm. Using Metalink's chunk checksums, aria2 automatically validates chunks of data while downloading a file like BitTorrent.\n\nThe project page is located at [https://aria2.github.io/](https://aria2.github.io/).\n\nSee [aria2 Online Manual](https://aria2.github.io/manual/en/html/) ([Russian translation](https://aria2.github.io/manual/ru/html/), [Portuguese translation](https://aria2.github.io/manual/pt/html/)) to learn how to use aria2.](https://ehang-io.github.io/nps/)","updated":"2022-05-14T13:12:21.521Z","path":"aria2/index.html","comments":1,"layout":"page","_id":"cl3bbwfcx0002t8j75cof2ks9","content":"<h1 id=\"aria2-The-ultra-fast-download-utility\"><a href=\"#aria2-The-ultra-fast-download-utility\" class=\"headerlink\" title=\"aria2 - The ultra fast download utility\"></a>aria2 - The ultra fast download utility</h1><h2 id=\"Disclaimer\"><a href=\"#Disclaimer\" class=\"headerlink\" title=\"Disclaimer\"></a><a href=\"https://github.com/aria2/aria2#disclaimer\">Disclaimer</a></h2><p>This program comes with no warranty. You must use this program at your own risk.</p>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a><a href=\"https://github.com/aria2/aria2#introduction\">Introduction</a></h2><p>aria2 is a utility for downloading files. The supported protocols are HTTP(S), FTP, SFTP, BitTorrent, and Metalink. aria2 can download a file from multiple sources/protocols and tries to utilize your maximum download bandwidth. It supports downloading a file from HTTP(S)/FTP/SFTP and BitTorrent at the same time, while the data downloaded from HTTP(S)/FTP/SFTP is uploaded to the BitTorrent swarm. Using Metalink’s chunk checksums, aria2 automatically validates chunks of data while downloading a file like BitTorrent.</p>\n<p>The project page is located at <a href=\"https://aria2.github.io/\">https://aria2.github.io/</a>.</p>\n<p>See <a href=\"https://aria2.github.io/manual/en/html/\">aria2 Online Manual</a> (<a href=\"https://aria2.github.io/manual/ru/html/\">Russian translation</a>, <a href=\"https://aria2.github.io/manual/pt/html/\">Portuguese translation</a>) to learn how to use aria2.](<a href=\"https://ehang-io.github.io/nps/\">https://ehang-io.github.io/nps/</a>)</p>\n","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"cover":"/img/defaulttop.jpg","excerpt":"","more":"<h1 id=\"aria2-The-ultra-fast-download-utility\"><a href=\"#aria2-The-ultra-fast-download-utility\" class=\"headerlink\" title=\"aria2 - The ultra fast download utility\"></a>aria2 - The ultra fast download utility</h1><h2 id=\"Disclaimer\"><a href=\"#Disclaimer\" class=\"headerlink\" title=\"Disclaimer\"></a><a href=\"https://github.com/aria2/aria2#disclaimer\">Disclaimer</a></h2><p>This program comes with no warranty. You must use this program at your own risk.</p>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a><a href=\"https://github.com/aria2/aria2#introduction\">Introduction</a></h2><p>aria2 is a utility for downloading files. The supported protocols are HTTP(S), FTP, SFTP, BitTorrent, and Metalink. aria2 can download a file from multiple sources/protocols and tries to utilize your maximum download bandwidth. It supports downloading a file from HTTP(S)/FTP/SFTP and BitTorrent at the same time, while the data downloaded from HTTP(S)/FTP/SFTP is uploaded to the BitTorrent swarm. Using Metalink’s chunk checksums, aria2 automatically validates chunks of data while downloading a file like BitTorrent.</p>\n<p>The project page is located at <a href=\"https://aria2.github.io/\">https://aria2.github.io/</a>.</p>\n<p>See <a href=\"https://aria2.github.io/manual/en/html/\">aria2 Online Manual</a> (<a href=\"https://aria2.github.io/manual/ru/html/\">Russian translation</a>, <a href=\"https://aria2.github.io/manual/pt/html/\">Portuguese translation</a>) to learn how to use aria2.](<a href=\"https://ehang-io.github.io/nps/\">https://ehang-io.github.io/nps/</a>)</p>\n"},{"title":"categories","date":"2021-05-01T12:11:52.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2021-05-01 20:11:52\ntype: \"categories\"\n---","updated":"2021-05-01T12:12:59.470Z","path":"categories/index.html","comments":1,"layout":"page","_id":"cl3bbwfd10005t8j790e54tbq","content":"","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"cover":"/img/defaulttop.jpg","excerpt":"","more":""},{"title":"Home","date":"2021-09-03T02:39:10.000Z","type":"Home","_content":"\n# 常用链接\n\n- [爱思唯尔](https://www.sciencedirect.com)\n\n- [The Old Reader](https://theoldreader.com)\n\n- [Google](https://www.google.com)\n\n- [K站](https://konachan.net)\n\n# 软件\n\n- [BookxNote Pro](http://www.bookxnote.com/)\n- [CAJViewer 7.3](http://cajviewer.cnki.net/)\n- [FormatFactory](http://down.pcgeshi.com/FormatFactory_setup.exe) \n- [GIMP](https://www.gimp.org/downloads/)\n- [OBS Studio](https://obsproject.com/zh-cn/download)\n- [Visual Studio Code](https://code.visualstudio.com/sha/download?build=stable&os=win32-x64-user) \n- [Node.js](https://nodejs.org/zh-cn/download/)\n- [Git](https://github.com/git-for-windows/git/releases/)\n- [IDM 6.39.1](https://github.com/git-for-windows/git/releases/) \n- [iWebPDF2018](https://one.vcnone.top/💾软件/iWebPDF2018.zip) \n- [Origin 2021](https://one.vcnone.top/💾软件/OriginPro_2021.zip) \n- [Abaqus 6.14-3](https://one.vcnone.top/💾软件/ABAQUS6.14-3.zip) \n- [Catia 2018](https://one.vcnone.top/💾软件/CATIA_V5-6R2018.zip) \n- [AutoCAD 2020](https://one.vcnone.top/💾软件/AutoCAD_2020.zip) \n- [Siemens.NX.1980](https://one.vcnone.top/💾软件/Siemens.NX.1980.zip) \n- [PotPlayer-64](https://t1.daumcdn.net/potplayer/PotPlayer/Version/Latest/PotPlayerSetup64.exe)\n- [Typora](https://www.typora.io/windows/typora-setup-x64.exe?)\n- UltraISO\n- [Visual Studio Community 2019](https://visualstudio.microsoft.com/zh-hans/downloads/)\n- [WinRAR](https://dl.lancdn.com/landian/soft/winrar/v6.0.0_x64.exe)\n- [Zotero](https://www.zotero.org/download/)\n- [福昕高级PDF编辑器](https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/%E7%A6%8F%E6%98%95%E9%AB%98%E7%BA%A7PDF%E7%BC%96%E8%BE%91%E5%99%A8.zip)\n- [语雀](https://www.yuque.com/install/desktop)\n- [知云文献翻译](https://www.yuque.com/xtranslator/zy/gga6xa#MxFlT)\n","source":"home/index.md","raw":"---\ntitle: Home\ndate: 2021-09-03 10:39:10\ntype: \"Home\"\n---\n\n# 常用链接\n\n- [爱思唯尔](https://www.sciencedirect.com)\n\n- [The Old Reader](https://theoldreader.com)\n\n- [Google](https://www.google.com)\n\n- [K站](https://konachan.net)\n\n# 软件\n\n- [BookxNote Pro](http://www.bookxnote.com/)\n- [CAJViewer 7.3](http://cajviewer.cnki.net/)\n- [FormatFactory](http://down.pcgeshi.com/FormatFactory_setup.exe) \n- [GIMP](https://www.gimp.org/downloads/)\n- [OBS Studio](https://obsproject.com/zh-cn/download)\n- [Visual Studio Code](https://code.visualstudio.com/sha/download?build=stable&os=win32-x64-user) \n- [Node.js](https://nodejs.org/zh-cn/download/)\n- [Git](https://github.com/git-for-windows/git/releases/)\n- [IDM 6.39.1](https://github.com/git-for-windows/git/releases/) \n- [iWebPDF2018](https://one.vcnone.top/💾软件/iWebPDF2018.zip) \n- [Origin 2021](https://one.vcnone.top/💾软件/OriginPro_2021.zip) \n- [Abaqus 6.14-3](https://one.vcnone.top/💾软件/ABAQUS6.14-3.zip) \n- [Catia 2018](https://one.vcnone.top/💾软件/CATIA_V5-6R2018.zip) \n- [AutoCAD 2020](https://one.vcnone.top/💾软件/AutoCAD_2020.zip) \n- [Siemens.NX.1980](https://one.vcnone.top/💾软件/Siemens.NX.1980.zip) \n- [PotPlayer-64](https://t1.daumcdn.net/potplayer/PotPlayer/Version/Latest/PotPlayerSetup64.exe)\n- [Typora](https://www.typora.io/windows/typora-setup-x64.exe?)\n- UltraISO\n- [Visual Studio Community 2019](https://visualstudio.microsoft.com/zh-hans/downloads/)\n- [WinRAR](https://dl.lancdn.com/landian/soft/winrar/v6.0.0_x64.exe)\n- [Zotero](https://www.zotero.org/download/)\n- [福昕高级PDF编辑器](https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/%E7%A6%8F%E6%98%95%E9%AB%98%E7%BA%A7PDF%E7%BC%96%E8%BE%91%E5%99%A8.zip)\n- [语雀](https://www.yuque.com/install/desktop)\n- [知云文献翻译](https://www.yuque.com/xtranslator/zy/gga6xa#MxFlT)\n","updated":"2021-09-03T02:40:32.332Z","path":"home/index.html","comments":1,"layout":"page","_id":"cl3bbwfd30008t8j75g7992xj","content":"<h1 id=\"常用链接\"><a href=\"#常用链接\" class=\"headerlink\" title=\"常用链接\"></a>常用链接</h1><ul>\n<li><p><a href=\"https://www.sciencedirect.com/\">爱思唯尔</a></p>\n</li>\n<li><p><a href=\"https://theoldreader.com/\">The Old Reader</a></p>\n</li>\n<li><p><a href=\"https://www.google.com/\">Google</a></p>\n</li>\n<li><p><a href=\"https://konachan.net/\">K站</a></p>\n</li>\n</ul>\n<h1 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h1><ul>\n<li><a href=\"http://www.bookxnote.com/\">BookxNote Pro</a></li>\n<li><a href=\"http://cajviewer.cnki.net/\">CAJViewer 7.3</a></li>\n<li><a href=\"http://down.pcgeshi.com/FormatFactory_setup.exe\">FormatFactory</a> </li>\n<li><a href=\"https://www.gimp.org/downloads/\">GIMP</a></li>\n<li><a href=\"https://obsproject.com/zh-cn/download\">OBS Studio</a></li>\n<li><a href=\"https://code.visualstudio.com/sha/download?build=stable&os=win32-x64-user\">Visual Studio Code</a> </li>\n<li><a href=\"https://nodejs.org/zh-cn/download/\">Node.js</a></li>\n<li><a href=\"https://github.com/git-for-windows/git/releases/\">Git</a></li>\n<li><a href=\"https://github.com/git-for-windows/git/releases/\">IDM 6.39.1</a> </li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/iWebPDF2018.zip\">iWebPDF2018</a> </li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/OriginPro_2021.zip\">Origin 2021</a> </li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/ABAQUS6.14-3.zip\">Abaqus 6.14-3</a> </li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/CATIA_V5-6R2018.zip\">Catia 2018</a> </li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/AutoCAD_2020.zip\">AutoCAD 2020</a> </li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/Siemens.NX.1980.zip\">Siemens.NX.1980</a> </li>\n<li><a href=\"https://t1.daumcdn.net/potplayer/PotPlayer/Version/Latest/PotPlayerSetup64.exe\">PotPlayer-64</a></li>\n<li><a href=\"https://www.typora.io/windows/typora-setup-x64.exe\">Typora</a></li>\n<li>UltraISO</li>\n<li><a href=\"https://visualstudio.microsoft.com/zh-hans/downloads/\">Visual Studio Community 2019</a></li>\n<li><a href=\"https://dl.lancdn.com/landian/soft/winrar/v6.0.0_x64.exe\">WinRAR</a></li>\n<li><a href=\"https://www.zotero.org/download/\">Zotero</a></li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/%E7%A6%8F%E6%98%95%E9%AB%98%E7%BA%A7PDF%E7%BC%96%E8%BE%91%E5%99%A8.zip\">福昕高级PDF编辑器</a></li>\n<li><a href=\"https://www.yuque.com/install/desktop\">语雀</a></li>\n<li><a href=\"https://www.yuque.com/xtranslator/zy/gga6xa#MxFlT\">知云文献翻译</a></li>\n</ul>\n","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"cover":"/img/defaulttop.jpg","excerpt":"","more":"<h1 id=\"常用链接\"><a href=\"#常用链接\" class=\"headerlink\" title=\"常用链接\"></a>常用链接</h1><ul>\n<li><p><a href=\"https://www.sciencedirect.com/\">爱思唯尔</a></p>\n</li>\n<li><p><a href=\"https://theoldreader.com/\">The Old Reader</a></p>\n</li>\n<li><p><a href=\"https://www.google.com/\">Google</a></p>\n</li>\n<li><p><a href=\"https://konachan.net/\">K站</a></p>\n</li>\n</ul>\n<h1 id=\"软件\"><a href=\"#软件\" class=\"headerlink\" title=\"软件\"></a>软件</h1><ul>\n<li><a href=\"http://www.bookxnote.com/\">BookxNote Pro</a></li>\n<li><a href=\"http://cajviewer.cnki.net/\">CAJViewer 7.3</a></li>\n<li><a href=\"http://down.pcgeshi.com/FormatFactory_setup.exe\">FormatFactory</a> </li>\n<li><a href=\"https://www.gimp.org/downloads/\">GIMP</a></li>\n<li><a href=\"https://obsproject.com/zh-cn/download\">OBS Studio</a></li>\n<li><a href=\"https://code.visualstudio.com/sha/download?build=stable&os=win32-x64-user\">Visual Studio Code</a> </li>\n<li><a href=\"https://nodejs.org/zh-cn/download/\">Node.js</a></li>\n<li><a href=\"https://github.com/git-for-windows/git/releases/\">Git</a></li>\n<li><a href=\"https://github.com/git-for-windows/git/releases/\">IDM 6.39.1</a> </li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/iWebPDF2018.zip\">iWebPDF2018</a> </li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/OriginPro_2021.zip\">Origin 2021</a> </li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/ABAQUS6.14-3.zip\">Abaqus 6.14-3</a> </li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/CATIA_V5-6R2018.zip\">Catia 2018</a> </li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/AutoCAD_2020.zip\">AutoCAD 2020</a> </li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/Siemens.NX.1980.zip\">Siemens.NX.1980</a> </li>\n<li><a href=\"https://t1.daumcdn.net/potplayer/PotPlayer/Version/Latest/PotPlayerSetup64.exe\">PotPlayer-64</a></li>\n<li><a href=\"https://www.typora.io/windows/typora-setup-x64.exe\">Typora</a></li>\n<li>UltraISO</li>\n<li><a href=\"https://visualstudio.microsoft.com/zh-hans/downloads/\">Visual Studio Community 2019</a></li>\n<li><a href=\"https://dl.lancdn.com/landian/soft/winrar/v6.0.0_x64.exe\">WinRAR</a></li>\n<li><a href=\"https://www.zotero.org/download/\">Zotero</a></li>\n<li><a href=\"https://one.vcnone.top/%F0%9F%92%BE%E8%BD%AF%E4%BB%B6/%E7%A6%8F%E6%98%95%E9%AB%98%E7%BA%A7PDF%E7%BC%96%E8%BE%91%E5%99%A8.zip\">福昕高级PDF编辑器</a></li>\n<li><a href=\"https://www.yuque.com/install/desktop\">语雀</a></li>\n<li><a href=\"https://www.yuque.com/xtranslator/zy/gga6xa#MxFlT\">知云文献翻译</a></li>\n</ul>\n"},{"_content":"/* 日间模式页面调整 */\n[data-theme=light] {\n    --card-bg: rgba(255,255,255,.9) !important; /* 全局背景调整 */\n}\n\n/* 夜间模式页面调整 */\n[data-theme=dark] {\n    --card-bg: rgba(26, 27, 29, .9) !important; /* 全局背景调整 */\n    --btn-bg: #012c48 !important; /* 页面所有按钮夜间背景色 */\n}\n\n/* @0.0.0 */","source":"css/color@0.0.0.css","raw":"/* 日间模式页面调整 */\n[data-theme=light] {\n    --card-bg: rgba(255,255,255,.9) !important; /* 全局背景调整 */\n}\n\n/* 夜间模式页面调整 */\n[data-theme=dark] {\n    --card-bg: rgba(26, 27, 29, .9) !important; /* 全局背景调整 */\n    --btn-bg: #012c48 !important; /* 页面所有按钮夜间背景色 */\n}\n\n/* @0.0.0 */","date":"2021-11-12T13:33:02.710Z","updated":"2021-11-12T13:33:02.710Z","path":"css/color@0.0.0.css","layout":"false","title":"","comments":1,"_id":"cl3bbwfd5000at8j7bms9apmw","content":"/* 日间模式页面调整 */\n[data-theme=light] {\n    --card-bg: rgba(255,255,255,.9) !important; /* 全局背景调整 */\n}\n\n/* 夜间模式页面调整 */\n[data-theme=dark] {\n    --card-bg: rgba(26, 27, 29, .9) !important; /* 全局背景调整 */\n    --btn-bg: #012c48 !important; /* 页面所有按钮夜间背景色 */\n}\n\n/* @0.0.0 */","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"cover":"/img/defaulttop.jpg","excerpt":"","more":"/* 日间模式页面调整 */\n[data-theme=light] {\n    --card-bg: rgba(255,255,255,.9) !important; /* 全局背景调整 */\n}\n\n/* 夜间模式页面调整 */\n[data-theme=dark] {\n    --card-bg: rgba(26, 27, 29, .9) !important; /* 全局背景调整 */\n    --btn-bg: #012c48 !important; /* 页面所有按钮夜间背景色 */\n}\n\n/* @0.0.0 */"},{"title":"404","date":"2014-12-22T04:39:04.000Z","comments":0,"_content":"<script src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\" homePageName=\"返回主页\">\n</script>","source":"404/index.md","raw":"---\ntitle: '404'\ndate: 2014-12-22 12:39:04\ncomments: false\n---\n<script src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\" homePageName=\"返回主页\">\n</script>","updated":"2021-05-01T12:40:23.588Z","path":"404/index.html","layout":"page","_id":"cl3bbwfda000ft8j73yx20j1u","content":"<script src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\" homePageName=\"返回主页\">\n</script>","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"cover":"/img/defaulttop.jpg","excerpt":"","more":"<script src=\"//qzonestyle.gtimg.cn/qzone/hybrid/app/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"/\" homePageName=\"返回主页\">\n</script>"},{"_content":"/* 文章页H1-H6图标样式效果 */\n\n/* 想调整风车转动速度，修改以下内容里的时间，数字越小转动越快 */\nh1::before, h2::before, h3::before, h4::before, h5::before, h6::before {\n    -webkit-animation: ccc 1.6s linear infinite ;\n    animation: ccc 1.6s linear infinite ;\n}\n\n/* 以下代码中，-1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */\n@-webkit-keyframes ccc {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg)\n    }\n    to {\n        -webkit-transform: rotate(-1turn);\n        transform: rotate(-1turn)\n    }\n}\n@keyframes ccc {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg)\n    }\n    to {\n        -webkit-transform: rotate(-1turn);\n        transform: rotate(-1turn)\n    }\n}\n\n/* 小风车颜色代码 */\n#content-inner.layout h1::before {\n    color: #5ec1e0 ;\n    margin-left: -1.55rem;\n    font-size: 1.3rem;\n    margin-top: -0.23rem;\n}\n#content-inner.layout h2::before {\n    color: #57c850 ;\n    margin-left: -1.35rem;\n    font-size: 1.1rem;\n    margin-top: -0.12rem;\n}\n#content-inner.layout h3::before {\n    color: #a9e000 ;\n    margin-left: -1.22rem;\n    font-size: 0.95rem;\n    margin-top: -0.09rem;\n}\n#content-inner.layout h4::before {\n    color: #ffbf00 ;\n    margin-left: -1.05rem;\n    font-size: 0.8rem;\n    margin-top: -0.09rem;\n}\n#content-inner.layout h5::before {\n    color: #fb7061 ;\n    margin-left: -0.9rem;\n    font-size: 0.7rem;\n    margin-top: 0.0rem;\n}\n#content-inner.layout h6::before {\n    color: #ef50af ;\n    margin-left: -0.9rem;\n    font-size: 0.66rem;\n    margin-top: 0.0rem;\n}\n\n/* 设置鼠标碰到标题时，小风车跟随标题变色，且像是被光标阻碍了，转速变慢。鼠标离开恢复转速。也可以设置为 none 鼠标碰到停止转动 */\n#content-inner.layout h1:hover, #content-inner.layout h2:hover, #content-inner.layout h3:hover, #content-inner.layout h4:hover, #content-inner.layout h5:hover, #content-inner.layout h6:hover {\n    color: #49b1f5 ;\n}\n#content-inner.layout h1:hover::before, #content-inner.layout h2:hover::before, #content-inner.layout h3:hover::before, #content-inner.layout h4:hover::before, #content-inner.layout h5:hover::before, #content-inner.layout h6:hover::before {\n    color: #49b1f5 ;\n    -webkit-animation: ccc 3.2s linear infinite ;\n    animation: ccc 3.2s linear infinite ;\n}\n\n/* 页面设置icon转动速度调整 */\n#rightside_config i.fas.fa-cog.fa-spin {\n    animation: fa-spin 5s linear infinite ;\n}\n\n/* @0.0.0 */\n\n/* 说明文字居中 */\n/*\n.jg-caption{\n    text-align: center !important;\n}\n*/\n/* 图片下增加小图标 */\n/*\n.jg-caption-visible::before {\n    content: \"⊙ \";\n} \n.fancybox-caption__body::before {\n    content: \"⊙ \";\n} \n.img-alt.is-center::before {\n    content: \"⊙ \";\n}\n*/\n\n/* 滚动条 */\n::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n}\n::-webkit-scrollbar-thumb {\n    background-color: rgb(136, 207, 219);\n    background-image: -webkit-linear-gradient( 90deg, rgba(255, 255, 255, 0.4) 20%, transparent 20%, transparent 40%, rgba(255, 255, 255, 0.4) 40%, rgba(255, 255, 255, 0.4) 60%, transparent 60%, transparent 80%, rgba(255, 255, 255, 0.4) 80%, rgba(255, 255, 255, 0.4) 100%);\n    border-radius: 2em;\n}\n::-webkit-scrollbar-corner {\n    background-color: transparent;\n}\n::-moz-selection {\n    color: #fff;\n    background-color: #c2f747;\n}\n/* @0.0.1 */","source":"css/custom@0.0.1.css","raw":"/* 文章页H1-H6图标样式效果 */\n\n/* 想调整风车转动速度，修改以下内容里的时间，数字越小转动越快 */\nh1::before, h2::before, h3::before, h4::before, h5::before, h6::before {\n    -webkit-animation: ccc 1.6s linear infinite ;\n    animation: ccc 1.6s linear infinite ;\n}\n\n/* 以下代码中，-1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */\n@-webkit-keyframes ccc {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg)\n    }\n    to {\n        -webkit-transform: rotate(-1turn);\n        transform: rotate(-1turn)\n    }\n}\n@keyframes ccc {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg)\n    }\n    to {\n        -webkit-transform: rotate(-1turn);\n        transform: rotate(-1turn)\n    }\n}\n\n/* 小风车颜色代码 */\n#content-inner.layout h1::before {\n    color: #5ec1e0 ;\n    margin-left: -1.55rem;\n    font-size: 1.3rem;\n    margin-top: -0.23rem;\n}\n#content-inner.layout h2::before {\n    color: #57c850 ;\n    margin-left: -1.35rem;\n    font-size: 1.1rem;\n    margin-top: -0.12rem;\n}\n#content-inner.layout h3::before {\n    color: #a9e000 ;\n    margin-left: -1.22rem;\n    font-size: 0.95rem;\n    margin-top: -0.09rem;\n}\n#content-inner.layout h4::before {\n    color: #ffbf00 ;\n    margin-left: -1.05rem;\n    font-size: 0.8rem;\n    margin-top: -0.09rem;\n}\n#content-inner.layout h5::before {\n    color: #fb7061 ;\n    margin-left: -0.9rem;\n    font-size: 0.7rem;\n    margin-top: 0.0rem;\n}\n#content-inner.layout h6::before {\n    color: #ef50af ;\n    margin-left: -0.9rem;\n    font-size: 0.66rem;\n    margin-top: 0.0rem;\n}\n\n/* 设置鼠标碰到标题时，小风车跟随标题变色，且像是被光标阻碍了，转速变慢。鼠标离开恢复转速。也可以设置为 none 鼠标碰到停止转动 */\n#content-inner.layout h1:hover, #content-inner.layout h2:hover, #content-inner.layout h3:hover, #content-inner.layout h4:hover, #content-inner.layout h5:hover, #content-inner.layout h6:hover {\n    color: #49b1f5 ;\n}\n#content-inner.layout h1:hover::before, #content-inner.layout h2:hover::before, #content-inner.layout h3:hover::before, #content-inner.layout h4:hover::before, #content-inner.layout h5:hover::before, #content-inner.layout h6:hover::before {\n    color: #49b1f5 ;\n    -webkit-animation: ccc 3.2s linear infinite ;\n    animation: ccc 3.2s linear infinite ;\n}\n\n/* 页面设置icon转动速度调整 */\n#rightside_config i.fas.fa-cog.fa-spin {\n    animation: fa-spin 5s linear infinite ;\n}\n\n/* @0.0.0 */\n\n/* 说明文字居中 */\n/*\n.jg-caption{\n    text-align: center !important;\n}\n*/\n/* 图片下增加小图标 */\n/*\n.jg-caption-visible::before {\n    content: \"⊙ \";\n} \n.fancybox-caption__body::before {\n    content: \"⊙ \";\n} \n.img-alt.is-center::before {\n    content: \"⊙ \";\n}\n*/\n\n/* 滚动条 */\n::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n}\n::-webkit-scrollbar-thumb {\n    background-color: rgb(136, 207, 219);\n    background-image: -webkit-linear-gradient( 90deg, rgba(255, 255, 255, 0.4) 20%, transparent 20%, transparent 40%, rgba(255, 255, 255, 0.4) 40%, rgba(255, 255, 255, 0.4) 60%, transparent 60%, transparent 80%, rgba(255, 255, 255, 0.4) 80%, rgba(255, 255, 255, 0.4) 100%);\n    border-radius: 2em;\n}\n::-webkit-scrollbar-corner {\n    background-color: transparent;\n}\n::-moz-selection {\n    color: #fff;\n    background-color: #c2f747;\n}\n/* @0.0.1 */","date":"2021-11-12T14:12:01.999Z","updated":"2021-11-12T14:12:01.999Z","path":"css/custom@0.0.1.css","layout":"false","title":"","comments":1,"_id":"cl3bbwfdc000ht8j7e6dd3gjd","content":"/* 文章页H1-H6图标样式效果 */\n\n/* 想调整风车转动速度，修改以下内容里的时间，数字越小转动越快 */\nh1::before, h2::before, h3::before, h4::before, h5::before, h6::before {\n    -webkit-animation: ccc 1.6s linear infinite ;\n    animation: ccc 1.6s linear infinite ;\n}\n\n/* 以下代码中，-1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */\n@-webkit-keyframes ccc {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg)\n    }\n    to {\n        -webkit-transform: rotate(-1turn);\n        transform: rotate(-1turn)\n    }\n}\n@keyframes ccc {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg)\n    }\n    to {\n        -webkit-transform: rotate(-1turn);\n        transform: rotate(-1turn)\n    }\n}\n\n/* 小风车颜色代码 */\n#content-inner.layout h1::before {\n    color: #5ec1e0 ;\n    margin-left: -1.55rem;\n    font-size: 1.3rem;\n    margin-top: -0.23rem;\n}\n#content-inner.layout h2::before {\n    color: #57c850 ;\n    margin-left: -1.35rem;\n    font-size: 1.1rem;\n    margin-top: -0.12rem;\n}\n#content-inner.layout h3::before {\n    color: #a9e000 ;\n    margin-left: -1.22rem;\n    font-size: 0.95rem;\n    margin-top: -0.09rem;\n}\n#content-inner.layout h4::before {\n    color: #ffbf00 ;\n    margin-left: -1.05rem;\n    font-size: 0.8rem;\n    margin-top: -0.09rem;\n}\n#content-inner.layout h5::before {\n    color: #fb7061 ;\n    margin-left: -0.9rem;\n    font-size: 0.7rem;\n    margin-top: 0.0rem;\n}\n#content-inner.layout h6::before {\n    color: #ef50af ;\n    margin-left: -0.9rem;\n    font-size: 0.66rem;\n    margin-top: 0.0rem;\n}\n\n/* 设置鼠标碰到标题时，小风车跟随标题变色，且像是被光标阻碍了，转速变慢。鼠标离开恢复转速。也可以设置为 none 鼠标碰到停止转动 */\n#content-inner.layout h1:hover, #content-inner.layout h2:hover, #content-inner.layout h3:hover, #content-inner.layout h4:hover, #content-inner.layout h5:hover, #content-inner.layout h6:hover {\n    color: #49b1f5 ;\n}\n#content-inner.layout h1:hover::before, #content-inner.layout h2:hover::before, #content-inner.layout h3:hover::before, #content-inner.layout h4:hover::before, #content-inner.layout h5:hover::before, #content-inner.layout h6:hover::before {\n    color: #49b1f5 ;\n    -webkit-animation: ccc 3.2s linear infinite ;\n    animation: ccc 3.2s linear infinite ;\n}\n\n/* 页面设置icon转动速度调整 */\n#rightside_config i.fas.fa-cog.fa-spin {\n    animation: fa-spin 5s linear infinite ;\n}\n\n/* @0.0.0 */\n\n/* 说明文字居中 */\n/*\n.jg-caption{\n    text-align: center !important;\n}\n*/\n/* 图片下增加小图标 */\n/*\n.jg-caption-visible::before {\n    content: \"⊙ \";\n} \n.fancybox-caption__body::before {\n    content: \"⊙ \";\n} \n.img-alt.is-center::before {\n    content: \"⊙ \";\n}\n*/\n\n/* 滚动条 */\n::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n}\n::-webkit-scrollbar-thumb {\n    background-color: rgb(136, 207, 219);\n    background-image: -webkit-linear-gradient( 90deg, rgba(255, 255, 255, 0.4) 20%, transparent 20%, transparent 40%, rgba(255, 255, 255, 0.4) 40%, rgba(255, 255, 255, 0.4) 60%, transparent 60%, transparent 80%, rgba(255, 255, 255, 0.4) 80%, rgba(255, 255, 255, 0.4) 100%);\n    border-radius: 2em;\n}\n::-webkit-scrollbar-corner {\n    background-color: transparent;\n}\n::-moz-selection {\n    color: #fff;\n    background-color: #c2f747;\n}\n/* @0.0.1 */","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"cover":"/img/defaulttop.jpg","excerpt":"","more":"/* 文章页H1-H6图标样式效果 */\n\n/* 想调整风车转动速度，修改以下内容里的时间，数字越小转动越快 */\nh1::before, h2::before, h3::before, h4::before, h5::before, h6::before {\n    -webkit-animation: ccc 1.6s linear infinite ;\n    animation: ccc 1.6s linear infinite ;\n}\n\n/* 以下代码中，-1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */\n@-webkit-keyframes ccc {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg)\n    }\n    to {\n        -webkit-transform: rotate(-1turn);\n        transform: rotate(-1turn)\n    }\n}\n@keyframes ccc {\n    0% {\n        -webkit-transform: rotate(0deg);\n        transform: rotate(0deg)\n    }\n    to {\n        -webkit-transform: rotate(-1turn);\n        transform: rotate(-1turn)\n    }\n}\n\n/* 小风车颜色代码 */\n#content-inner.layout h1::before {\n    color: #5ec1e0 ;\n    margin-left: -1.55rem;\n    font-size: 1.3rem;\n    margin-top: -0.23rem;\n}\n#content-inner.layout h2::before {\n    color: #57c850 ;\n    margin-left: -1.35rem;\n    font-size: 1.1rem;\n    margin-top: -0.12rem;\n}\n#content-inner.layout h3::before {\n    color: #a9e000 ;\n    margin-left: -1.22rem;\n    font-size: 0.95rem;\n    margin-top: -0.09rem;\n}\n#content-inner.layout h4::before {\n    color: #ffbf00 ;\n    margin-left: -1.05rem;\n    font-size: 0.8rem;\n    margin-top: -0.09rem;\n}\n#content-inner.layout h5::before {\n    color: #fb7061 ;\n    margin-left: -0.9rem;\n    font-size: 0.7rem;\n    margin-top: 0.0rem;\n}\n#content-inner.layout h6::before {\n    color: #ef50af ;\n    margin-left: -0.9rem;\n    font-size: 0.66rem;\n    margin-top: 0.0rem;\n}\n\n/* 设置鼠标碰到标题时，小风车跟随标题变色，且像是被光标阻碍了，转速变慢。鼠标离开恢复转速。也可以设置为 none 鼠标碰到停止转动 */\n#content-inner.layout h1:hover, #content-inner.layout h2:hover, #content-inner.layout h3:hover, #content-inner.layout h4:hover, #content-inner.layout h5:hover, #content-inner.layout h6:hover {\n    color: #49b1f5 ;\n}\n#content-inner.layout h1:hover::before, #content-inner.layout h2:hover::before, #content-inner.layout h3:hover::before, #content-inner.layout h4:hover::before, #content-inner.layout h5:hover::before, #content-inner.layout h6:hover::before {\n    color: #49b1f5 ;\n    -webkit-animation: ccc 3.2s linear infinite ;\n    animation: ccc 3.2s linear infinite ;\n}\n\n/* 页面设置icon转动速度调整 */\n#rightside_config i.fas.fa-cog.fa-spin {\n    animation: fa-spin 5s linear infinite ;\n}\n\n/* @0.0.0 */\n\n/* 说明文字居中 */\n/*\n.jg-caption{\n    text-align: center !important;\n}\n*/\n/* 图片下增加小图标 */\n/*\n.jg-caption-visible::before {\n    content: \"⊙ \";\n} \n.fancybox-caption__body::before {\n    content: \"⊙ \";\n} \n.img-alt.is-center::before {\n    content: \"⊙ \";\n}\n*/\n\n/* 滚动条 */\n::-webkit-scrollbar {\n    width: 10px;\n    height: 10px;\n}\n::-webkit-scrollbar-thumb {\n    background-color: rgb(136, 207, 219);\n    background-image: -webkit-linear-gradient( 90deg, rgba(255, 255, 255, 0.4) 20%, transparent 20%, transparent 40%, rgba(255, 255, 255, 0.4) 40%, rgba(255, 255, 255, 0.4) 60%, transparent 60%, transparent 80%, rgba(255, 255, 255, 0.4) 80%, rgba(255, 255, 255, 0.4) 100%);\n    border-radius: 2em;\n}\n::-webkit-scrollbar-corner {\n    background-color: transparent;\n}\n::-moz-selection {\n    color: #fff;\n    background-color: #c2f747;\n}\n/* @0.0.1 */"},{"title":"link","date":"2021-11-05T14:08:42.000Z","type":"link","_content":"\n","source":"link/index.md","raw":"---\ntitle: link\ndate: 2021-11-05 22:08:42\ntype: \"link\"\n---\n\n","updated":"2021-11-05T14:14:28.512Z","path":"link/index.html","comments":1,"layout":"page","_id":"cl3bbwfde000mt8j75xxt4nbk","content":"","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"cover":"/img/defaulttop.jpg","excerpt":"","more":""},{"title":"nps","date":"2021-11-12T01:26:57.000Z","top_img":"https://ytimg.googleusercontent.com/vi/A8XzEJPWAQw/maxresdefault.jpg","_content":"\n# nps\n\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://img.shields.io/github/stars/ehang-io/nps.svg\"></a></div>\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://img.shields.io/github/forks/ehang-io/nps.svg\"></div>\n<div style=\"display:inline-block;margin-left:10px;\"><a href=\"https://gitter.im/cnlh-nps/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\"><img src=\"https://badges.gitter.im/cnlh-nps/community.svg\"></a></div>\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://github.com/ehang-io/nps/workflows/Release/badge.svg\"></div>\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://img.shields.io/github/downloads/ehang-io/nps/total\"></div>\n\n[README](https://github.com/ehang-io/nps/blob/master/README.md)|[中文文档](https://github.com/ehang-io/nps/blob/master/README_zh.md)\n\nnps是一款轻量级、高性能、功能强大的**内网穿透**代理服务器。目前支持**tcp、udp流量转发**，可支持任何**tcp、udp**上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析等等……），此外还**支持内网http代理、内网socks5代理**、**p2p等**，并带有功能强大的web管理端。\n\n## 背景\n\n![image](https://github.com/ehang-io/nps/blob/master/image/web.png?raw=true)\n\n1. 做微信公众号开发、小程序开发等----> 域名代理模式\n\n2. 想在外网通过ssh连接内网的机器，做云服务器到内网服务器端口的映射，----> tcp代理模式\n\n3. 在非内网环境下使用内网dns，或者需要通过udp访问内网机器等----> udp代理模式\n\n4. 在外网使用HTTP代理访问内网站点----> http代理模式\n\n5. 搭建一个内网穿透ss，在外网如同使用内网vpn一样访问内网资源或者设备----> socks5代理模式\n## 特点\n- 协议支持全面，兼容几乎所有常用协议，例如tcp、udp、http(s)、socks5、p2p、http代理...\n- 全平台兼容(linux、windows、macos、群辉等)，支持一键安装为系统服务\n- 控制全面，同时支持服务端和客户端控制\n- https集成，支持将后端代理和web服务转成https，同时支持多证书\n- 操作简单，只需简单的配置即可在web ui上完成其余操作\n- 展示信息全面，流量、系统信息、即时带宽、客户端版本等\n- 扩展功能强大，该有的都有了（缓存、压缩、加密、流量限制、带宽限制、端口复用等等）\n- 域名解析具备自定义header、404页面配置、host修改、站点保护、URL路由、泛解析等功能\n- 服务端支持多用户和用户注册功能\n\n**没找到你想要的功能？不要紧，点击[进入文档](https://ehang-io.github.io/nps)查找吧**\n## 快速开始\n\n### 安装\n> [releases](https://github.com/ehang-io/nps/releases)\n\n下载对应的系统版本即可，服务端和客户端是单独的\n\n### 服务端启动\n下载完服务器压缩包后，解压，然后进入解压后的文件夹\n\n- 执行安装命令\n\n对于linux|darwin ```sudo ./nps install```\n\n对于windows，管理员身份运行cmd，进入安装目录 ```nps.exe install```\n\n- 默认端口\n\nnps默认配置文件使用了80，443，8080，8024端口\n\n80与443端口为域名解析模式默认端口\n\n8080为web管理访问端口\n\n8024为网桥端口，用于客户端与服务器通信\n\n- 启动\n\n对于linux|darwin ```sudo nps start```\n\n对于windows，管理员身份运行cmd，进入程序目录 ```nps.exe start```\n\n```安装后windows配置文件位于 C:\\Program Files\\nps，linux和darwin位于/etc/nps```\n\n**如果发现没有启动成功，可以查看日志(Windows日志文件位于当前运行目录下，linux和darwin位于/var/log/nps.log)**\n- 访问服务端ip:web服务端口（默认为8080）\n- 使用用户名和密码登陆（默认admin/123，正式使用一定要更改）\n- 创建客户端\n\n### 客户端连接\n- 点击web管理中客户端前的+号，复制启动命令\n- 执行启动命令，linux直接执行即可，windows将./npc换成npc.exe用cmd执行\n\n如果需要注册到系统服务可查看[注册到系统服务](https://ehang-io.github.io/nps/#/use?id=注册到系统服务)\n\n### 配置\n- 客户端连接后，在web中配置对应穿透服务即可\n- 更多高级用法见[完整文档](https://ehang-io.github.io/nps/)","source":"nps/index.md","raw":"---\ntitle: nps\ndate: 2021-11-12 09:26:57\ntop_img: https://ytimg.googleusercontent.com/vi/A8XzEJPWAQw/maxresdefault.jpg\n---\n\n# nps\n\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://img.shields.io/github/stars/ehang-io/nps.svg\"></a></div>\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://img.shields.io/github/forks/ehang-io/nps.svg\"></div>\n<div style=\"display:inline-block;margin-left:10px;\"><a href=\"https://gitter.im/cnlh-nps/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\"><img src=\"https://badges.gitter.im/cnlh-nps/community.svg\"></a></div>\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://github.com/ehang-io/nps/workflows/Release/badge.svg\"></div>\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://img.shields.io/github/downloads/ehang-io/nps/total\"></div>\n\n[README](https://github.com/ehang-io/nps/blob/master/README.md)|[中文文档](https://github.com/ehang-io/nps/blob/master/README_zh.md)\n\nnps是一款轻量级、高性能、功能强大的**内网穿透**代理服务器。目前支持**tcp、udp流量转发**，可支持任何**tcp、udp**上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析等等……），此外还**支持内网http代理、内网socks5代理**、**p2p等**，并带有功能强大的web管理端。\n\n## 背景\n\n![image](https://github.com/ehang-io/nps/blob/master/image/web.png?raw=true)\n\n1. 做微信公众号开发、小程序开发等----> 域名代理模式\n\n2. 想在外网通过ssh连接内网的机器，做云服务器到内网服务器端口的映射，----> tcp代理模式\n\n3. 在非内网环境下使用内网dns，或者需要通过udp访问内网机器等----> udp代理模式\n\n4. 在外网使用HTTP代理访问内网站点----> http代理模式\n\n5. 搭建一个内网穿透ss，在外网如同使用内网vpn一样访问内网资源或者设备----> socks5代理模式\n## 特点\n- 协议支持全面，兼容几乎所有常用协议，例如tcp、udp、http(s)、socks5、p2p、http代理...\n- 全平台兼容(linux、windows、macos、群辉等)，支持一键安装为系统服务\n- 控制全面，同时支持服务端和客户端控制\n- https集成，支持将后端代理和web服务转成https，同时支持多证书\n- 操作简单，只需简单的配置即可在web ui上完成其余操作\n- 展示信息全面，流量、系统信息、即时带宽、客户端版本等\n- 扩展功能强大，该有的都有了（缓存、压缩、加密、流量限制、带宽限制、端口复用等等）\n- 域名解析具备自定义header、404页面配置、host修改、站点保护、URL路由、泛解析等功能\n- 服务端支持多用户和用户注册功能\n\n**没找到你想要的功能？不要紧，点击[进入文档](https://ehang-io.github.io/nps)查找吧**\n## 快速开始\n\n### 安装\n> [releases](https://github.com/ehang-io/nps/releases)\n\n下载对应的系统版本即可，服务端和客户端是单独的\n\n### 服务端启动\n下载完服务器压缩包后，解压，然后进入解压后的文件夹\n\n- 执行安装命令\n\n对于linux|darwin ```sudo ./nps install```\n\n对于windows，管理员身份运行cmd，进入安装目录 ```nps.exe install```\n\n- 默认端口\n\nnps默认配置文件使用了80，443，8080，8024端口\n\n80与443端口为域名解析模式默认端口\n\n8080为web管理访问端口\n\n8024为网桥端口，用于客户端与服务器通信\n\n- 启动\n\n对于linux|darwin ```sudo nps start```\n\n对于windows，管理员身份运行cmd，进入程序目录 ```nps.exe start```\n\n```安装后windows配置文件位于 C:\\Program Files\\nps，linux和darwin位于/etc/nps```\n\n**如果发现没有启动成功，可以查看日志(Windows日志文件位于当前运行目录下，linux和darwin位于/var/log/nps.log)**\n- 访问服务端ip:web服务端口（默认为8080）\n- 使用用户名和密码登陆（默认admin/123，正式使用一定要更改）\n- 创建客户端\n\n### 客户端连接\n- 点击web管理中客户端前的+号，复制启动命令\n- 执行启动命令，linux直接执行即可，windows将./npc换成npc.exe用cmd执行\n\n如果需要注册到系统服务可查看[注册到系统服务](https://ehang-io.github.io/nps/#/use?id=注册到系统服务)\n\n### 配置\n- 客户端连接后，在web中配置对应穿透服务即可\n- 更多高级用法见[完整文档](https://ehang-io.github.io/nps/)","updated":"2021-11-12T08:04:29.970Z","path":"nps/index.html","comments":1,"layout":"page","_id":"cl3bbwfdf000pt8j7el5zhybw","content":"<h1 id=\"nps\"><a href=\"#nps\" class=\"headerlink\" title=\"nps\"></a>nps</h1><div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://img.shields.io/github/stars/ehang-io/nps.svg\"></a></div>\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://img.shields.io/github/forks/ehang-io/nps.svg\"></div>\n<div style=\"display:inline-block;margin-left:10px;\"><a href=\"https://gitter.im/cnlh-nps/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\"><img src=\"https://badges.gitter.im/cnlh-nps/community.svg\"></a></div>\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://github.com/ehang-io/nps/workflows/Release/badge.svg\"></div>\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://img.shields.io/github/downloads/ehang-io/nps/total\"></div>\n\n<p><a href=\"https://github.com/ehang-io/nps/blob/master/README.md\">README</a>|<a href=\"https://github.com/ehang-io/nps/blob/master/README_zh.md\">中文文档</a></p>\n<p>nps是一款轻量级、高性能、功能强大的<strong>内网穿透</strong>代理服务器。目前支持<strong>tcp、udp流量转发</strong>，可支持任何<strong>tcp、udp</strong>上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析等等……），此外还<strong>支持内网http代理、内网socks5代理</strong>、<strong>p2p等</strong>，并带有功能强大的web管理端。</p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p><img src=\"https://github.com/ehang-io/nps/blob/master/image/web.png?raw=true\" alt=\"image\"></p>\n<ol>\n<li><p>做微信公众号开发、小程序开发等—-&gt; 域名代理模式</p>\n</li>\n<li><p>想在外网通过ssh连接内网的机器，做云服务器到内网服务器端口的映射，—-&gt; tcp代理模式</p>\n</li>\n<li><p>在非内网环境下使用内网dns，或者需要通过udp访问内网机器等—-&gt; udp代理模式</p>\n</li>\n<li><p>在外网使用HTTP代理访问内网站点—-&gt; http代理模式</p>\n</li>\n<li><p>搭建一个内网穿透ss，在外网如同使用内网vpn一样访问内网资源或者设备—-&gt; socks5代理模式</p>\n<h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2></li>\n</ol>\n<ul>\n<li>协议支持全面，兼容几乎所有常用协议，例如tcp、udp、http(s)、socks5、p2p、http代理…</li>\n<li>全平台兼容(linux、windows、macos、群辉等)，支持一键安装为系统服务</li>\n<li>控制全面，同时支持服务端和客户端控制</li>\n<li>https集成，支持将后端代理和web服务转成https，同时支持多证书</li>\n<li>操作简单，只需简单的配置即可在web ui上完成其余操作</li>\n<li>展示信息全面，流量、系统信息、即时带宽、客户端版本等</li>\n<li>扩展功能强大，该有的都有了（缓存、压缩、加密、流量限制、带宽限制、端口复用等等）</li>\n<li>域名解析具备自定义header、404页面配置、host修改、站点保护、URL路由、泛解析等功能</li>\n<li>服务端支持多用户和用户注册功能</li>\n</ul>\n<p><strong>没找到你想要的功能？不要紧，点击<a href=\"https://ehang-io.github.io/nps\">进入文档</a>查找吧</strong></p>\n<h2 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><blockquote>\n<p><a href=\"https://github.com/ehang-io/nps/releases\">releases</a></p>\n</blockquote>\n<p>下载对应的系统版本即可，服务端和客户端是单独的</p>\n<h3 id=\"服务端启动\"><a href=\"#服务端启动\" class=\"headerlink\" title=\"服务端启动\"></a>服务端启动</h3><p>下载完服务器压缩包后，解压，然后进入解压后的文件夹</p>\n<ul>\n<li>执行安装命令</li>\n</ul>\n<p>对于linux|darwin <code>sudo ./nps install</code></p>\n<p>对于windows，管理员身份运行cmd，进入安装目录 <code>nps.exe install</code></p>\n<ul>\n<li>默认端口</li>\n</ul>\n<p>nps默认配置文件使用了80，443，8080，8024端口</p>\n<p>80与443端口为域名解析模式默认端口</p>\n<p>8080为web管理访问端口</p>\n<p>8024为网桥端口，用于客户端与服务器通信</p>\n<ul>\n<li>启动</li>\n</ul>\n<p>对于linux|darwin <code>sudo nps start</code></p>\n<p>对于windows，管理员身份运行cmd，进入程序目录 <code>nps.exe start</code></p>\n<p><code>安装后windows配置文件位于 C:\\Program Files\\nps，linux和darwin位于/etc/nps</code></p>\n<p><strong>如果发现没有启动成功，可以查看日志(Windows日志文件位于当前运行目录下，linux和darwin位于/var/log/nps.log)</strong></p>\n<ul>\n<li>访问服务端ip:web服务端口（默认为8080）</li>\n<li>使用用户名和密码登陆（默认admin/123，正式使用一定要更改）</li>\n<li>创建客户端</li>\n</ul>\n<h3 id=\"客户端连接\"><a href=\"#客户端连接\" class=\"headerlink\" title=\"客户端连接\"></a>客户端连接</h3><ul>\n<li>点击web管理中客户端前的+号，复制启动命令</li>\n<li>执行启动命令，linux直接执行即可，windows将./npc换成npc.exe用cmd执行</li>\n</ul>\n<p>如果需要注册到系统服务可查看<a href=\"https://ehang-io.github.io/nps/#/use?id=%E6%B3%A8%E5%86%8C%E5%88%B0%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1\">注册到系统服务</a></p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><ul>\n<li>客户端连接后，在web中配置对应穿透服务即可</li>\n<li>更多高级用法见<a href=\"https://ehang-io.github.io/nps/\">完整文档</a></li>\n</ul>\n","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"cover":"/img/defaulttop.jpg","excerpt":"","more":"<h1 id=\"nps\"><a href=\"#nps\" class=\"headerlink\" title=\"nps\"></a>nps</h1><div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://img.shields.io/github/stars/ehang-io/nps.svg\"></a></div>\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://img.shields.io/github/forks/ehang-io/nps.svg\"></div>\n<div style=\"display:inline-block;margin-left:10px;\"><a href=\"https://gitter.im/cnlh-nps/community?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge\"><img src=\"https://badges.gitter.im/cnlh-nps/community.svg\"></a></div>\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://github.com/ehang-io/nps/workflows/Release/badge.svg\"></div>\n<div style=\"display:inline-block;margin-left:10px;\"><img src=\"https://img.shields.io/github/downloads/ehang-io/nps/total\"></div>\n\n<p><a href=\"https://github.com/ehang-io/nps/blob/master/README.md\">README</a>|<a href=\"https://github.com/ehang-io/nps/blob/master/README_zh.md\">中文文档</a></p>\n<p>nps是一款轻量级、高性能、功能强大的<strong>内网穿透</strong>代理服务器。目前支持<strong>tcp、udp流量转发</strong>，可支持任何<strong>tcp、udp</strong>上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析等等……），此外还<strong>支持内网http代理、内网socks5代理</strong>、<strong>p2p等</strong>，并带有功能强大的web管理端。</p>\n<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p><img src=\"https://github.com/ehang-io/nps/blob/master/image/web.png?raw=true\" alt=\"image\"></p>\n<ol>\n<li><p>做微信公众号开发、小程序开发等—-&gt; 域名代理模式</p>\n</li>\n<li><p>想在外网通过ssh连接内网的机器，做云服务器到内网服务器端口的映射，—-&gt; tcp代理模式</p>\n</li>\n<li><p>在非内网环境下使用内网dns，或者需要通过udp访问内网机器等—-&gt; udp代理模式</p>\n</li>\n<li><p>在外网使用HTTP代理访问内网站点—-&gt; http代理模式</p>\n</li>\n<li><p>搭建一个内网穿透ss，在外网如同使用内网vpn一样访问内网资源或者设备—-&gt; socks5代理模式</p>\n<h2 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h2></li>\n</ol>\n<ul>\n<li>协议支持全面，兼容几乎所有常用协议，例如tcp、udp、http(s)、socks5、p2p、http代理…</li>\n<li>全平台兼容(linux、windows、macos、群辉等)，支持一键安装为系统服务</li>\n<li>控制全面，同时支持服务端和客户端控制</li>\n<li>https集成，支持将后端代理和web服务转成https，同时支持多证书</li>\n<li>操作简单，只需简单的配置即可在web ui上完成其余操作</li>\n<li>展示信息全面，流量、系统信息、即时带宽、客户端版本等</li>\n<li>扩展功能强大，该有的都有了（缓存、压缩、加密、流量限制、带宽限制、端口复用等等）</li>\n<li>域名解析具备自定义header、404页面配置、host修改、站点保护、URL路由、泛解析等功能</li>\n<li>服务端支持多用户和用户注册功能</li>\n</ul>\n<p><strong>没找到你想要的功能？不要紧，点击<a href=\"https://ehang-io.github.io/nps\">进入文档</a>查找吧</strong></p>\n<h2 id=\"快速开始\"><a href=\"#快速开始\" class=\"headerlink\" title=\"快速开始\"></a>快速开始</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><blockquote>\n<p><a href=\"https://github.com/ehang-io/nps/releases\">releases</a></p>\n</blockquote>\n<p>下载对应的系统版本即可，服务端和客户端是单独的</p>\n<h3 id=\"服务端启动\"><a href=\"#服务端启动\" class=\"headerlink\" title=\"服务端启动\"></a>服务端启动</h3><p>下载完服务器压缩包后，解压，然后进入解压后的文件夹</p>\n<ul>\n<li>执行安装命令</li>\n</ul>\n<p>对于linux|darwin <code>sudo ./nps install</code></p>\n<p>对于windows，管理员身份运行cmd，进入安装目录 <code>nps.exe install</code></p>\n<ul>\n<li>默认端口</li>\n</ul>\n<p>nps默认配置文件使用了80，443，8080，8024端口</p>\n<p>80与443端口为域名解析模式默认端口</p>\n<p>8080为web管理访问端口</p>\n<p>8024为网桥端口，用于客户端与服务器通信</p>\n<ul>\n<li>启动</li>\n</ul>\n<p>对于linux|darwin <code>sudo nps start</code></p>\n<p>对于windows，管理员身份运行cmd，进入程序目录 <code>nps.exe start</code></p>\n<p><code>安装后windows配置文件位于 C:\\Program Files\\nps，linux和darwin位于/etc/nps</code></p>\n<p><strong>如果发现没有启动成功，可以查看日志(Windows日志文件位于当前运行目录下，linux和darwin位于/var/log/nps.log)</strong></p>\n<ul>\n<li>访问服务端ip:web服务端口（默认为8080）</li>\n<li>使用用户名和密码登陆（默认admin/123，正式使用一定要更改）</li>\n<li>创建客户端</li>\n</ul>\n<h3 id=\"客户端连接\"><a href=\"#客户端连接\" class=\"headerlink\" title=\"客户端连接\"></a>客户端连接</h3><ul>\n<li>点击web管理中客户端前的+号，复制启动命令</li>\n<li>执行启动命令，linux直接执行即可，windows将./npc换成npc.exe用cmd执行</li>\n</ul>\n<p>如果需要注册到系统服务可查看<a href=\"https://ehang-io.github.io/nps/#/use?id=%E6%B3%A8%E5%86%8C%E5%88%B0%E7%B3%BB%E7%BB%9F%E6%9C%8D%E5%8A%A1\">注册到系统服务</a></p>\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><ul>\n<li>客户端连接后，在web中配置对应穿透服务即可</li>\n<li>更多高级用法见<a href=\"https://ehang-io.github.io/nps/\">完整文档</a></li>\n</ul>\n"},{"title":"schedule","date":"2021-05-01T16:47:25.000Z","type":"schedule","_content":"","source":"schedule/index.md","raw":"---\ntitle: schedule\ndate: 2021-05-02 00:47:25\ntype: schedule\n---","updated":"2021-05-01T16:47:52.453Z","path":"schedule/index.html","comments":1,"layout":"page","_id":"cl3bbwfdg000tt8j72pd8gv6h","content":"","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"cover":"/img/defaulttop.jpg","excerpt":"","more":""},{"title":"tags","date":"2021-05-01T12:12:05.000Z","type":"tags","_content":"\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-05-01 20:12:05\ntype: \"tags\"\n---\n\n","updated":"2021-05-01T12:12:36.204Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cl3bbwfdg000xt8j7d30p09jt","content":"","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"cover":"/img/defaulttop.jpg","excerpt":"","more":""}],"Post":[{"title":"Python-pip","date":"2021-05-01T10:00:03.000Z","cover":"https://pypi.org/static/images/logo-large.6bdbb439.svg","_content":"\n# 卸载旧版本\n\n如果有旧的python3.x版本，可以先卸载，但建议不要卸载，因为有很多依赖，替换版本号，执行以下命令:\n\n```bash\napt-get autoremove python3.5 python3.5-dev\n```\n\n# 安装步骤\n\n## 补全相关组件：\n\n```bash\nsudo apt-get install dirmngr sudo gcc\n```\n\n## 编辑apt的源文件\n\n```bash\nvim /etc/apt/sources.list\n```\n\n添加以下源\n\n```bash\ndeb http://mirrors.163.com/ubuntu/ bionic main\n```\n\n为源添加KEY\n\n```bash\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32\n```\n\n让服务器使用 “稳定版” 的库成为默认软件库：\n\n```bash\necho 'APT::Default-Release \"stable\";' | sudo tee -a /etc/apt/apt.conf.d/00local\n```\n\n更新源\n\n```bash\nsudo apt-get update\n```\n\n## 安装python3.6\n\n```bash\nsudo apt-get -t bionic install python3.6 python3.6-dev python3-distutils python3-pip\nln -s /usr/bin/python3.6 /usr/bin/python3\n```\n\n## 安装pip3.6\n\n```bash\nwget https://bootstrap.pypa.io/get-pip.py\npython3 get-pip.py\n```\n\npython2.x安装pip\n\n```bash\npython2.7 get-pip.py\n```\n\n检查setuptools是否安装成功：\n\n```bash\neasy_install --version\nsudo apt-get clean\n```\n\n设置使用国内PIP源：\n\n```bash\nvim ~/.pip/pip.conf\n[global]\nindex-url = http://mirrors.aliyun.com/pypi/simple/\ntrusted-host = mirrors.aliyun.com\n```\n","source":"_posts/2021-05-01-Python-pip.md","raw":"---\ntitle: Python-pip\ndate: 2021-05-01 18:00:03\ncover: https://pypi.org/static/images/logo-large.6bdbb439.svg\ntags:\n- [工具]\ncategories:\n- [建站]\n---\n\n# 卸载旧版本\n\n如果有旧的python3.x版本，可以先卸载，但建议不要卸载，因为有很多依赖，替换版本号，执行以下命令:\n\n```bash\napt-get autoremove python3.5 python3.5-dev\n```\n\n# 安装步骤\n\n## 补全相关组件：\n\n```bash\nsudo apt-get install dirmngr sudo gcc\n```\n\n## 编辑apt的源文件\n\n```bash\nvim /etc/apt/sources.list\n```\n\n添加以下源\n\n```bash\ndeb http://mirrors.163.com/ubuntu/ bionic main\n```\n\n为源添加KEY\n\n```bash\nsudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32\n```\n\n让服务器使用 “稳定版” 的库成为默认软件库：\n\n```bash\necho 'APT::Default-Release \"stable\";' | sudo tee -a /etc/apt/apt.conf.d/00local\n```\n\n更新源\n\n```bash\nsudo apt-get update\n```\n\n## 安装python3.6\n\n```bash\nsudo apt-get -t bionic install python3.6 python3.6-dev python3-distutils python3-pip\nln -s /usr/bin/python3.6 /usr/bin/python3\n```\n\n## 安装pip3.6\n\n```bash\nwget https://bootstrap.pypa.io/get-pip.py\npython3 get-pip.py\n```\n\npython2.x安装pip\n\n```bash\npython2.7 get-pip.py\n```\n\n检查setuptools是否安装成功：\n\n```bash\neasy_install --version\nsudo apt-get clean\n```\n\n设置使用国内PIP源：\n\n```bash\nvim ~/.pip/pip.conf\n[global]\nindex-url = http://mirrors.aliyun.com/pypi/simple/\ntrusted-host = mirrors.aliyun.com\n```\n","slug":"Python-pip","published":1,"updated":"2022-05-17T13:52:07.266Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3bbwfcu0001t8j7d86dg3vd","content":"<h1 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h1><p>如果有旧的python3.x版本，可以先卸载，但建议不要卸载，因为有很多依赖，替换版本号，执行以下命令:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get autoremove python3.5 python3.5-dev</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h1><h2 id=\"补全相关组件：\"><a href=\"#补全相关组件：\" class=\"headerlink\" title=\"补全相关组件：\"></a>补全相关组件：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install dirmngr sudo gcc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"编辑apt的源文件\"><a href=\"#编辑apt的源文件\" class=\"headerlink\" title=\"编辑apt的源文件\"></a>编辑apt的源文件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n\n<p>添加以下源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http://mirrors.163.com/ubuntu/ bionic main</span><br></pre></td></tr></table></figure>\n\n<p>为源添加KEY</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32</span><br></pre></td></tr></table></figure>\n\n<p>让服务器使用 “稳定版” 的库成为默认软件库：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;APT::Default-Release &quot;stable&quot;;&#x27;</span> | sudo tee -a /etc/apt/apt.conf.d/00local</span><br></pre></td></tr></table></figure>\n\n<p>更新源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装python3-6\"><a href=\"#安装python3-6\" class=\"headerlink\" title=\"安装python3.6\"></a>安装python3.6</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get -t bionic install python3.6 python3.6-dev python3-distutils python3-pip</span><br><span class=\"line\">ln -s /usr/bin/python3.6 /usr/bin/python3</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装pip3-6\"><a href=\"#安装pip3-6\" class=\"headerlink\" title=\"安装pip3.6\"></a>安装pip3.6</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class=\"line\">python3 get-pip.py</span><br></pre></td></tr></table></figure>\n\n<p>python2.x安装pip</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python2.7 get-pip.py</span><br></pre></td></tr></table></figure>\n\n<p>检查setuptools是否安装成功：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">easy_install --version</span><br><span class=\"line\">sudo apt-get clean</span><br></pre></td></tr></table></figure>\n\n<p>设置使用国内PIP源：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.pip/pip.conf</span><br><span class=\"line\">[global]</span><br><span class=\"line\">index-url = http://mirrors.aliyun.com/pypi/simple/</span><br><span class=\"line\">trusted-host = mirrors.aliyun.com</span><br></pre></td></tr></table></figure>\n","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"excerpt":"","more":"<h1 id=\"卸载旧版本\"><a href=\"#卸载旧版本\" class=\"headerlink\" title=\"卸载旧版本\"></a>卸载旧版本</h1><p>如果有旧的python3.x版本，可以先卸载，但建议不要卸载，因为有很多依赖，替换版本号，执行以下命令:</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get autoremove python3.5 python3.5-dev</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h1><h2 id=\"补全相关组件：\"><a href=\"#补全相关组件：\" class=\"headerlink\" title=\"补全相关组件：\"></a>补全相关组件：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install dirmngr sudo gcc</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"编辑apt的源文件\"><a href=\"#编辑apt的源文件\" class=\"headerlink\" title=\"编辑apt的源文件\"></a>编辑apt的源文件</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/apt/sources.list</span><br></pre></td></tr></table></figure>\n\n<p>添加以下源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deb http://mirrors.163.com/ubuntu/ bionic main</span><br></pre></td></tr></table></figure>\n\n<p>为源添加KEY</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32</span><br></pre></td></tr></table></figure>\n\n<p>让服务器使用 “稳定版” 的库成为默认软件库：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&#x27;APT::Default-Release &quot;stable&quot;;&#x27;</span> | sudo tee -a /etc/apt/apt.conf.d/00local</span><br></pre></td></tr></table></figure>\n\n<p>更新源</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get update</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装python3-6\"><a href=\"#安装python3-6\" class=\"headerlink\" title=\"安装python3.6\"></a>安装python3.6</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get -t bionic install python3.6 python3.6-dev python3-distutils python3-pip</span><br><span class=\"line\">ln -s /usr/bin/python3.6 /usr/bin/python3</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"安装pip3-6\"><a href=\"#安装pip3-6\" class=\"headerlink\" title=\"安装pip3.6\"></a>安装pip3.6</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class=\"line\">python3 get-pip.py</span><br></pre></td></tr></table></figure>\n\n<p>python2.x安装pip</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python2.7 get-pip.py</span><br></pre></td></tr></table></figure>\n\n<p>检查setuptools是否安装成功：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">easy_install --version</span><br><span class=\"line\">sudo apt-get clean</span><br></pre></td></tr></table></figure>\n\n<p>设置使用国内PIP源：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim ~/.pip/pip.conf</span><br><span class=\"line\">[global]</span><br><span class=\"line\">index-url = http://mirrors.aliyun.com/pypi/simple/</span><br><span class=\"line\">trusted-host = mirrors.aliyun.com</span><br></pre></td></tr></table></figure>\n"},{"title":"Syncthing","date":"2021-05-01T09:54:43.000Z","cover":"https://docs.syncthing.net/_images/gs1.png","_content":"\n# Syncthing Discovery Server\n\n下载 stdiscosrv 包\n\n```bash\nwget https://github.com/syncthing/discosrv/releases/download/*version*/stdiscosrv-linux-amd64-*version*.tar.gz\n```\n\n解压\n\n```bash\ntar -xzvf stdiscosrv-linux-amd64-*version*.tar.gz\n```\n\n# Syncthing Relay Server\n\n下载strelaysrv\n\n```bash\nwget https://github.com/syncthing/relaysrv/releases/download/*version*/strelaysrv-linux-amd64-*version*.tar.gz\n```\n\n解压\n\n```bash\ntar -xzvf strelaysrv-linux-amd64-*version*.tar.gz\n```\n\n放入`/usr/bin/relaysrv`方便直接运行(顺便改个名)\n\n```bash\nmv strelaysrv-linux-amd64-*version*/strelaysrv /usr/bin/relaysrv\n```\n\n清理安装包\n\n```bash\nrm -rf strelaysrv-linux-amd64-*version* strelaysrv-linux-amd64-*version*.tar.gz\n```\n\n```bash\nuseradd relaysrv -s /bin/false\n#创建存储配置用的目录并修改所有者\nmkdir /etc/relaysrv\nchown relaysrv /etc/relaysrv\n```\n\n在`/etc/supervisord.conf`文档最后加上下面这段设置\n\n```bash\n[program:relaysrv]\ncommand=relaysrv -keys /etc/relaysrv -pools=\"\"\nautostart=true\nautorestart=true\nstartsecs=10\nstdout_logfile=/var/log/relaysrv.log\nstdout_logfile_maxbytes=1MB\nstdout_logfile_backups=10\nstdout_capture_maxbytes=1MB\nredirect_stderr=true\nuser = root\n\n[program:discosrv]\ncommand=discosrv /etc/discosrv\nuser = root\nautostart=true\nautorestart=true\nredirect_stderr=true\nstartsecs=10\nstdout_logfile=/var/log/discosrv.log\nstdout_logfile_maxbytes=1MB\nstdout_logfile_backups=2\nstdout_capture_maxbytes=1MB\n\n#program后面跟服务的名称\n#command是程序的执行路径\n#autorstart是表示应用程序随supervisor的启动而启动\n#stdout_logfile是捕获标准输出。\n```\n\n也可以选择加上\n\n```bash\n[include]files = /etc/supervisor/conf.d/*.ini（此地址文件中放置上段设置）\n```\n\nrelaysrv启动配置\n\n```bash\n-debug 启用调试输出-ext-address=<address> 可选的外部地址(将被上报)，能够通过端口转发来监听高权限端口(0-1024)然后外部可以连接这个端口-global-rate=<bytes/s> 全局限速，单位 bytes/s-keys=<dir> 用于存储 cert.pem 和 key.pem 的目录，默认是 \".\"(当前目录)-listen=<listen addr> 协议监听的地址，默认是 \":22067\"-message-timeout=<duration> 等待消息到达的最大时间(默认 1m0s)-nat 使用UPnP/NAT-PMP来取得外部端口映射-nat-lease=<duration> NAT租赁时间，单位分钟(默认 60)-nat-renewal=<duration> NAT刷新频率，单位分钟(默认 30)-nat-timeout=<duration> NAT发现超时，单位秒(默认 10)-network-timeout=<duration> 客户端和中继之间网络操作的超时，如果在这个时间段内客户端和中继之间没有数据被接收到，那么连接将被终止。此外，如果在这段时间内任何被中继的客户端没有数据发送，这个会话也会被终止(默认 2m0s)-per-session-rate=<bytes/s> 每个会话的限速，单位 bytes/s-ping-interval=<duration> ping的发送间隔(默认 1m0s)-pools=<pool addresses> 中继服务器池的地址，使用逗号分隔多个(默认 \"http://relays.syncthing.net/endpoint\")。留空(-pools=\"\")来禁止公布这个服务器到池中，以便作为私有中继。-protocol=<string> 监听协议，\"tcp\"来监听IPv4和IPv6，\"tcp4\"来监听IPv4，\"tcp6\"来监听IPv6(默认 \"tcp\")-provided-by=<string> 一个可选的描述字段来表示谁提供了这个中继(可以打打广告啥的)-status-srv=<listen addr> 提供状态服务的监听地址(默认 \":22070\")，用于中继服务器池页面来展示服务器状态(传输了多少数据，有多少客户端在线等等)，留空(-status-srv=\"\")来禁用这个功能-pools=\"\"\n```\n\n带配置文件启动\n\n```bash\nsupervisord -c /etc/supervisor/supervisor.conf\n```\n","source":"_posts/2021-05-01-Syncthing.md","raw":"---\ntitle: Syncthing\ndate: 2021-05-01 17:54:43\ncover: https://docs.syncthing.net/_images/gs1.png\ntags:\n- [工具]\ncategories:\n- [建站]\n---\n\n# Syncthing Discovery Server\n\n下载 stdiscosrv 包\n\n```bash\nwget https://github.com/syncthing/discosrv/releases/download/*version*/stdiscosrv-linux-amd64-*version*.tar.gz\n```\n\n解压\n\n```bash\ntar -xzvf stdiscosrv-linux-amd64-*version*.tar.gz\n```\n\n# Syncthing Relay Server\n\n下载strelaysrv\n\n```bash\nwget https://github.com/syncthing/relaysrv/releases/download/*version*/strelaysrv-linux-amd64-*version*.tar.gz\n```\n\n解压\n\n```bash\ntar -xzvf strelaysrv-linux-amd64-*version*.tar.gz\n```\n\n放入`/usr/bin/relaysrv`方便直接运行(顺便改个名)\n\n```bash\nmv strelaysrv-linux-amd64-*version*/strelaysrv /usr/bin/relaysrv\n```\n\n清理安装包\n\n```bash\nrm -rf strelaysrv-linux-amd64-*version* strelaysrv-linux-amd64-*version*.tar.gz\n```\n\n```bash\nuseradd relaysrv -s /bin/false\n#创建存储配置用的目录并修改所有者\nmkdir /etc/relaysrv\nchown relaysrv /etc/relaysrv\n```\n\n在`/etc/supervisord.conf`文档最后加上下面这段设置\n\n```bash\n[program:relaysrv]\ncommand=relaysrv -keys /etc/relaysrv -pools=\"\"\nautostart=true\nautorestart=true\nstartsecs=10\nstdout_logfile=/var/log/relaysrv.log\nstdout_logfile_maxbytes=1MB\nstdout_logfile_backups=10\nstdout_capture_maxbytes=1MB\nredirect_stderr=true\nuser = root\n\n[program:discosrv]\ncommand=discosrv /etc/discosrv\nuser = root\nautostart=true\nautorestart=true\nredirect_stderr=true\nstartsecs=10\nstdout_logfile=/var/log/discosrv.log\nstdout_logfile_maxbytes=1MB\nstdout_logfile_backups=2\nstdout_capture_maxbytes=1MB\n\n#program后面跟服务的名称\n#command是程序的执行路径\n#autorstart是表示应用程序随supervisor的启动而启动\n#stdout_logfile是捕获标准输出。\n```\n\n也可以选择加上\n\n```bash\n[include]files = /etc/supervisor/conf.d/*.ini（此地址文件中放置上段设置）\n```\n\nrelaysrv启动配置\n\n```bash\n-debug 启用调试输出-ext-address=<address> 可选的外部地址(将被上报)，能够通过端口转发来监听高权限端口(0-1024)然后外部可以连接这个端口-global-rate=<bytes/s> 全局限速，单位 bytes/s-keys=<dir> 用于存储 cert.pem 和 key.pem 的目录，默认是 \".\"(当前目录)-listen=<listen addr> 协议监听的地址，默认是 \":22067\"-message-timeout=<duration> 等待消息到达的最大时间(默认 1m0s)-nat 使用UPnP/NAT-PMP来取得外部端口映射-nat-lease=<duration> NAT租赁时间，单位分钟(默认 60)-nat-renewal=<duration> NAT刷新频率，单位分钟(默认 30)-nat-timeout=<duration> NAT发现超时，单位秒(默认 10)-network-timeout=<duration> 客户端和中继之间网络操作的超时，如果在这个时间段内客户端和中继之间没有数据被接收到，那么连接将被终止。此外，如果在这段时间内任何被中继的客户端没有数据发送，这个会话也会被终止(默认 2m0s)-per-session-rate=<bytes/s> 每个会话的限速，单位 bytes/s-ping-interval=<duration> ping的发送间隔(默认 1m0s)-pools=<pool addresses> 中继服务器池的地址，使用逗号分隔多个(默认 \"http://relays.syncthing.net/endpoint\")。留空(-pools=\"\")来禁止公布这个服务器到池中，以便作为私有中继。-protocol=<string> 监听协议，\"tcp\"来监听IPv4和IPv6，\"tcp4\"来监听IPv4，\"tcp6\"来监听IPv6(默认 \"tcp\")-provided-by=<string> 一个可选的描述字段来表示谁提供了这个中继(可以打打广告啥的)-status-srv=<listen addr> 提供状态服务的监听地址(默认 \":22070\")，用于中继服务器池页面来展示服务器状态(传输了多少数据，有多少客户端在线等等)，留空(-status-srv=\"\")来禁用这个功能-pools=\"\"\n```\n\n带配置文件启动\n\n```bash\nsupervisord -c /etc/supervisor/supervisor.conf\n```\n","slug":"Syncthing","published":1,"updated":"2022-05-17T13:51:56.865Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3bbwfcy0003t8j7g75f7240","content":"<h1 id=\"Syncthing-Discovery-Server\"><a href=\"#Syncthing-Discovery-Server\" class=\"headerlink\" title=\"Syncthing Discovery Server\"></a>Syncthing Discovery Server</h1><p>下载 stdiscosrv 包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/syncthing/discosrv/releases/download/*version*/stdiscosrv-linux-amd64-*version*.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>解压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xzvf stdiscosrv-linux-amd64-*version*.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Syncthing-Relay-Server\"><a href=\"#Syncthing-Relay-Server\" class=\"headerlink\" title=\"Syncthing Relay Server\"></a>Syncthing Relay Server</h1><p>下载strelaysrv</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/syncthing/relaysrv/releases/download/*version*/strelaysrv-linux-amd64-*version*.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>解压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xzvf strelaysrv-linux-amd64-*version*.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>放入<code>/usr/bin/relaysrv</code>方便直接运行(顺便改个名)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv strelaysrv-linux-amd64-*version*/strelaysrv /usr/bin/relaysrv</span><br></pre></td></tr></table></figure>\n\n<p>清理安装包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf strelaysrv-linux-amd64-*version* strelaysrv-linux-amd64-*version*.tar.gz</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd relaysrv -s /bin/<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\">#创建存储配置用的目录并修改所有者</span></span><br><span class=\"line\">mkdir /etc/relaysrv</span><br><span class=\"line\">chown relaysrv /etc/relaysrv</span><br></pre></td></tr></table></figure>\n\n<p>在<code>/etc/supervisord.conf</code>文档最后加上下面这段设置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[program:relaysrv]</span><br><span class=\"line\"><span class=\"built_in\">command</span>=relaysrv -keys /etc/relaysrv -pools=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">autostart=<span class=\"literal\">true</span></span><br><span class=\"line\">autorestart=<span class=\"literal\">true</span></span><br><span class=\"line\">startsecs=10</span><br><span class=\"line\">stdout_logfile=/var/<span class=\"built_in\">log</span>/relaysrv.log</span><br><span class=\"line\">stdout_logfile_maxbytes=1MB</span><br><span class=\"line\">stdout_logfile_backups=10</span><br><span class=\"line\">stdout_capture_maxbytes=1MB</span><br><span class=\"line\">redirect_stderr=<span class=\"literal\">true</span></span><br><span class=\"line\">user = root</span><br><span class=\"line\"></span><br><span class=\"line\">[program:discosrv]</span><br><span class=\"line\"><span class=\"built_in\">command</span>=discosrv /etc/discosrv</span><br><span class=\"line\">user = root</span><br><span class=\"line\">autostart=<span class=\"literal\">true</span></span><br><span class=\"line\">autorestart=<span class=\"literal\">true</span></span><br><span class=\"line\">redirect_stderr=<span class=\"literal\">true</span></span><br><span class=\"line\">startsecs=10</span><br><span class=\"line\">stdout_logfile=/var/<span class=\"built_in\">log</span>/discosrv.log</span><br><span class=\"line\">stdout_logfile_maxbytes=1MB</span><br><span class=\"line\">stdout_logfile_backups=2</span><br><span class=\"line\">stdout_capture_maxbytes=1MB</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#program后面跟服务的名称</span></span><br><span class=\"line\"><span class=\"comment\">#command是程序的执行路径</span></span><br><span class=\"line\"><span class=\"comment\">#autorstart是表示应用程序随supervisor的启动而启动</span></span><br><span class=\"line\"><span class=\"comment\">#stdout_logfile是捕获标准输出。</span></span><br></pre></td></tr></table></figure>\n\n<p>也可以选择加上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[include]files = /etc/supervisor/conf.d/*.ini（此地址文件中放置上段设置）</span><br></pre></td></tr></table></figure>\n\n<p>relaysrv启动配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-debug 启用调试输出-ext-address=&lt;address&gt; 可选的外部地址(将被上报)，能够通过端口转发来监听高权限端口(0-1024)然后外部可以连接这个端口-global-rate=&lt;bytes/s&gt; 全局限速，单位 bytes/s-keys=&lt;dir&gt; 用于存储 cert.pem 和 key.pem 的目录，默认是 <span class=\"string\">&quot;.&quot;</span>(当前目录)-listen=&lt;listen addr&gt; 协议监听的地址，默认是 <span class=\"string\">&quot;:22067&quot;</span>-message-timeout=&lt;duration&gt; 等待消息到达的最大时间(默认 1m0s)-nat 使用UPnP/NAT-PMP来取得外部端口映射-nat-lease=&lt;duration&gt; NAT租赁时间，单位分钟(默认 60)-nat-renewal=&lt;duration&gt; NAT刷新频率，单位分钟(默认 30)-nat-timeout=&lt;duration&gt; NAT发现超时，单位秒(默认 10)-network-timeout=&lt;duration&gt; 客户端和中继之间网络操作的超时，如果在这个时间段内客户端和中继之间没有数据被接收到，那么连接将被终止。此外，如果在这段时间内任何被中继的客户端没有数据发送，这个会话也会被终止(默认 2m0s)-per-session-rate=&lt;bytes/s&gt; 每个会话的限速，单位 bytes/s-ping-interval=&lt;duration&gt; ping的发送间隔(默认 1m0s)-pools=&lt;pool addresses&gt; 中继服务器池的地址，使用逗号分隔多个(默认 <span class=\"string\">&quot;http://relays.syncthing.net/endpoint&quot;</span>)。留空(-pools=<span class=\"string\">&quot;&quot;</span>)来禁止公布这个服务器到池中，以便作为私有中继。-protocol=&lt;string&gt; 监听协议，<span class=\"string\">&quot;tcp&quot;</span>来监听IPv4和IPv6，<span class=\"string\">&quot;tcp4&quot;</span>来监听IPv4，<span class=\"string\">&quot;tcp6&quot;</span>来监听IPv6(默认 <span class=\"string\">&quot;tcp&quot;</span>)-provided-by=&lt;string&gt; 一个可选的描述字段来表示谁提供了这个中继(可以打打广告啥的)-status-srv=&lt;listen addr&gt; 提供状态服务的监听地址(默认 <span class=\"string\">&quot;:22070&quot;</span>)，用于中继服务器池页面来展示服务器状态(传输了多少数据，有多少客户端在线等等)，留空(-status-srv=<span class=\"string\">&quot;&quot;</span>)来禁用这个功能-pools=<span class=\"string\">&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>带配置文件启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">supervisord -c /etc/supervisor/supervisor.conf</span><br></pre></td></tr></table></figure>\n","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"excerpt":"","more":"<h1 id=\"Syncthing-Discovery-Server\"><a href=\"#Syncthing-Discovery-Server\" class=\"headerlink\" title=\"Syncthing Discovery Server\"></a>Syncthing Discovery Server</h1><p>下载 stdiscosrv 包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/syncthing/discosrv/releases/download/*version*/stdiscosrv-linux-amd64-*version*.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>解压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xzvf stdiscosrv-linux-amd64-*version*.tar.gz</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Syncthing-Relay-Server\"><a href=\"#Syncthing-Relay-Server\" class=\"headerlink\" title=\"Syncthing Relay Server\"></a>Syncthing Relay Server</h1><p>下载strelaysrv</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://github.com/syncthing/relaysrv/releases/download/*version*/strelaysrv-linux-amd64-*version*.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>解压</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -xzvf strelaysrv-linux-amd64-*version*.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>放入<code>/usr/bin/relaysrv</code>方便直接运行(顺便改个名)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mv strelaysrv-linux-amd64-*version*/strelaysrv /usr/bin/relaysrv</span><br></pre></td></tr></table></figure>\n\n<p>清理安装包</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf strelaysrv-linux-amd64-*version* strelaysrv-linux-amd64-*version*.tar.gz</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd relaysrv -s /bin/<span class=\"literal\">false</span></span><br><span class=\"line\"><span class=\"comment\">#创建存储配置用的目录并修改所有者</span></span><br><span class=\"line\">mkdir /etc/relaysrv</span><br><span class=\"line\">chown relaysrv /etc/relaysrv</span><br></pre></td></tr></table></figure>\n\n<p>在<code>/etc/supervisord.conf</code>文档最后加上下面这段设置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[program:relaysrv]</span><br><span class=\"line\"><span class=\"built_in\">command</span>=relaysrv -keys /etc/relaysrv -pools=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">autostart=<span class=\"literal\">true</span></span><br><span class=\"line\">autorestart=<span class=\"literal\">true</span></span><br><span class=\"line\">startsecs=10</span><br><span class=\"line\">stdout_logfile=/var/<span class=\"built_in\">log</span>/relaysrv.log</span><br><span class=\"line\">stdout_logfile_maxbytes=1MB</span><br><span class=\"line\">stdout_logfile_backups=10</span><br><span class=\"line\">stdout_capture_maxbytes=1MB</span><br><span class=\"line\">redirect_stderr=<span class=\"literal\">true</span></span><br><span class=\"line\">user = root</span><br><span class=\"line\"></span><br><span class=\"line\">[program:discosrv]</span><br><span class=\"line\"><span class=\"built_in\">command</span>=discosrv /etc/discosrv</span><br><span class=\"line\">user = root</span><br><span class=\"line\">autostart=<span class=\"literal\">true</span></span><br><span class=\"line\">autorestart=<span class=\"literal\">true</span></span><br><span class=\"line\">redirect_stderr=<span class=\"literal\">true</span></span><br><span class=\"line\">startsecs=10</span><br><span class=\"line\">stdout_logfile=/var/<span class=\"built_in\">log</span>/discosrv.log</span><br><span class=\"line\">stdout_logfile_maxbytes=1MB</span><br><span class=\"line\">stdout_logfile_backups=2</span><br><span class=\"line\">stdout_capture_maxbytes=1MB</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#program后面跟服务的名称</span></span><br><span class=\"line\"><span class=\"comment\">#command是程序的执行路径</span></span><br><span class=\"line\"><span class=\"comment\">#autorstart是表示应用程序随supervisor的启动而启动</span></span><br><span class=\"line\"><span class=\"comment\">#stdout_logfile是捕获标准输出。</span></span><br></pre></td></tr></table></figure>\n\n<p>也可以选择加上</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[include]files = /etc/supervisor/conf.d/*.ini（此地址文件中放置上段设置）</span><br></pre></td></tr></table></figure>\n\n<p>relaysrv启动配置</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">-debug 启用调试输出-ext-address=&lt;address&gt; 可选的外部地址(将被上报)，能够通过端口转发来监听高权限端口(0-1024)然后外部可以连接这个端口-global-rate=&lt;bytes/s&gt; 全局限速，单位 bytes/s-keys=&lt;dir&gt; 用于存储 cert.pem 和 key.pem 的目录，默认是 <span class=\"string\">&quot;.&quot;</span>(当前目录)-listen=&lt;listen addr&gt; 协议监听的地址，默认是 <span class=\"string\">&quot;:22067&quot;</span>-message-timeout=&lt;duration&gt; 等待消息到达的最大时间(默认 1m0s)-nat 使用UPnP/NAT-PMP来取得外部端口映射-nat-lease=&lt;duration&gt; NAT租赁时间，单位分钟(默认 60)-nat-renewal=&lt;duration&gt; NAT刷新频率，单位分钟(默认 30)-nat-timeout=&lt;duration&gt; NAT发现超时，单位秒(默认 10)-network-timeout=&lt;duration&gt; 客户端和中继之间网络操作的超时，如果在这个时间段内客户端和中继之间没有数据被接收到，那么连接将被终止。此外，如果在这段时间内任何被中继的客户端没有数据发送，这个会话也会被终止(默认 2m0s)-per-session-rate=&lt;bytes/s&gt; 每个会话的限速，单位 bytes/s-ping-interval=&lt;duration&gt; ping的发送间隔(默认 1m0s)-pools=&lt;pool addresses&gt; 中继服务器池的地址，使用逗号分隔多个(默认 <span class=\"string\">&quot;http://relays.syncthing.net/endpoint&quot;</span>)。留空(-pools=<span class=\"string\">&quot;&quot;</span>)来禁止公布这个服务器到池中，以便作为私有中继。-protocol=&lt;string&gt; 监听协议，<span class=\"string\">&quot;tcp&quot;</span>来监听IPv4和IPv6，<span class=\"string\">&quot;tcp4&quot;</span>来监听IPv4，<span class=\"string\">&quot;tcp6&quot;</span>来监听IPv6(默认 <span class=\"string\">&quot;tcp&quot;</span>)-provided-by=&lt;string&gt; 一个可选的描述字段来表示谁提供了这个中继(可以打打广告啥的)-status-srv=&lt;listen addr&gt; 提供状态服务的监听地址(默认 <span class=\"string\">&quot;:22070&quot;</span>)，用于中继服务器池页面来展示服务器状态(传输了多少数据，有多少客户端在线等等)，留空(-status-srv=<span class=\"string\">&quot;&quot;</span>)来禁用这个功能-pools=<span class=\"string\">&quot;&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>带配置文件启动</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">supervisord -c /etc/supervisor/supervisor.conf</span><br></pre></td></tr></table></figure>\n"},{"title":"Supervisor","date":"2021-05-01T09:53:16.000Z","cover":"/img/Supervisord.jpg","_content":"\n# 安装supervisor\n\n## pip方式\n\n```bash\nwget https://bootstrap.pypa.io/get-pip.py\npython get-pip.py\nrm -rf get-pip.py\npip install supervisor\n```\n\n## apt方式\n\n```bash\napt-get install supervisor\n```\n\n# 配置supervisor\n\n```bash\necho_supervisord_conf > /etc/supervisor/supervisord.conf(配置文件位置)\necho \"supervisord\" >> /etc/rc.local\ncat >>/etc/supervisord.conf<<'EOF'\n\n[program:relaysrv]\ncommand=relaysrv -keys /etc/relaysrv -pools=\"\"\nautostart=true\nautorestart=true\nstartsecs=10\nstdout_logfile=/var/log/relaysrv.log\nstdout_logfile_maxbytes=1MB\nstdout_logfile_backups=10\nstdout_capture_maxbytes=1MB\nredirect_stderr=true\nuser = root\n\n#program后面跟服务的名称\n#command是程序的执行路径\n#autorstart是表示应用程序随supervisor的启动而启动\n#stdout_logfile是捕获标准输出。\n\nEOF\n```\n\n# 配置Supervisor开机启动\n\n## 配置systemctl\n\n进入`/lib/systemd/system`目录，并创建`supervisor.service`文件，该文件内容如下所示。\n\n```bash\nroot@VC:/lib/systemd/system#whereis supervisord\nsupervisord: *查到的地址*/supervisord\nroot@VC:/lib/systemd/system# whereis supervisorctl\nsupervisorctl: *查到的地址*/supervisorctl\n# 创建文件\nroot@VC:/lib/systemd/system# vim supervisor.service\n\n\n[Unit]\nDescription=supervisor\nAfter=network.target\n\n[Service]\nType=forking\nExecStart=*查到的地址*/supervisord -c *配置文件位置*/supervisord.conf\nExecStop=*查到的地址*/supervisorctl $OPTIONS shutdown\nExecReload=*查到的地址*/supervisorctl $OPTIONS reload\nKillMode=process\nRestart=on-failure\nRestartSec=42s\n\n[Install]\nWantedBy=multi-user.target\n```\n\n## 设置开机启动\n\n```bash\nroot@VC:/lib/systemd/system# systemctl enable supervisor.service\nCreated symlink from /etc/systemd/system/multi-user.target.wants/supervisor.service to /lib/systemd/system/supervisor.service.\nroot@VC:/lib/systemd/system# systemctl daemon-reload\n```\n\n## 修改文件权限为766\n\n```bash\nroot@VC:/lib/systemd/system# chmod 766 supervisor.service\n```\n\n## supervisorctl命令行下的命令：\n\n```bash\nsupervisorctl status  #查看supervisord监控的所有进程的状态\nsupervisorctl celery status  #查看celery进程的状态\nsupervisorctl stop xxx  #停止某一个进程(xxx)，xxx为[program:theprogramname]里配置的值\nsupervisorctl start xxx  #启动某个进程\nsupervisorctl restart xxx  #重启某个进程\nsupervisorctl stop groupworker  #重启所有属于名为groupworker这个分组的进程\nsupervisorctl stop all  #停止全部进程，注：start、(start,restart同理)restart、stop都不会载入最新的配置文件\nsupervisorctl reload  #重启supervisor\nsupervisorctl update  #根据最新的配置文件，启动新配置或有改动的进程，配置没有改动的进程不会受影响而重启。当配置文件修改后，要执行这条命令。\n#用stop停止掉的进程，即使配置文件设置了autorestart=true，用reload或者update都不会自动重启。\nsupervisorctl shutdown  # 关闭supervisord,会同时关闭supervisord监控的所有进程\n```\n","source":"_posts/2021-05-01-Supervisor.md","raw":"---\ntitle: Supervisor\ndate: 2021-05-01 17:53:16\ncover: /img/Supervisord.jpg\ntags:\n- [服务部署]\ncategories:\n- [建站]\n---\n\n# 安装supervisor\n\n## pip方式\n\n```bash\nwget https://bootstrap.pypa.io/get-pip.py\npython get-pip.py\nrm -rf get-pip.py\npip install supervisor\n```\n\n## apt方式\n\n```bash\napt-get install supervisor\n```\n\n# 配置supervisor\n\n```bash\necho_supervisord_conf > /etc/supervisor/supervisord.conf(配置文件位置)\necho \"supervisord\" >> /etc/rc.local\ncat >>/etc/supervisord.conf<<'EOF'\n\n[program:relaysrv]\ncommand=relaysrv -keys /etc/relaysrv -pools=\"\"\nautostart=true\nautorestart=true\nstartsecs=10\nstdout_logfile=/var/log/relaysrv.log\nstdout_logfile_maxbytes=1MB\nstdout_logfile_backups=10\nstdout_capture_maxbytes=1MB\nredirect_stderr=true\nuser = root\n\n#program后面跟服务的名称\n#command是程序的执行路径\n#autorstart是表示应用程序随supervisor的启动而启动\n#stdout_logfile是捕获标准输出。\n\nEOF\n```\n\n# 配置Supervisor开机启动\n\n## 配置systemctl\n\n进入`/lib/systemd/system`目录，并创建`supervisor.service`文件，该文件内容如下所示。\n\n```bash\nroot@VC:/lib/systemd/system#whereis supervisord\nsupervisord: *查到的地址*/supervisord\nroot@VC:/lib/systemd/system# whereis supervisorctl\nsupervisorctl: *查到的地址*/supervisorctl\n# 创建文件\nroot@VC:/lib/systemd/system# vim supervisor.service\n\n\n[Unit]\nDescription=supervisor\nAfter=network.target\n\n[Service]\nType=forking\nExecStart=*查到的地址*/supervisord -c *配置文件位置*/supervisord.conf\nExecStop=*查到的地址*/supervisorctl $OPTIONS shutdown\nExecReload=*查到的地址*/supervisorctl $OPTIONS reload\nKillMode=process\nRestart=on-failure\nRestartSec=42s\n\n[Install]\nWantedBy=multi-user.target\n```\n\n## 设置开机启动\n\n```bash\nroot@VC:/lib/systemd/system# systemctl enable supervisor.service\nCreated symlink from /etc/systemd/system/multi-user.target.wants/supervisor.service to /lib/systemd/system/supervisor.service.\nroot@VC:/lib/systemd/system# systemctl daemon-reload\n```\n\n## 修改文件权限为766\n\n```bash\nroot@VC:/lib/systemd/system# chmod 766 supervisor.service\n```\n\n## supervisorctl命令行下的命令：\n\n```bash\nsupervisorctl status  #查看supervisord监控的所有进程的状态\nsupervisorctl celery status  #查看celery进程的状态\nsupervisorctl stop xxx  #停止某一个进程(xxx)，xxx为[program:theprogramname]里配置的值\nsupervisorctl start xxx  #启动某个进程\nsupervisorctl restart xxx  #重启某个进程\nsupervisorctl stop groupworker  #重启所有属于名为groupworker这个分组的进程\nsupervisorctl stop all  #停止全部进程，注：start、(start,restart同理)restart、stop都不会载入最新的配置文件\nsupervisorctl reload  #重启supervisor\nsupervisorctl update  #根据最新的配置文件，启动新配置或有改动的进程，配置没有改动的进程不会受影响而重启。当配置文件修改后，要执行这条命令。\n#用stop停止掉的进程，即使配置文件设置了autorestart=true，用reload或者update都不会自动重启。\nsupervisorctl shutdown  # 关闭supervisord,会同时关闭supervisord监控的所有进程\n```\n","slug":"Supervisor","published":1,"updated":"2022-05-17T14:03:28.665Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3bbwfd20006t8j7e1r5bhry","content":"<h1 id=\"安装supervisor\"><a href=\"#安装supervisor\" class=\"headerlink\" title=\"安装supervisor\"></a>安装supervisor</h1><h2 id=\"pip方式\"><a href=\"#pip方式\" class=\"headerlink\" title=\"pip方式\"></a>pip方式</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class=\"line\">python get-pip.py</span><br><span class=\"line\">rm -rf get-pip.py</span><br><span class=\"line\">pip install supervisor</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"apt方式\"><a href=\"#apt方式\" class=\"headerlink\" title=\"apt方式\"></a>apt方式</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install supervisor</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置supervisor\"><a href=\"#配置supervisor\" class=\"headerlink\" title=\"配置supervisor\"></a>配置supervisor</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo_supervisord_conf &gt; /etc/supervisor/supervisord.conf(配置文件位置)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;supervisord&quot;</span> &gt;&gt; /etc/rc.local</span><br><span class=\"line\">cat &gt;&gt;/etc/supervisord.conf&lt;&lt;<span class=\"string\">&#x27;EOF&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[program:relaysrv]</span><br><span class=\"line\"><span class=\"built_in\">command</span>=relaysrv -keys /etc/relaysrv -pools=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">autostart=<span class=\"literal\">true</span></span><br><span class=\"line\">autorestart=<span class=\"literal\">true</span></span><br><span class=\"line\">startsecs=10</span><br><span class=\"line\">stdout_logfile=/var/<span class=\"built_in\">log</span>/relaysrv.log</span><br><span class=\"line\">stdout_logfile_maxbytes=1MB</span><br><span class=\"line\">stdout_logfile_backups=10</span><br><span class=\"line\">stdout_capture_maxbytes=1MB</span><br><span class=\"line\">redirect_stderr=<span class=\"literal\">true</span></span><br><span class=\"line\">user = root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#program后面跟服务的名称</span></span><br><span class=\"line\"><span class=\"comment\">#command是程序的执行路径</span></span><br><span class=\"line\"><span class=\"comment\">#autorstart是表示应用程序随supervisor的启动而启动</span></span><br><span class=\"line\"><span class=\"comment\">#stdout_logfile是捕获标准输出。</span></span><br><span class=\"line\"></span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置Supervisor开机启动\"><a href=\"#配置Supervisor开机启动\" class=\"headerlink\" title=\"配置Supervisor开机启动\"></a>配置Supervisor开机启动</h1><h2 id=\"配置systemctl\"><a href=\"#配置systemctl\" class=\"headerlink\" title=\"配置systemctl\"></a>配置systemctl</h2><p>进入<code>/lib/systemd/system</code>目录，并创建<code>supervisor.service</code>文件，该文件内容如下所示。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@VC:/lib/systemd/system<span class=\"comment\">#whereis supervisord</span></span><br><span class=\"line\">supervisord: *查到的地址*/supervisord</span><br><span class=\"line\">root@VC:/lib/systemd/system<span class=\"comment\"># whereis supervisorctl</span></span><br><span class=\"line\">supervisorctl: *查到的地址*/supervisorctl</span><br><span class=\"line\"><span class=\"comment\"># 创建文件</span></span><br><span class=\"line\">root@VC:/lib/systemd/system<span class=\"comment\"># vim supervisor.service</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=supervisor</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">ExecStart=*查到的地址*/supervisord -c *配置文件位置*/supervisord.conf</span><br><span class=\"line\">ExecStop=*查到的地址*/supervisorctl <span class=\"variable\">$OPTIONS</span> shutdown</span><br><span class=\"line\">ExecReload=*查到的地址*/supervisorctl <span class=\"variable\">$OPTIONS</span> reload</span><br><span class=\"line\">KillMode=process</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=42s</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设置开机启动\"><a href=\"#设置开机启动\" class=\"headerlink\" title=\"设置开机启动\"></a>设置开机启动</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@VC:/lib/systemd/system<span class=\"comment\"># systemctl enable supervisor.service</span></span><br><span class=\"line\">Created symlink from /etc/systemd/system/multi-user.target.wants/supervisor.service to /lib/systemd/system/supervisor.service.</span><br><span class=\"line\">root@VC:/lib/systemd/system<span class=\"comment\"># systemctl daemon-reload</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改文件权限为766\"><a href=\"#修改文件权限为766\" class=\"headerlink\" title=\"修改文件权限为766\"></a>修改文件权限为766</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@VC:/lib/systemd/system<span class=\"comment\"># chmod 766 supervisor.service</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"supervisorctl命令行下的命令：\"><a href=\"#supervisorctl命令行下的命令：\" class=\"headerlink\" title=\"supervisorctl命令行下的命令：\"></a>supervisorctl命令行下的命令：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">supervisorctl status  <span class=\"comment\">#查看supervisord监控的所有进程的状态</span></span><br><span class=\"line\">supervisorctl celery status  <span class=\"comment\">#查看celery进程的状态</span></span><br><span class=\"line\">supervisorctl stop xxx  <span class=\"comment\">#停止某一个进程(xxx)，xxx为[program:theprogramname]里配置的值</span></span><br><span class=\"line\">supervisorctl start xxx  <span class=\"comment\">#启动某个进程</span></span><br><span class=\"line\">supervisorctl restart xxx  <span class=\"comment\">#重启某个进程</span></span><br><span class=\"line\">supervisorctl stop groupworker  <span class=\"comment\">#重启所有属于名为groupworker这个分组的进程</span></span><br><span class=\"line\">supervisorctl stop all  <span class=\"comment\">#停止全部进程，注：start、(start,restart同理)restart、stop都不会载入最新的配置文件</span></span><br><span class=\"line\">supervisorctl reload  <span class=\"comment\">#重启supervisor</span></span><br><span class=\"line\">supervisorctl update  <span class=\"comment\">#根据最新的配置文件，启动新配置或有改动的进程，配置没有改动的进程不会受影响而重启。当配置文件修改后，要执行这条命令。</span></span><br><span class=\"line\"><span class=\"comment\">#用stop停止掉的进程，即使配置文件设置了autorestart=true，用reload或者update都不会自动重启。</span></span><br><span class=\"line\">supervisorctl shutdown  <span class=\"comment\"># 关闭supervisord,会同时关闭supervisord监控的所有进程</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"excerpt":"","more":"<h1 id=\"安装supervisor\"><a href=\"#安装supervisor\" class=\"headerlink\" title=\"安装supervisor\"></a>安装supervisor</h1><h2 id=\"pip方式\"><a href=\"#pip方式\" class=\"headerlink\" title=\"pip方式\"></a>pip方式</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget https://bootstrap.pypa.io/get-pip.py</span><br><span class=\"line\">python get-pip.py</span><br><span class=\"line\">rm -rf get-pip.py</span><br><span class=\"line\">pip install supervisor</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"apt方式\"><a href=\"#apt方式\" class=\"headerlink\" title=\"apt方式\"></a>apt方式</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install supervisor</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置supervisor\"><a href=\"#配置supervisor\" class=\"headerlink\" title=\"配置supervisor\"></a>配置supervisor</h1><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo_supervisord_conf &gt; /etc/supervisor/supervisord.conf(配置文件位置)</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;supervisord&quot;</span> &gt;&gt; /etc/rc.local</span><br><span class=\"line\">cat &gt;&gt;/etc/supervisord.conf&lt;&lt;<span class=\"string\">&#x27;EOF&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">[program:relaysrv]</span><br><span class=\"line\"><span class=\"built_in\">command</span>=relaysrv -keys /etc/relaysrv -pools=<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\">autostart=<span class=\"literal\">true</span></span><br><span class=\"line\">autorestart=<span class=\"literal\">true</span></span><br><span class=\"line\">startsecs=10</span><br><span class=\"line\">stdout_logfile=/var/<span class=\"built_in\">log</span>/relaysrv.log</span><br><span class=\"line\">stdout_logfile_maxbytes=1MB</span><br><span class=\"line\">stdout_logfile_backups=10</span><br><span class=\"line\">stdout_capture_maxbytes=1MB</span><br><span class=\"line\">redirect_stderr=<span class=\"literal\">true</span></span><br><span class=\"line\">user = root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#program后面跟服务的名称</span></span><br><span class=\"line\"><span class=\"comment\">#command是程序的执行路径</span></span><br><span class=\"line\"><span class=\"comment\">#autorstart是表示应用程序随supervisor的启动而启动</span></span><br><span class=\"line\"><span class=\"comment\">#stdout_logfile是捕获标准输出。</span></span><br><span class=\"line\"></span><br><span class=\"line\">EOF</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"配置Supervisor开机启动\"><a href=\"#配置Supervisor开机启动\" class=\"headerlink\" title=\"配置Supervisor开机启动\"></a>配置Supervisor开机启动</h1><h2 id=\"配置systemctl\"><a href=\"#配置systemctl\" class=\"headerlink\" title=\"配置systemctl\"></a>配置systemctl</h2><p>进入<code>/lib/systemd/system</code>目录，并创建<code>supervisor.service</code>文件，该文件内容如下所示。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@VC:/lib/systemd/system<span class=\"comment\">#whereis supervisord</span></span><br><span class=\"line\">supervisord: *查到的地址*/supervisord</span><br><span class=\"line\">root@VC:/lib/systemd/system<span class=\"comment\"># whereis supervisorctl</span></span><br><span class=\"line\">supervisorctl: *查到的地址*/supervisorctl</span><br><span class=\"line\"><span class=\"comment\"># 创建文件</span></span><br><span class=\"line\">root@VC:/lib/systemd/system<span class=\"comment\"># vim supervisor.service</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=supervisor</span><br><span class=\"line\">After=network.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">ExecStart=*查到的地址*/supervisord -c *配置文件位置*/supervisord.conf</span><br><span class=\"line\">ExecStop=*查到的地址*/supervisorctl <span class=\"variable\">$OPTIONS</span> shutdown</span><br><span class=\"line\">ExecReload=*查到的地址*/supervisorctl <span class=\"variable\">$OPTIONS</span> reload</span><br><span class=\"line\">KillMode=process</span><br><span class=\"line\">Restart=on-failure</span><br><span class=\"line\">RestartSec=42s</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设置开机启动\"><a href=\"#设置开机启动\" class=\"headerlink\" title=\"设置开机启动\"></a>设置开机启动</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@VC:/lib/systemd/system<span class=\"comment\"># systemctl enable supervisor.service</span></span><br><span class=\"line\">Created symlink from /etc/systemd/system/multi-user.target.wants/supervisor.service to /lib/systemd/system/supervisor.service.</span><br><span class=\"line\">root@VC:/lib/systemd/system<span class=\"comment\"># systemctl daemon-reload</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"修改文件权限为766\"><a href=\"#修改文件权限为766\" class=\"headerlink\" title=\"修改文件权限为766\"></a>修改文件权限为766</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root@VC:/lib/systemd/system<span class=\"comment\"># chmod 766 supervisor.service</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"supervisorctl命令行下的命令：\"><a href=\"#supervisorctl命令行下的命令：\" class=\"headerlink\" title=\"supervisorctl命令行下的命令：\"></a>supervisorctl命令行下的命令：</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">supervisorctl status  <span class=\"comment\">#查看supervisord监控的所有进程的状态</span></span><br><span class=\"line\">supervisorctl celery status  <span class=\"comment\">#查看celery进程的状态</span></span><br><span class=\"line\">supervisorctl stop xxx  <span class=\"comment\">#停止某一个进程(xxx)，xxx为[program:theprogramname]里配置的值</span></span><br><span class=\"line\">supervisorctl start xxx  <span class=\"comment\">#启动某个进程</span></span><br><span class=\"line\">supervisorctl restart xxx  <span class=\"comment\">#重启某个进程</span></span><br><span class=\"line\">supervisorctl stop groupworker  <span class=\"comment\">#重启所有属于名为groupworker这个分组的进程</span></span><br><span class=\"line\">supervisorctl stop all  <span class=\"comment\">#停止全部进程，注：start、(start,restart同理)restart、stop都不会载入最新的配置文件</span></span><br><span class=\"line\">supervisorctl reload  <span class=\"comment\">#重启supervisor</span></span><br><span class=\"line\">supervisorctl update  <span class=\"comment\">#根据最新的配置文件，启动新配置或有改动的进程，配置没有改动的进程不会受影响而重启。当配置文件修改后，要执行这条命令。</span></span><br><span class=\"line\"><span class=\"comment\">#用stop停止掉的进程，即使配置文件设置了autorestart=true，用reload或者update都不会自动重启。</span></span><br><span class=\"line\">supervisorctl shutdown  <span class=\"comment\"># 关闭supervisord,会同时关闭supervisord监控的所有进程</span></span><br></pre></td></tr></table></figure>\n"},{"title":"nginx反向代理GithubPage","date":"2021-06-15T11:26:44.000Z","cover":"https://www.nginx.com/wp-content/uploads/2021/02/WB-NGINX-NXM583-FundamentalsOfMicsroservices-r2-featured-500x300@2x-395x237.png","_content":"\n# DNS重定向\n\n配置DNS重定向到目标服务器。\n\n## nginx\n\n```txt\nserver {\n        listen 80;\n        server_name  域名;\n        rewrite ^(.*)$ https://$host$request_uri permanent;    \n}\nserver {\n        listen 443 ssl http2;\n        server_name  域名;\n        location / \n        {\n            proxy_pass         http://******.github.io;\n            proxy_set_header   X-Host                        $host;\n            proxy_set_header   X-Real-IP               $remote_addr;\n            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n            proxy_set_header User-Agent \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\";\n            #缓存\n            proxy_cache_valid  200 206 304 301 302 1d; #对httpcode为200…的缓存1天 \n            proxy_cache_valid  any 1d;    #其他的缓存多长时间  \n            proxy_cache_key $uri;  #定义缓存唯一key,通过唯一key来进行hash存取\n        }\n        access_log off; #access_log end\n        error_log off; #error_log end\n}\n```\n\n配置说明：\n\n```txt\nproxy_set_header Host $host 设置请求头的Host为反向代理服务器的Host\n\nproxy_set_header X-Real-IP $remote_addr 设置请求头的X-Real-IP为客户端真实IP\n\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for 把请求来源的IP添加到请求头的X-Forwarded-For字段\n\nX-Forwarded-For:简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP代理或者负载均衡服务器时才会添加该项。 它不是RFC中定义的标准请求头信息，在squid缓存代理服务器开发文档中可以找到该项的详细介绍。 标准格式如下：X-Forwarded-For: client1, proxy1, proxy2。\n```\n\n> **参考**：[血衫非弧](https://blog.kelu.org/tech/2017/05/06/github-pages-reverse-proxy.html)\n","source":"_posts/2021-06-15-nginx反向代理GIthubPage.md","raw":"---\ntitle: nginx反向代理GithubPage\ndate: 2021-06-15 19:26:44\ncover: https://www.nginx.com/wp-content/uploads/2021/02/WB-NGINX-NXM583-FundamentalsOfMicsroservices-r2-featured-500x300@2x-395x237.png\ntags:\n- [博客]\ncategories:\n- [建站]\n---\n\n# DNS重定向\n\n配置DNS重定向到目标服务器。\n\n## nginx\n\n```txt\nserver {\n        listen 80;\n        server_name  域名;\n        rewrite ^(.*)$ https://$host$request_uri permanent;    \n}\nserver {\n        listen 443 ssl http2;\n        server_name  域名;\n        location / \n        {\n            proxy_pass         http://******.github.io;\n            proxy_set_header   X-Host                        $host;\n            proxy_set_header   X-Real-IP               $remote_addr;\n            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;\n            proxy_set_header User-Agent \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\";\n            #缓存\n            proxy_cache_valid  200 206 304 301 302 1d; #对httpcode为200…的缓存1天 \n            proxy_cache_valid  any 1d;    #其他的缓存多长时间  \n            proxy_cache_key $uri;  #定义缓存唯一key,通过唯一key来进行hash存取\n        }\n        access_log off; #access_log end\n        error_log off; #error_log end\n}\n```\n\n配置说明：\n\n```txt\nproxy_set_header Host $host 设置请求头的Host为反向代理服务器的Host\n\nproxy_set_header X-Real-IP $remote_addr 设置请求头的X-Real-IP为客户端真实IP\n\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for 把请求来源的IP添加到请求头的X-Forwarded-For字段\n\nX-Forwarded-For:简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP代理或者负载均衡服务器时才会添加该项。 它不是RFC中定义的标准请求头信息，在squid缓存代理服务器开发文档中可以找到该项的详细介绍。 标准格式如下：X-Forwarded-For: client1, proxy1, proxy2。\n```\n\n> **参考**：[血衫非弧](https://blog.kelu.org/tech/2017/05/06/github-pages-reverse-proxy.html)\n","slug":"nginx反向代理GIthubPage","published":1,"updated":"2022-05-17T13:48:02.251Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3bbwfd40009t8j70087crq6","content":"<h1 id=\"DNS重定向\"><a href=\"#DNS重定向\" class=\"headerlink\" title=\"DNS重定向\"></a>DNS重定向</h1><p>配置DNS重定向到目标服务器。</p>\n<h2 id=\"nginx\"><a href=\"#nginx\" class=\"headerlink\" title=\"nginx\"></a>nginx</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name  域名;</span><br><span class=\"line\">        rewrite ^(.*)$ https://$host$request_uri permanent;    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 443 ssl http2;</span><br><span class=\"line\">        server_name  域名;</span><br><span class=\"line\">        location / </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            proxy_pass         http://******.github.io;</span><br><span class=\"line\">            proxy_set_header   X-Host                        $host;</span><br><span class=\"line\">            proxy_set_header   X-Real-IP               $remote_addr;</span><br><span class=\"line\">            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class=\"line\">            proxy_set_header User-Agent &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36&quot;;</span><br><span class=\"line\">            #缓存</span><br><span class=\"line\">            proxy_cache_valid  200 206 304 301 302 1d; #对httpcode为200…的缓存1天 </span><br><span class=\"line\">            proxy_cache_valid  any 1d;    #其他的缓存多长时间  </span><br><span class=\"line\">            proxy_cache_key $uri;  #定义缓存唯一key,通过唯一key来进行hash存取</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        access_log off; #access_log end</span><br><span class=\"line\">        error_log off; #error_log end</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>配置说明：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_set_header Host $host 设置请求头的Host为反向代理服务器的Host</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_set_header X-Real-IP $remote_addr 设置请求头的X-Real-IP为客户端真实IP</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for 把请求来源的IP添加到请求头的X-Forwarded-For字段</span><br><span class=\"line\"></span><br><span class=\"line\">X-Forwarded-For:简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP代理或者负载均衡服务器时才会添加该项。 它不是RFC中定义的标准请求头信息，在squid缓存代理服务器开发文档中可以找到该项的详细介绍。 标准格式如下：X-Forwarded-For: client1, proxy1, proxy2。</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>参考</strong>：<a href=\"https://blog.kelu.org/tech/2017/05/06/github-pages-reverse-proxy.html\">血衫非弧</a></p>\n</blockquote>\n","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"excerpt":"","more":"<h1 id=\"DNS重定向\"><a href=\"#DNS重定向\" class=\"headerlink\" title=\"DNS重定向\"></a>DNS重定向</h1><p>配置DNS重定向到目标服务器。</p>\n<h2 id=\"nginx\"><a href=\"#nginx\" class=\"headerlink\" title=\"nginx\"></a>nginx</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 80;</span><br><span class=\"line\">        server_name  域名;</span><br><span class=\"line\">        rewrite ^(.*)$ https://$host$request_uri permanent;    </span><br><span class=\"line\">&#125;</span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen 443 ssl http2;</span><br><span class=\"line\">        server_name  域名;</span><br><span class=\"line\">        location / </span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            proxy_pass         http://******.github.io;</span><br><span class=\"line\">            proxy_set_header   X-Host                        $host;</span><br><span class=\"line\">            proxy_set_header   X-Real-IP               $remote_addr;</span><br><span class=\"line\">            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;</span><br><span class=\"line\">            proxy_set_header User-Agent &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36&quot;;</span><br><span class=\"line\">            #缓存</span><br><span class=\"line\">            proxy_cache_valid  200 206 304 301 302 1d; #对httpcode为200…的缓存1天 </span><br><span class=\"line\">            proxy_cache_valid  any 1d;    #其他的缓存多长时间  </span><br><span class=\"line\">            proxy_cache_key $uri;  #定义缓存唯一key,通过唯一key来进行hash存取</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        access_log off; #access_log end</span><br><span class=\"line\">        error_log off; #error_log end</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>配置说明：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">proxy_set_header Host $host 设置请求头的Host为反向代理服务器的Host</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_set_header X-Real-IP $remote_addr 设置请求头的X-Real-IP为客户端真实IP</span><br><span class=\"line\"></span><br><span class=\"line\">proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for 把请求来源的IP添加到请求头的X-Forwarded-For字段</span><br><span class=\"line\"></span><br><span class=\"line\">X-Forwarded-For:简称XFF头，它代表客户端，也就是HTTP的请求端真实的IP，只有在通过了HTTP代理或者负载均衡服务器时才会添加该项。 它不是RFC中定义的标准请求头信息，在squid缓存代理服务器开发文档中可以找到该项的详细介绍。 标准格式如下：X-Forwarded-For: client1, proxy1, proxy2。</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>参考</strong>：<a href=\"https://blog.kelu.org/tech/2017/05/06/github-pages-reverse-proxy.html\">血衫非弧</a></p>\n</blockquote>\n"},{"title":"GithubPage——Github+Hexo","date":"2021-06-14T02:45:20.000Z","cover":"https://pic1.zhimg.com/v2-fccdcf1f6e8a31fc59da10690b6237fc_1440w.jpg","_content":"\n------------\n\n# 配置Github\n\n登录到[GitHub](https://github.com/)，创建新仓库，仓库名应该为：**用户名**.github.io\n\n**用户名**为GitHub帐号名，这是固定写法。\n\n# 安装Git\n\n下载地址：[Git - Downloading Package](https://github.com/git-for-windows/git/releases) ，下载安装。\n\n在命令行里输入`git --version`，查看git版本，测试是否安装成功\n\n若安装失败，解决git安装问题。\n\n[**廖雪峰**](https://weibo.com/liaoxuefeng)老师的[Git教程](https://www.liaoxuefeng.com/wiki/896043488029600) \n\n# 配置Git\n\n## 全局配置\n\n```bash\ngit config --global user.name \"GitHub用户名\"\ngit config --global user.email \"GitHub注册邮箱\"\n```\n\n### 生成ssh密钥文件\n\n```bash\nssh-keygen -t rsa -C \"GitHub注册邮箱\"\n```\n\n### 配置ssh密钥\n\n打开[GitHub_Settings_keys](https://github.com/settings/keys) 页面，新建new SSH Key；或打开仓库的Deploy keys页面，新建new deploy key；\n\n其中Title为标题，Key填生成的id_rsa.pub中内容\n\n在Git Bash中检测GitHub公钥设置是否成功，输入 `ssh git@github.com` ：\n\n```txt\nPTY allocation request failed on channel 0\nHi *******! You've successfully authenticated, but GitHub does not provide shell access.\nConnection to github.com closed.\n```\n\n如上则说明成功。\n\n# 安装Node.js\n\n下载地址：[Download | Node.js](https://nodejs.org/en/download/) ，下载安装。注意安装Node.js会包含**环境变量**及**npm**的安装。\n\n安装后，在命令行中输入 `node -v`，检测Node.js是否安装成功 ；输入`npm -v`，检测npm是否安装成功\n\n# 安装Hexo\n\n以[Hexo](https://hexo.io/zh-cn/)作为个人博客网站的框架。\n\n使用npm命令安装Hexo：\n\n```bash\nnpm install hexo-cli -g\n```\n\n安装完成后，在上一级目录`D:\\>`初始化博客，可以命名为blog，Hexo框架与以后发布的网页都在这个文件夹中。\n\n```bash\nhexo init blog\n```\n\n生成并预览博客\n\n```bash\nhexo g\nhexo s\n```\n\n常用的Hexo 命令\n\n`npm install hexo -g` #安装Hexo\n`npm update hexo -g` #升级\n`hexo init` #初始化博客\n\n命令简写\n`hexo n \"我的博客\"` == `hexo new \"我的博客\"` #新建文章\n`hexo g` == `hexo generate` #生成\n`hexo s` == `hexo server` #启动服务预览\n`hexo d` == `hexo deploy` #部署\n\n`hexo server` #Hexo会监视文件变动并自动更新，无须重启服务器\n`hexo server -s` #静态模式\n`hexo server -p 5000` #更改端口\n`hexo server -i 192.168.1.1` #自定义 IP\n`hexo clean` #清除缓存，若是网页正常情况下可以忽略这条命令\n\n# 推送网站\n\n- blog根目录里的_config.yml文件，称为**站点配置文件**\n- 根目录里的themes文件夹，里面也有个_config.yml文件，称为**主题配置文件**\n\n将我们的Hexo与GitHub关联起来，打开**站点配置文件**_config.yml，翻到最后修改\n\n```yml\ndeploy:\n    type: git\n    repo: 在GitHub上创建仓库的完整路径\n    branch: master\n```\n\n安装Git部署插件，输入命令：\n\n```bash\nnpm install hexo-deployer-git --save\n```\n\n此时生成并部署博客\n\n```bash\nhexo clean\nhexo g -d\n```\n\n博客就被部署到：**用户名**.github.io\n\n# 绑定域名\n\n基于阿里云，在**管理控制台**进入**域名解析**管理页面\n\n添加一条CNAME解析\n\n1. 主机记录：@\n2. 记录值：**用户名**.github.io\n3. 其余默认即可\n\n本地博客文件夹 ，在blog/source目录下，创建一个CNAME文件，输入自定义域名。\n\n注意：不是txt文件。如果域名带有www，那么访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。\n\n# 更换主题\n\n更换不同的主题，主题传送门：[Themes](https://hexo.io/themes/)。\n\n[Next](https://theme-next.org/)   [Butterfly](https://github.com/jerryc127/hexo-theme-butterfly)\n\n> **参考**：[RunDouble's Blog](http://wu.run/2018/12/20/hexo-from-github-2-aliyun/)\n","source":"_posts/2021-06-14-GithubPage.md","raw":"---\ntitle: GithubPage——Github+Hexo\ndate: 2021-06-14 10:45:20\ncover: https://pic1.zhimg.com/v2-fccdcf1f6e8a31fc59da10690b6237fc_1440w.jpg\ntags:\n- [博客]\ncategories:\n- [建站]\n---\n\n------------\n\n# 配置Github\n\n登录到[GitHub](https://github.com/)，创建新仓库，仓库名应该为：**用户名**.github.io\n\n**用户名**为GitHub帐号名，这是固定写法。\n\n# 安装Git\n\n下载地址：[Git - Downloading Package](https://github.com/git-for-windows/git/releases) ，下载安装。\n\n在命令行里输入`git --version`，查看git版本，测试是否安装成功\n\n若安装失败，解决git安装问题。\n\n[**廖雪峰**](https://weibo.com/liaoxuefeng)老师的[Git教程](https://www.liaoxuefeng.com/wiki/896043488029600) \n\n# 配置Git\n\n## 全局配置\n\n```bash\ngit config --global user.name \"GitHub用户名\"\ngit config --global user.email \"GitHub注册邮箱\"\n```\n\n### 生成ssh密钥文件\n\n```bash\nssh-keygen -t rsa -C \"GitHub注册邮箱\"\n```\n\n### 配置ssh密钥\n\n打开[GitHub_Settings_keys](https://github.com/settings/keys) 页面，新建new SSH Key；或打开仓库的Deploy keys页面，新建new deploy key；\n\n其中Title为标题，Key填生成的id_rsa.pub中内容\n\n在Git Bash中检测GitHub公钥设置是否成功，输入 `ssh git@github.com` ：\n\n```txt\nPTY allocation request failed on channel 0\nHi *******! You've successfully authenticated, but GitHub does not provide shell access.\nConnection to github.com closed.\n```\n\n如上则说明成功。\n\n# 安装Node.js\n\n下载地址：[Download | Node.js](https://nodejs.org/en/download/) ，下载安装。注意安装Node.js会包含**环境变量**及**npm**的安装。\n\n安装后，在命令行中输入 `node -v`，检测Node.js是否安装成功 ；输入`npm -v`，检测npm是否安装成功\n\n# 安装Hexo\n\n以[Hexo](https://hexo.io/zh-cn/)作为个人博客网站的框架。\n\n使用npm命令安装Hexo：\n\n```bash\nnpm install hexo-cli -g\n```\n\n安装完成后，在上一级目录`D:\\>`初始化博客，可以命名为blog，Hexo框架与以后发布的网页都在这个文件夹中。\n\n```bash\nhexo init blog\n```\n\n生成并预览博客\n\n```bash\nhexo g\nhexo s\n```\n\n常用的Hexo 命令\n\n`npm install hexo -g` #安装Hexo\n`npm update hexo -g` #升级\n`hexo init` #初始化博客\n\n命令简写\n`hexo n \"我的博客\"` == `hexo new \"我的博客\"` #新建文章\n`hexo g` == `hexo generate` #生成\n`hexo s` == `hexo server` #启动服务预览\n`hexo d` == `hexo deploy` #部署\n\n`hexo server` #Hexo会监视文件变动并自动更新，无须重启服务器\n`hexo server -s` #静态模式\n`hexo server -p 5000` #更改端口\n`hexo server -i 192.168.1.1` #自定义 IP\n`hexo clean` #清除缓存，若是网页正常情况下可以忽略这条命令\n\n# 推送网站\n\n- blog根目录里的_config.yml文件，称为**站点配置文件**\n- 根目录里的themes文件夹，里面也有个_config.yml文件，称为**主题配置文件**\n\n将我们的Hexo与GitHub关联起来，打开**站点配置文件**_config.yml，翻到最后修改\n\n```yml\ndeploy:\n    type: git\n    repo: 在GitHub上创建仓库的完整路径\n    branch: master\n```\n\n安装Git部署插件，输入命令：\n\n```bash\nnpm install hexo-deployer-git --save\n```\n\n此时生成并部署博客\n\n```bash\nhexo clean\nhexo g -d\n```\n\n博客就被部署到：**用户名**.github.io\n\n# 绑定域名\n\n基于阿里云，在**管理控制台**进入**域名解析**管理页面\n\n添加一条CNAME解析\n\n1. 主机记录：@\n2. 记录值：**用户名**.github.io\n3. 其余默认即可\n\n本地博客文件夹 ，在blog/source目录下，创建一个CNAME文件，输入自定义域名。\n\n注意：不是txt文件。如果域名带有www，那么访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。\n\n# 更换主题\n\n更换不同的主题，主题传送门：[Themes](https://hexo.io/themes/)。\n\n[Next](https://theme-next.org/)   [Butterfly](https://github.com/jerryc127/hexo-theme-butterfly)\n\n> **参考**：[RunDouble's Blog](http://wu.run/2018/12/20/hexo-from-github-2-aliyun/)\n","slug":"GithubPage","published":1,"updated":"2022-05-17T13:50:32.909Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3bbwfd5000bt8j7aea1655e","content":"<hr>\n<h1 id=\"配置Github\"><a href=\"#配置Github\" class=\"headerlink\" title=\"配置Github\"></a>配置Github</h1><p>登录到<a href=\"https://github.com/\">GitHub</a>，创建新仓库，仓库名应该为：<strong>用户名</strong>.github.io</p>\n<p><strong>用户名</strong>为GitHub帐号名，这是固定写法。</p>\n<h1 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h1><p>下载地址：<a href=\"https://github.com/git-for-windows/git/releases\">Git - Downloading Package</a> ，下载安装。</p>\n<p>在命令行里输入<code>git --version</code>，查看git版本，测试是否安装成功</p>\n<p>若安装失败，解决git安装问题。</p>\n<p><a href=\"https://weibo.com/liaoxuefeng\"><strong>廖雪峰</strong></a>老师的<a href=\"https://www.liaoxuefeng.com/wiki/896043488029600\">Git教程</a> </p>\n<h1 id=\"配置Git\"><a href=\"#配置Git\" class=\"headerlink\" title=\"配置Git\"></a>配置Git</h1><h2 id=\"全局配置\"><a href=\"#全局配置\" class=\"headerlink\" title=\"全局配置\"></a>全局配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;GitHub用户名&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"生成ssh密钥文件\"><a href=\"#生成ssh密钥文件\" class=\"headerlink\" title=\"生成ssh密钥文件\"></a>生成ssh密钥文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置ssh密钥\"><a href=\"#配置ssh密钥\" class=\"headerlink\" title=\"配置ssh密钥\"></a>配置ssh密钥</h3><p>打开<a href=\"https://github.com/settings/keys\">GitHub_Settings_keys</a> 页面，新建new SSH Key；或打开仓库的Deploy keys页面，新建new deploy key；</p>\n<p>其中Title为标题，Key填生成的id_rsa.pub中内容</p>\n<p>在Git Bash中检测GitHub公钥设置是否成功，输入 <code>ssh git@github.com</code> ：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PTY allocation request failed on channel 0</span><br><span class=\"line\">Hi *******! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class=\"line\">Connection to github.com closed.</span><br></pre></td></tr></table></figure>\n\n<p>如上则说明成功。</p>\n<h1 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h1><p>下载地址：<a href=\"https://nodejs.org/en/download/\">Download | Node.js</a> ，下载安装。注意安装Node.js会包含<strong>环境变量</strong>及<strong>npm</strong>的安装。</p>\n<p>安装后，在命令行中输入 <code>node -v</code>，检测Node.js是否安装成功 ；输入<code>npm -v</code>，检测npm是否安装成功</p>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><p>以<a href=\"https://hexo.io/zh-cn/\">Hexo</a>作为个人博客网站的框架。</p>\n<p>使用npm命令安装Hexo：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后，在上一级目录<code>D:\\&gt;</code>初始化博客，可以命名为blog，Hexo框架与以后发布的网页都在这个文件夹中。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br></pre></td></tr></table></figure>\n\n<p>生成并预览博客</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>常用的Hexo 命令</p>\n<p><code>npm install hexo -g</code> #安装Hexo<br><code>npm update hexo -g</code> #升级<br><code>hexo init</code> #初始化博客</p>\n<p>命令简写<br><code>hexo n &quot;我的博客&quot;</code> == <code>hexo new &quot;我的博客&quot;</code> #新建文章<br><code>hexo g</code> == <code>hexo generate</code> #生成<br><code>hexo s</code> == <code>hexo server</code> #启动服务预览<br><code>hexo d</code> == <code>hexo deploy</code> #部署</p>\n<p><code>hexo server</code> #Hexo会监视文件变动并自动更新，无须重启服务器<br><code>hexo server -s</code> #静态模式<br><code>hexo server -p 5000</code> #更改端口<br><code>hexo server -i 192.168.1.1</code> #自定义 IP<br><code>hexo clean</code> #清除缓存，若是网页正常情况下可以忽略这条命令</p>\n<h1 id=\"推送网站\"><a href=\"#推送网站\" class=\"headerlink\" title=\"推送网站\"></a>推送网站</h1><ul>\n<li>blog根目录里的_config.yml文件，称为<strong>站点配置文件</strong></li>\n<li>根目录里的themes文件夹，里面也有个_config.yml文件，称为<strong>主题配置文件</strong></li>\n</ul>\n<p>将我们的Hexo与GitHub关联起来，打开<strong>站点配置文件</strong>_config.yml，翻到最后修改</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">    <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">    <span class=\"attr\">repo:</span> <span class=\"string\">在GitHub上创建仓库的完整路径</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<p>安装Git部署插件，输入命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>此时生成并部署博客</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n\n<p>博客就被部署到：<strong>用户名</strong>.github.io</p>\n<h1 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h1><p>基于阿里云，在<strong>管理控制台</strong>进入<strong>域名解析</strong>管理页面</p>\n<p>添加一条CNAME解析</p>\n<ol>\n<li>主机记录：@</li>\n<li>记录值：<strong>用户名</strong>.github.io</li>\n<li>其余默认即可</li>\n</ol>\n<p>本地博客文件夹 ，在blog/source目录下，创建一个CNAME文件，输入自定义域名。</p>\n<p>注意：不是txt文件。如果域名带有www，那么访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。</p>\n<h1 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h1><p>更换不同的主题，主题传送门：<a href=\"https://hexo.io/themes/\">Themes</a>。</p>\n<p><a href=\"https://theme-next.org/\">Next</a>   <a href=\"https://github.com/jerryc127/hexo-theme-butterfly\">Butterfly</a></p>\n<blockquote>\n<p><strong>参考</strong>：<a href=\"http://wu.run/2018/12/20/hexo-from-github-2-aliyun/\">RunDouble’s Blog</a></p>\n</blockquote>\n","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"excerpt":"","more":"<hr>\n<h1 id=\"配置Github\"><a href=\"#配置Github\" class=\"headerlink\" title=\"配置Github\"></a>配置Github</h1><p>登录到<a href=\"https://github.com/\">GitHub</a>，创建新仓库，仓库名应该为：<strong>用户名</strong>.github.io</p>\n<p><strong>用户名</strong>为GitHub帐号名，这是固定写法。</p>\n<h1 id=\"安装Git\"><a href=\"#安装Git\" class=\"headerlink\" title=\"安装Git\"></a>安装Git</h1><p>下载地址：<a href=\"https://github.com/git-for-windows/git/releases\">Git - Downloading Package</a> ，下载安装。</p>\n<p>在命令行里输入<code>git --version</code>，查看git版本，测试是否安装成功</p>\n<p>若安装失败，解决git安装问题。</p>\n<p><a href=\"https://weibo.com/liaoxuefeng\"><strong>廖雪峰</strong></a>老师的<a href=\"https://www.liaoxuefeng.com/wiki/896043488029600\">Git教程</a> </p>\n<h1 id=\"配置Git\"><a href=\"#配置Git\" class=\"headerlink\" title=\"配置Git\"></a>配置Git</h1><h2 id=\"全局配置\"><a href=\"#全局配置\" class=\"headerlink\" title=\"全局配置\"></a>全局配置</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git config --global user.name <span class=\"string\">&quot;GitHub用户名&quot;</span></span><br><span class=\"line\">git config --global user.email <span class=\"string\">&quot;GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"生成ssh密钥文件\"><a href=\"#生成ssh密钥文件\" class=\"headerlink\" title=\"生成ssh密钥文件\"></a>生成ssh密钥文件</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C <span class=\"string\">&quot;GitHub注册邮箱&quot;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置ssh密钥\"><a href=\"#配置ssh密钥\" class=\"headerlink\" title=\"配置ssh密钥\"></a>配置ssh密钥</h3><p>打开<a href=\"https://github.com/settings/keys\">GitHub_Settings_keys</a> 页面，新建new SSH Key；或打开仓库的Deploy keys页面，新建new deploy key；</p>\n<p>其中Title为标题，Key填生成的id_rsa.pub中内容</p>\n<p>在Git Bash中检测GitHub公钥设置是否成功，输入 <code>ssh git@github.com</code> ：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">PTY allocation request failed on channel 0</span><br><span class=\"line\">Hi *******! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br><span class=\"line\">Connection to github.com closed.</span><br></pre></td></tr></table></figure>\n\n<p>如上则说明成功。</p>\n<h1 id=\"安装Node-js\"><a href=\"#安装Node-js\" class=\"headerlink\" title=\"安装Node.js\"></a>安装Node.js</h1><p>下载地址：<a href=\"https://nodejs.org/en/download/\">Download | Node.js</a> ，下载安装。注意安装Node.js会包含<strong>环境变量</strong>及<strong>npm</strong>的安装。</p>\n<p>安装后，在命令行中输入 <code>node -v</code>，检测Node.js是否安装成功 ；输入<code>npm -v</code>，检测npm是否安装成功</p>\n<h1 id=\"安装Hexo\"><a href=\"#安装Hexo\" class=\"headerlink\" title=\"安装Hexo\"></a>安装Hexo</h1><p>以<a href=\"https://hexo.io/zh-cn/\">Hexo</a>作为个人博客网站的框架。</p>\n<p>使用npm命令安装Hexo：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后，在上一级目录<code>D:\\&gt;</code>初始化博客，可以命名为blog，Hexo框架与以后发布的网页都在这个文件夹中。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init blog</span><br></pre></td></tr></table></figure>\n\n<p>生成并预览博客</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n\n<p>常用的Hexo 命令</p>\n<p><code>npm install hexo -g</code> #安装Hexo<br><code>npm update hexo -g</code> #升级<br><code>hexo init</code> #初始化博客</p>\n<p>命令简写<br><code>hexo n &quot;我的博客&quot;</code> == <code>hexo new &quot;我的博客&quot;</code> #新建文章<br><code>hexo g</code> == <code>hexo generate</code> #生成<br><code>hexo s</code> == <code>hexo server</code> #启动服务预览<br><code>hexo d</code> == <code>hexo deploy</code> #部署</p>\n<p><code>hexo server</code> #Hexo会监视文件变动并自动更新，无须重启服务器<br><code>hexo server -s</code> #静态模式<br><code>hexo server -p 5000</code> #更改端口<br><code>hexo server -i 192.168.1.1</code> #自定义 IP<br><code>hexo clean</code> #清除缓存，若是网页正常情况下可以忽略这条命令</p>\n<h1 id=\"推送网站\"><a href=\"#推送网站\" class=\"headerlink\" title=\"推送网站\"></a>推送网站</h1><ul>\n<li>blog根目录里的_config.yml文件，称为<strong>站点配置文件</strong></li>\n<li>根目录里的themes文件夹，里面也有个_config.yml文件，称为<strong>主题配置文件</strong></li>\n</ul>\n<p>将我们的Hexo与GitHub关联起来，打开<strong>站点配置文件</strong>_config.yml，翻到最后修改</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">    <span class=\"attr\">type:</span> <span class=\"string\">git</span></span><br><span class=\"line\">    <span class=\"attr\">repo:</span> <span class=\"string\">在GitHub上创建仓库的完整路径</span></span><br><span class=\"line\">    <span class=\"attr\">branch:</span> <span class=\"string\">master</span></span><br></pre></td></tr></table></figure>\n\n<p>安装Git部署插件，输入命令：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>此时生成并部署博客</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g -d</span><br></pre></td></tr></table></figure>\n\n<p>博客就被部署到：<strong>用户名</strong>.github.io</p>\n<h1 id=\"绑定域名\"><a href=\"#绑定域名\" class=\"headerlink\" title=\"绑定域名\"></a>绑定域名</h1><p>基于阿里云，在<strong>管理控制台</strong>进入<strong>域名解析</strong>管理页面</p>\n<p>添加一条CNAME解析</p>\n<ol>\n<li>主机记录：@</li>\n<li>记录值：<strong>用户名</strong>.github.io</li>\n<li>其余默认即可</li>\n</ol>\n<p>本地博客文件夹 ，在blog/source目录下，创建一个CNAME文件，输入自定义域名。</p>\n<p>注意：不是txt文件。如果域名带有www，那么访问的时候必须带有www完整的域名才可以访问，但如果不带有www，以后访问的时候带不带www都可以访问。</p>\n<h1 id=\"更换主题\"><a href=\"#更换主题\" class=\"headerlink\" title=\"更换主题\"></a>更换主题</h1><p>更换不同的主题，主题传送门：<a href=\"https://hexo.io/themes/\">Themes</a>。</p>\n<p><a href=\"https://theme-next.org/\">Next</a>   <a href=\"https://github.com/jerryc127/hexo-theme-butterfly\">Butterfly</a></p>\n<blockquote>\n<p><strong>参考</strong>：<a href=\"http://wu.run/2018/12/20/hexo-from-github-2-aliyun/\">RunDouble’s Blog</a></p>\n</blockquote>\n"},{"title":"Hexo同时部署GitHub Page与云服务器","date":"2021-10-25T03:00:33.000Z","cover":"https://pic1.zhimg.com/v2-55d7911a24217554d57c7827c51f06e1_720w.jpg","_content":"\n# 准备\n\n核心是在原本Github Page推送的基础上，增加一条推送向云服务器的`deploy`，适用于增加更多部署。\n\n## GitHub Page\n\n本地已经配安装置好git、hexo，见{% post_link GithubPage ‘此处’ %}\n\n## 服务器\n\n已搭建好LNMP框架下的网页目录，见{% post_link LNMP搭建 此处 %}\n\n# 搭建\n\n## 本地git\n\n```\nssh-keygen -t rsa\n```\n\n密钥默认位置：C盘用户文件夹下`.ssh`中，如已有则不需要生成。\n\n## 服务器git\n\n### 安装git\n\n```bash\napt-get install git\n```\n\n### 创建git用户及ssh设置\n\n```bash\nsudo adduser git\nsu git\ncd ~\nmkdir .ssh && chmod 700 .ssh\n```\n\n```\ntouch .ssh/authorized_keys && chmod 600 .ssh/authorized_keys\n```\n\n在`authorized_keys`中写入本地生成的公钥\n\n### git仓库\n\n将`home`中的git用户文件夹作为仓库目录\n\n```bash\ngit init --bare hexoBlog.git\n```\n\n在 `/home/git/hexoBlog.git` 下，有一个自动生成的 `hooks` 文件夹。我们需要在里边新建一个新的钩子文件 `post-receive`。**记得赋予执行权限。**\n\n```bash\nvim /home/git/hexoBlog.git/hooks/post-receive\n```\n\n在该文件中添加两行代码\n\n```bash\n#!/bin/bash\ngit --work-tree=/var/www --git-dir=/home/git/hexoBlog.git checkout -f\n#--work-tree是网页目录，--git-dir是git仓库目录\n```\n\n## Nginx托管目录\n\n假设在`/var/www`，需要更改目录权限\n\n```bash\nchown -R $USER:$USER /var/www\n```\n\n## Hexo\n\n本地的 Hexo 博客所在文件，修改站点配置文件，增加一条推送向云服务器的`deploy`。\n\n```bash\ndeploy:\n    repo:\n    #增加一行\n        hexo: git@ip:/home/git/hexoBlog.git,master\n        #这里的@前的git是云服务器的git用户，也可以是root什么的，与云端对应\n```\n\n> **参考**：[HEXO部署到云服务器详细指南](https://www.jianshu.com/p/70bf58c48010 \"HEXO 部署到云服务器详细指南\")，[Hexo教程：Hexo 博客部署到腾讯云教程](https://www.jianshu.com/p/271449df801f \"Hexo教程：Hexo博客部署到腾讯云教程\")\n","source":"_posts/2021-10-25-Hexo-多deploy.md","raw":"---\ntitle: Hexo同时部署GitHub Page与云服务器\ndate: 2021-10-25 11:00:33\ncover: https://pic1.zhimg.com/v2-55d7911a24217554d57c7827c51f06e1_720w.jpg\ntags:\n- [博客]\ncategories:\n- [建站]\n---\n\n# 准备\n\n核心是在原本Github Page推送的基础上，增加一条推送向云服务器的`deploy`，适用于增加更多部署。\n\n## GitHub Page\n\n本地已经配安装置好git、hexo，见{% post_link GithubPage ‘此处’ %}\n\n## 服务器\n\n已搭建好LNMP框架下的网页目录，见{% post_link LNMP搭建 此处 %}\n\n# 搭建\n\n## 本地git\n\n```\nssh-keygen -t rsa\n```\n\n密钥默认位置：C盘用户文件夹下`.ssh`中，如已有则不需要生成。\n\n## 服务器git\n\n### 安装git\n\n```bash\napt-get install git\n```\n\n### 创建git用户及ssh设置\n\n```bash\nsudo adduser git\nsu git\ncd ~\nmkdir .ssh && chmod 700 .ssh\n```\n\n```\ntouch .ssh/authorized_keys && chmod 600 .ssh/authorized_keys\n```\n\n在`authorized_keys`中写入本地生成的公钥\n\n### git仓库\n\n将`home`中的git用户文件夹作为仓库目录\n\n```bash\ngit init --bare hexoBlog.git\n```\n\n在 `/home/git/hexoBlog.git` 下，有一个自动生成的 `hooks` 文件夹。我们需要在里边新建一个新的钩子文件 `post-receive`。**记得赋予执行权限。**\n\n```bash\nvim /home/git/hexoBlog.git/hooks/post-receive\n```\n\n在该文件中添加两行代码\n\n```bash\n#!/bin/bash\ngit --work-tree=/var/www --git-dir=/home/git/hexoBlog.git checkout -f\n#--work-tree是网页目录，--git-dir是git仓库目录\n```\n\n## Nginx托管目录\n\n假设在`/var/www`，需要更改目录权限\n\n```bash\nchown -R $USER:$USER /var/www\n```\n\n## Hexo\n\n本地的 Hexo 博客所在文件，修改站点配置文件，增加一条推送向云服务器的`deploy`。\n\n```bash\ndeploy:\n    repo:\n    #增加一行\n        hexo: git@ip:/home/git/hexoBlog.git,master\n        #这里的@前的git是云服务器的git用户，也可以是root什么的，与云端对应\n```\n\n> **参考**：[HEXO部署到云服务器详细指南](https://www.jianshu.com/p/70bf58c48010 \"HEXO 部署到云服务器详细指南\")，[Hexo教程：Hexo 博客部署到腾讯云教程](https://www.jianshu.com/p/271449df801f \"Hexo教程：Hexo博客部署到腾讯云教程\")\n","slug":"Hexo-多deploy","published":1,"updated":"2022-05-17T13:48:01.440Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3bbwfda000gt8j7318i0xwz","content":"<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>核心是在原本Github Page推送的基础上，增加一条推送向云服务器的<code>deploy</code>，适用于增加更多部署。</p>\n<h2 id=\"GitHub-Page\"><a href=\"#GitHub-Page\" class=\"headerlink\" title=\"GitHub Page\"></a>GitHub Page</h2><p>本地已经配安装置好git、hexo，见<a href=\"/2021/06/14/GithubPage/\" title=\"‘此处’\">‘此处’</a></p>\n<h2 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h2><p>已搭建好LNMP框架下的网页目录，见<a href=\"/2021/09/12/LNMP%E6%90%AD%E5%BB%BA/\" title=\"此处\">此处</a></p>\n<h1 id=\"搭建\"><a href=\"#搭建\" class=\"headerlink\" title=\"搭建\"></a>搭建</h1><h2 id=\"本地git\"><a href=\"#本地git\" class=\"headerlink\" title=\"本地git\"></a>本地git</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>\n\n<p>密钥默认位置：C盘用户文件夹下<code>.ssh</code>中，如已有则不需要生成。</p>\n<h2 id=\"服务器git\"><a href=\"#服务器git\" class=\"headerlink\" title=\"服务器git\"></a>服务器git</h2><h3 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install git</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建git用户及ssh设置\"><a href=\"#创建git用户及ssh设置\" class=\"headerlink\" title=\"创建git用户及ssh设置\"></a>创建git用户及ssh设置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo adduser git</span><br><span class=\"line\">su git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">mkdir .ssh &amp;&amp; chmod 700 .ssh</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch .ssh/authorized_keys &amp;&amp; chmod 600 .ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n\n<p>在<code>authorized_keys</code>中写入本地生成的公钥</p>\n<h3 id=\"git仓库\"><a href=\"#git仓库\" class=\"headerlink\" title=\"git仓库\"></a>git仓库</h3><p>将<code>home</code>中的git用户文件夹作为仓库目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init --bare hexoBlog.git</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>/home/git/hexoBlog.git</code> 下，有一个自动生成的 <code>hooks</code> 文件夹。我们需要在里边新建一个新的钩子文件 <code>post-receive</code>。<strong>记得赋予执行权限。</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /home/git/hexoBlog.git/hooks/post-receive</span><br></pre></td></tr></table></figure>\n\n<p>在该文件中添加两行代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">git --work-tree=/var/www --git-dir=/home/git/hexoBlog.git checkout -f</span><br><span class=\"line\"><span class=\"comment\">#--work-tree是网页目录，--git-dir是git仓库目录</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Nginx托管目录\"><a href=\"#Nginx托管目录\" class=\"headerlink\" title=\"Nginx托管目录\"></a>Nginx托管目录</h2><p>假设在<code>/var/www</code>，需要更改目录权限</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chown -R <span class=\"variable\">$USER</span>:<span class=\"variable\">$USER</span> /var/www</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h2><p>本地的 Hexo 博客所在文件，修改站点配置文件，增加一条推送向云服务器的<code>deploy</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">    repo:</span><br><span class=\"line\">    <span class=\"comment\">#增加一行</span></span><br><span class=\"line\">        hexo: git@ip:/home/git/hexoBlog.git,master</span><br><span class=\"line\">        <span class=\"comment\">#这里的@前的git是云服务器的git用户，也可以是root什么的，与云端对应</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>参考</strong>：<a href=\"https://www.jianshu.com/p/70bf58c48010\" title=\"HEXO 部署到云服务器详细指南\">HEXO部署到云服务器详细指南</a>，<a href=\"https://www.jianshu.com/p/271449df801f\" title=\"Hexo教程：Hexo博客部署到腾讯云教程\">Hexo教程：Hexo 博客部署到腾讯云教程</a></p>\n</blockquote>\n","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"excerpt":"","more":"<h1 id=\"准备\"><a href=\"#准备\" class=\"headerlink\" title=\"准备\"></a>准备</h1><p>核心是在原本Github Page推送的基础上，增加一条推送向云服务器的<code>deploy</code>，适用于增加更多部署。</p>\n<h2 id=\"GitHub-Page\"><a href=\"#GitHub-Page\" class=\"headerlink\" title=\"GitHub Page\"></a>GitHub Page</h2><p>本地已经配安装置好git、hexo，见<a href=\"/2021/06/14/GithubPage/\" title=\"‘此处’\">‘此处’</a></p>\n<h2 id=\"服务器\"><a href=\"#服务器\" class=\"headerlink\" title=\"服务器\"></a>服务器</h2><p>已搭建好LNMP框架下的网页目录，见<a href=\"/2021/09/12/LNMP%E6%90%AD%E5%BB%BA/\" title=\"此处\">此处</a></p>\n<h1 id=\"搭建\"><a href=\"#搭建\" class=\"headerlink\" title=\"搭建\"></a>搭建</h1><h2 id=\"本地git\"><a href=\"#本地git\" class=\"headerlink\" title=\"本地git\"></a>本地git</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>\n\n<p>密钥默认位置：C盘用户文件夹下<code>.ssh</code>中，如已有则不需要生成。</p>\n<h2 id=\"服务器git\"><a href=\"#服务器git\" class=\"headerlink\" title=\"服务器git\"></a>服务器git</h2><h3 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install git</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建git用户及ssh设置\"><a href=\"#创建git用户及ssh设置\" class=\"headerlink\" title=\"创建git用户及ssh设置\"></a>创建git用户及ssh设置</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo adduser git</span><br><span class=\"line\">su git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ~</span><br><span class=\"line\">mkdir .ssh &amp;&amp; chmod 700 .ssh</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">touch .ssh/authorized_keys &amp;&amp; chmod 600 .ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n\n<p>在<code>authorized_keys</code>中写入本地生成的公钥</p>\n<h3 id=\"git仓库\"><a href=\"#git仓库\" class=\"headerlink\" title=\"git仓库\"></a>git仓库</h3><p>将<code>home</code>中的git用户文件夹作为仓库目录</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git init --bare hexoBlog.git</span><br></pre></td></tr></table></figure>\n\n<p>在 <code>/home/git/hexoBlog.git</code> 下，有一个自动生成的 <code>hooks</code> 文件夹。我们需要在里边新建一个新的钩子文件 <code>post-receive</code>。<strong>记得赋予执行权限。</strong></p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /home/git/hexoBlog.git/hooks/post-receive</span><br></pre></td></tr></table></figure>\n\n<p>在该文件中添加两行代码</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\">git --work-tree=/var/www --git-dir=/home/git/hexoBlog.git checkout -f</span><br><span class=\"line\"><span class=\"comment\">#--work-tree是网页目录，--git-dir是git仓库目录</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Nginx托管目录\"><a href=\"#Nginx托管目录\" class=\"headerlink\" title=\"Nginx托管目录\"></a>Nginx托管目录</h2><p>假设在<code>/var/www</code>，需要更改目录权限</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chown -R <span class=\"variable\">$USER</span>:<span class=\"variable\">$USER</span> /var/www</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Hexo\"><a href=\"#Hexo\" class=\"headerlink\" title=\"Hexo\"></a>Hexo</h2><p>本地的 Hexo 博客所在文件，修改站点配置文件，增加一条推送向云服务器的<code>deploy</code>。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">    repo:</span><br><span class=\"line\">    <span class=\"comment\">#增加一行</span></span><br><span class=\"line\">        hexo: git@ip:/home/git/hexoBlog.git,master</span><br><span class=\"line\">        <span class=\"comment\">#这里的@前的git是云服务器的git用户，也可以是root什么的，与云端对应</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p><strong>参考</strong>：<a href=\"https://www.jianshu.com/p/70bf58c48010\" title=\"HEXO 部署到云服务器详细指南\">HEXO部署到云服务器详细指南</a>，<a href=\"https://www.jianshu.com/p/271449df801f\" title=\"Hexo教程：Hexo博客部署到腾讯云教程\">Hexo教程：Hexo 博客部署到腾讯云教程</a></p>\n</blockquote>\n"},{"title":"Ubuntu 20.04 lts 安装 LNMP","date":"2021-09-12T12:37:33.000Z","cover":"https://img.wordpressjc.com/wp-content/uploads/2019/05/1558091755-lnmp.jpeg","_content":"\n**参考**：[Debian9(Stretch) 下编译安装LNMP环境](https://blog.csdn.net/weixin_34232363/article/details/88728946 \"Debian9(Stretch) 下编译安装LNMP环境\")\n\n------------\n\n# 一、环境\n\n- **Ubuntu 20.04 lts**\n\n- [**Nginx-1.20.2**](https://nginx.org/download/nginx-1.20.2.tar.gz)\n  \n  - [**zlib-1.2.12**](http://zlib.net/zlib-1.2.12.tar.gz)\n  - [**pcre-8.45**](https://versaweb.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.zip)\n  - [**openssl-1.1.1o**](https://www.openssl.org/source/openssl-1.1.1o.tar.gz)\n\n- [**PHP-7.4.29**](https://www.php.net/distributions/php-7.4.29.tar.gz)\n\n- [**MariaDB-10.3**](https://dlm.mariadb.com/2145683/MariaDB/mariadb-10.7.3/repo/ubuntu/mariadb-10.7.3-ubuntu-focal-amd64-debs.tar) \n\n# 二、 安装过程\n\n按照MariaDB > Nginx > PHP的顺序安装。\n\n## 2.1 MariaDB\n\n### 2.1.1 安装\n\n```bash\nsudo apt update\nsudo apt install mariadb-server\n```\n\n安装完成后 ，MariaDB 服务将会自动启动。输入以下命令验证数据库服务器是否正在运行。\n输出结果将会显示服务已经启用，并且正在运行。\n\n```bash\nsudo systemctl status mariadb\n```\n\n### 2.1.2 维护\n\n```bash\nsudo mysql_secure_installation\n```\n\n根据脚本提示输入 root 密码：\n由于没有设置 root 密码，所以这里仅仅输入回车\"Enter\"即可。\n接下来，会提示是否为 MySQL root 用户设置密码：\n\n```bash\nEnter current password for root (enter for none):\nSet root password? [Y/n] n\nRemove anonymous users? [Y/n] Y \nDisallow root login remotely? [Y/n] Y \nRemove test database and access to it? [Y/n] Y \nReload privilege tables now? [Y/n] Y\n```\n\n## 2.2 Nginx 源码安装\n\n三个源码包： [**zlib-1.2.12**](http://zlib.net/zlib-1.2.12.tar.gz)(压缩库) [**pcre-8.45**](https://versaweb.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.zip)(正则表达式库) [**openssl-1.1.1o**](https://www.openssl.org/source/openssl-1.1.1o.tar.gz)(加密库，如果要使用HTTPS，这个库是必须的)\n\n### 2.2.1 创建用户\n\n```bash\ngroupadd -r nginx\nuseradd -r -g nginx -s /bin/false -M nginx\n```\n\n### 2.2.2 编译安装\n\n安装编译器\n\n```bash\napt install build-essential \n```\n\n编译安装\n\n```\n./configure --prefix=/etc/nginx --group=nginx --user=nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-pcre-jit --with-openssl-opt=no-nextprotoneg --with-debug --with-pcre=../pcre-8.45 --with-zlib=../zlib-1.2.12 --with-openssl=../openssl-1.1.1o\n## --with-pcre=../pcre-8.45 --with-zlib=../zlib-1.2.12 --with-openssl=../openssl-1.1.1o填源码包路径\n## 注意，如果是使用二进制包安装了zlib,pcre,openssl,及相应的开发库，不需要指定路径。\nmkdir /var/cache/nginx\n```\n\n然后，`make` 和 `make install`\n\n### 2.2.2 启动项\n\n`vim /etc/sytemd/system/nginx.service`\n\n```\n[Unit]\nDescription=nginx - high performance web server\nDocumentation=http://nginx.org/en/docs/\nAfter=network-online.target remote-fs.target nss-lookup.target\nWants=network-online.target\n\n[Service]\nType=forking\nPIDFile=/run/nginx.pid\nExecStartPre=/usr/sbin/nginx -t -c /etc/nginx/nginx.conf\nExecStart=/usr/sbin/nginx -c /etc/nginx/nginx.conf\nExecReload=/bin/kill -s HUP $MAINPID\nExecStop=/bin/kill -s TERM $MAINPID\n\n[Install]\nWantedBy=multi-user.target\n```\n\n这个可以在nginx 官网找到，可以按照自己需求修改。注意路径修改成自己的安装路径。 `systemctl daemon-reload` `systemctl start nginx.service` 启动Nginx `systemctl enable nginx.service` 开机启动。\n\n记得，如果中途修改了service文件，一定要先运行 systemctl daemon-reload重新加载守护进程文件。然后运行 systemctl start nginx.service重启服务。\n\n## 2.3 PHP安装\n\n### 2.3.1 安装\n\n```\napt-get install php7.4 php7.4-fpm\n```\n\n### 2.3.2 配置Nginx支持\n\n需要PHP的网页启用\n\n1. 在`server{}`内，找到`index`开头的配置行，在该行中添加`index.php`。\n\n2. 在`server{}`内，找到`location ~ \\.php$ {}`，启用以下行\n\n```\nlocation ~ \\.php$ {\n   include snippets/fastcgi-php.conf;\n   fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;\n}\n```\n\n待续~~~\n","source":"_posts/2021-09-12-LNMP搭建.md","raw":"---\ntitle: Ubuntu 20.04 lts 安装 LNMP\ndate: 2021-09-12 20:37:33\ncover: https://img.wordpressjc.com/wp-content/uploads/2019/05/1558091755-lnmp.jpeg\ntags: \n- [服务部署]\ncategories:\n- [建站]\n---\n\n**参考**：[Debian9(Stretch) 下编译安装LNMP环境](https://blog.csdn.net/weixin_34232363/article/details/88728946 \"Debian9(Stretch) 下编译安装LNMP环境\")\n\n------------\n\n# 一、环境\n\n- **Ubuntu 20.04 lts**\n\n- [**Nginx-1.20.2**](https://nginx.org/download/nginx-1.20.2.tar.gz)\n  \n  - [**zlib-1.2.12**](http://zlib.net/zlib-1.2.12.tar.gz)\n  - [**pcre-8.45**](https://versaweb.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.zip)\n  - [**openssl-1.1.1o**](https://www.openssl.org/source/openssl-1.1.1o.tar.gz)\n\n- [**PHP-7.4.29**](https://www.php.net/distributions/php-7.4.29.tar.gz)\n\n- [**MariaDB-10.3**](https://dlm.mariadb.com/2145683/MariaDB/mariadb-10.7.3/repo/ubuntu/mariadb-10.7.3-ubuntu-focal-amd64-debs.tar) \n\n# 二、 安装过程\n\n按照MariaDB > Nginx > PHP的顺序安装。\n\n## 2.1 MariaDB\n\n### 2.1.1 安装\n\n```bash\nsudo apt update\nsudo apt install mariadb-server\n```\n\n安装完成后 ，MariaDB 服务将会自动启动。输入以下命令验证数据库服务器是否正在运行。\n输出结果将会显示服务已经启用，并且正在运行。\n\n```bash\nsudo systemctl status mariadb\n```\n\n### 2.1.2 维护\n\n```bash\nsudo mysql_secure_installation\n```\n\n根据脚本提示输入 root 密码：\n由于没有设置 root 密码，所以这里仅仅输入回车\"Enter\"即可。\n接下来，会提示是否为 MySQL root 用户设置密码：\n\n```bash\nEnter current password for root (enter for none):\nSet root password? [Y/n] n\nRemove anonymous users? [Y/n] Y \nDisallow root login remotely? [Y/n] Y \nRemove test database and access to it? [Y/n] Y \nReload privilege tables now? [Y/n] Y\n```\n\n## 2.2 Nginx 源码安装\n\n三个源码包： [**zlib-1.2.12**](http://zlib.net/zlib-1.2.12.tar.gz)(压缩库) [**pcre-8.45**](https://versaweb.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.zip)(正则表达式库) [**openssl-1.1.1o**](https://www.openssl.org/source/openssl-1.1.1o.tar.gz)(加密库，如果要使用HTTPS，这个库是必须的)\n\n### 2.2.1 创建用户\n\n```bash\ngroupadd -r nginx\nuseradd -r -g nginx -s /bin/false -M nginx\n```\n\n### 2.2.2 编译安装\n\n安装编译器\n\n```bash\napt install build-essential \n```\n\n编译安装\n\n```\n./configure --prefix=/etc/nginx --group=nginx --user=nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-pcre-jit --with-openssl-opt=no-nextprotoneg --with-debug --with-pcre=../pcre-8.45 --with-zlib=../zlib-1.2.12 --with-openssl=../openssl-1.1.1o\n## --with-pcre=../pcre-8.45 --with-zlib=../zlib-1.2.12 --with-openssl=../openssl-1.1.1o填源码包路径\n## 注意，如果是使用二进制包安装了zlib,pcre,openssl,及相应的开发库，不需要指定路径。\nmkdir /var/cache/nginx\n```\n\n然后，`make` 和 `make install`\n\n### 2.2.2 启动项\n\n`vim /etc/sytemd/system/nginx.service`\n\n```\n[Unit]\nDescription=nginx - high performance web server\nDocumentation=http://nginx.org/en/docs/\nAfter=network-online.target remote-fs.target nss-lookup.target\nWants=network-online.target\n\n[Service]\nType=forking\nPIDFile=/run/nginx.pid\nExecStartPre=/usr/sbin/nginx -t -c /etc/nginx/nginx.conf\nExecStart=/usr/sbin/nginx -c /etc/nginx/nginx.conf\nExecReload=/bin/kill -s HUP $MAINPID\nExecStop=/bin/kill -s TERM $MAINPID\n\n[Install]\nWantedBy=multi-user.target\n```\n\n这个可以在nginx 官网找到，可以按照自己需求修改。注意路径修改成自己的安装路径。 `systemctl daemon-reload` `systemctl start nginx.service` 启动Nginx `systemctl enable nginx.service` 开机启动。\n\n记得，如果中途修改了service文件，一定要先运行 systemctl daemon-reload重新加载守护进程文件。然后运行 systemctl start nginx.service重启服务。\n\n## 2.3 PHP安装\n\n### 2.3.1 安装\n\n```\napt-get install php7.4 php7.4-fpm\n```\n\n### 2.3.2 配置Nginx支持\n\n需要PHP的网页启用\n\n1. 在`server{}`内，找到`index`开头的配置行，在该行中添加`index.php`。\n\n2. 在`server{}`内，找到`location ~ \\.php$ {}`，启用以下行\n\n```\nlocation ~ \\.php$ {\n   include snippets/fastcgi-php.conf;\n   fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;\n}\n```\n\n待续~~~\n","slug":"LNMP搭建","published":1,"updated":"2022-05-17T13:50:59.498Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3bbwfdc000it8j7dr5wczg2","content":"<p><strong>参考</strong>：<a href=\"https://blog.csdn.net/weixin_34232363/article/details/88728946\" title=\"Debian9(Stretch) 下编译安装LNMP环境\">Debian9(Stretch) 下编译安装LNMP环境</a></p>\n<hr>\n<h1 id=\"一、环境\"><a href=\"#一、环境\" class=\"headerlink\" title=\"一、环境\"></a>一、环境</h1><ul>\n<li><p><strong>Ubuntu 20.04 lts</strong></p>\n</li>\n<li><p><a href=\"https://nginx.org/download/nginx-1.20.2.tar.gz\"><strong>Nginx-1.20.2</strong></a></p>\n<ul>\n<li><a href=\"http://zlib.net/zlib-1.2.12.tar.gz\"><strong>zlib-1.2.12</strong></a></li>\n<li><a href=\"https://versaweb.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.zip\"><strong>pcre-8.45</strong></a></li>\n<li><a href=\"https://www.openssl.org/source/openssl-1.1.1o.tar.gz\"><strong>openssl-1.1.1o</strong></a></li>\n</ul>\n</li>\n<li><p><a href=\"https://www.php.net/distributions/php-7.4.29.tar.gz\"><strong>PHP-7.4.29</strong></a></p>\n</li>\n<li><p><a href=\"https://dlm.mariadb.com/2145683/MariaDB/mariadb-10.7.3/repo/ubuntu/mariadb-10.7.3-ubuntu-focal-amd64-debs.tar\"><strong>MariaDB-10.3</strong></a> </p>\n</li>\n</ul>\n<h1 id=\"二、-安装过程\"><a href=\"#二、-安装过程\" class=\"headerlink\" title=\"二、 安装过程\"></a>二、 安装过程</h1><p>按照MariaDB &gt; Nginx &gt; PHP的顺序安装。</p>\n<h2 id=\"2-1-MariaDB\"><a href=\"#2-1-MariaDB\" class=\"headerlink\" title=\"2.1 MariaDB\"></a>2.1 MariaDB</h2><h3 id=\"2-1-1-安装\"><a href=\"#2-1-1-安装\" class=\"headerlink\" title=\"2.1.1 安装\"></a>2.1.1 安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install mariadb-server</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后 ，MariaDB 服务将会自动启动。输入以下命令验证数据库服务器是否正在运行。<br>输出结果将会显示服务已经启用，并且正在运行。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl status mariadb</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-2-维护\"><a href=\"#2-1-2-维护\" class=\"headerlink\" title=\"2.1.2 维护\"></a>2.1.2 维护</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>\n\n<p>根据脚本提示输入 root 密码：<br>由于没有设置 root 密码，所以这里仅仅输入回车”Enter”即可。<br>接下来，会提示是否为 MySQL root 用户设置密码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Enter current password <span class=\"keyword\">for</span> root (enter <span class=\"keyword\">for</span> none):</span><br><span class=\"line\">Set root password? [Y/n] n</span><br><span class=\"line\">Remove anonymous users? [Y/n] Y </span><br><span class=\"line\">Disallow root login remotely? [Y/n] Y </span><br><span class=\"line\">Remove <span class=\"built_in\">test</span> database and access to it? [Y/n] Y </span><br><span class=\"line\">Reload privilege tables now? [Y/n] Y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-2-Nginx-源码安装\"><a href=\"#2-2-Nginx-源码安装\" class=\"headerlink\" title=\"2.2 Nginx 源码安装\"></a>2.2 Nginx 源码安装</h2><p>三个源码包： <a href=\"http://zlib.net/zlib-1.2.12.tar.gz\"><strong>zlib-1.2.12</strong></a>(压缩库) <a href=\"https://versaweb.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.zip\"><strong>pcre-8.45</strong></a>(正则表达式库) <a href=\"https://www.openssl.org/source/openssl-1.1.1o.tar.gz\"><strong>openssl-1.1.1o</strong></a>(加密库，如果要使用HTTPS，这个库是必须的)</p>\n<h3 id=\"2-2-1-创建用户\"><a href=\"#2-2-1-创建用户\" class=\"headerlink\" title=\"2.2.1 创建用户\"></a>2.2.1 创建用户</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd -r nginx</span><br><span class=\"line\">useradd -r -g nginx -s /bin/<span class=\"literal\">false</span> -M nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-2-编译安装\"><a href=\"#2-2-2-编译安装\" class=\"headerlink\" title=\"2.2.2 编译安装\"></a>2.2.2 编译安装</h3><p>安装编译器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install build-essential </span><br></pre></td></tr></table></figure>\n\n<p>编译安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/etc/nginx --group=nginx --user=nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-pcre-jit --with-openssl-opt=no-nextprotoneg --with-debug --with-pcre=../pcre-8.45 --with-zlib=../zlib-1.2.12 --with-openssl=../openssl-1.1.1o</span><br><span class=\"line\">## --with-pcre=../pcre-8.45 --with-zlib=../zlib-1.2.12 --with-openssl=../openssl-1.1.1o填源码包路径</span><br><span class=\"line\">## 注意，如果是使用二进制包安装了zlib,pcre,openssl,及相应的开发库，不需要指定路径。</span><br><span class=\"line\">mkdir /var/cache/nginx</span><br></pre></td></tr></table></figure>\n\n<p>然后，<code>make</code> 和 <code>make install</code></p>\n<h3 id=\"2-2-2-启动项\"><a href=\"#2-2-2-启动项\" class=\"headerlink\" title=\"2.2.2 启动项\"></a>2.2.2 启动项</h3><p><code>vim /etc/sytemd/system/nginx.service</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=nginx - high performance web server</span><br><span class=\"line\">Documentation=http://nginx.org/en/docs/</span><br><span class=\"line\">After=network-online.target remote-fs.target nss-lookup.target</span><br><span class=\"line\">Wants=network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">PIDFile=/run/nginx.pid</span><br><span class=\"line\">ExecStartPre=/usr/sbin/nginx -t -c /etc/nginx/nginx.conf</span><br><span class=\"line\">ExecStart=/usr/sbin/nginx -c /etc/nginx/nginx.conf</span><br><span class=\"line\">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class=\"line\">ExecStop=/bin/kill -s TERM $MAINPID</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<p>这个可以在nginx 官网找到，可以按照自己需求修改。注意路径修改成自己的安装路径。 <code>systemctl daemon-reload</code> <code>systemctl start nginx.service</code> 启动Nginx <code>systemctl enable nginx.service</code> 开机启动。</p>\n<p>记得，如果中途修改了service文件，一定要先运行 systemctl daemon-reload重新加载守护进程文件。然后运行 systemctl start nginx.service重启服务。</p>\n<h2 id=\"2-3-PHP安装\"><a href=\"#2-3-PHP安装\" class=\"headerlink\" title=\"2.3 PHP安装\"></a>2.3 PHP安装</h2><h3 id=\"2-3-1-安装\"><a href=\"#2-3-1-安装\" class=\"headerlink\" title=\"2.3.1 安装\"></a>2.3.1 安装</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install php7.4 php7.4-fpm</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-2-配置Nginx支持\"><a href=\"#2-3-2-配置Nginx支持\" class=\"headerlink\" title=\"2.3.2 配置Nginx支持\"></a>2.3.2 配置Nginx支持</h3><p>需要PHP的网页启用</p>\n<ol>\n<li><p>在<code>server&#123;&#125;</code>内，找到<code>index</code>开头的配置行，在该行中添加<code>index.php</code>。</p>\n</li>\n<li><p>在<code>server&#123;&#125;</code>内，找到<code>location ~ \\.php$ &#123;&#125;</code>，启用以下行</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ \\.php$ &#123;</span><br><span class=\"line\">   include snippets/fastcgi-php.conf;</span><br><span class=\"line\">   fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>待续~~~</p>\n","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"excerpt":"","more":"<p><strong>参考</strong>：<a href=\"https://blog.csdn.net/weixin_34232363/article/details/88728946\" title=\"Debian9(Stretch) 下编译安装LNMP环境\">Debian9(Stretch) 下编译安装LNMP环境</a></p>\n<hr>\n<h1 id=\"一、环境\"><a href=\"#一、环境\" class=\"headerlink\" title=\"一、环境\"></a>一、环境</h1><ul>\n<li><p><strong>Ubuntu 20.04 lts</strong></p>\n</li>\n<li><p><a href=\"https://nginx.org/download/nginx-1.20.2.tar.gz\"><strong>Nginx-1.20.2</strong></a></p>\n<ul>\n<li><a href=\"http://zlib.net/zlib-1.2.12.tar.gz\"><strong>zlib-1.2.12</strong></a></li>\n<li><a href=\"https://versaweb.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.zip\"><strong>pcre-8.45</strong></a></li>\n<li><a href=\"https://www.openssl.org/source/openssl-1.1.1o.tar.gz\"><strong>openssl-1.1.1o</strong></a></li>\n</ul>\n</li>\n<li><p><a href=\"https://www.php.net/distributions/php-7.4.29.tar.gz\"><strong>PHP-7.4.29</strong></a></p>\n</li>\n<li><p><a href=\"https://dlm.mariadb.com/2145683/MariaDB/mariadb-10.7.3/repo/ubuntu/mariadb-10.7.3-ubuntu-focal-amd64-debs.tar\"><strong>MariaDB-10.3</strong></a> </p>\n</li>\n</ul>\n<h1 id=\"二、-安装过程\"><a href=\"#二、-安装过程\" class=\"headerlink\" title=\"二、 安装过程\"></a>二、 安装过程</h1><p>按照MariaDB &gt; Nginx &gt; PHP的顺序安装。</p>\n<h2 id=\"2-1-MariaDB\"><a href=\"#2-1-MariaDB\" class=\"headerlink\" title=\"2.1 MariaDB\"></a>2.1 MariaDB</h2><h3 id=\"2-1-1-安装\"><a href=\"#2-1-1-安装\" class=\"headerlink\" title=\"2.1.1 安装\"></a>2.1.1 安装</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt update</span><br><span class=\"line\">sudo apt install mariadb-server</span><br></pre></td></tr></table></figure>\n\n<p>安装完成后 ，MariaDB 服务将会自动启动。输入以下命令验证数据库服务器是否正在运行。<br>输出结果将会显示服务已经启用，并且正在运行。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo systemctl status mariadb</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-1-2-维护\"><a href=\"#2-1-2-维护\" class=\"headerlink\" title=\"2.1.2 维护\"></a>2.1.2 维护</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo mysql_secure_installation</span><br></pre></td></tr></table></figure>\n\n<p>根据脚本提示输入 root 密码：<br>由于没有设置 root 密码，所以这里仅仅输入回车”Enter”即可。<br>接下来，会提示是否为 MySQL root 用户设置密码：</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Enter current password <span class=\"keyword\">for</span> root (enter <span class=\"keyword\">for</span> none):</span><br><span class=\"line\">Set root password? [Y/n] n</span><br><span class=\"line\">Remove anonymous users? [Y/n] Y </span><br><span class=\"line\">Disallow root login remotely? [Y/n] Y </span><br><span class=\"line\">Remove <span class=\"built_in\">test</span> database and access to it? [Y/n] Y </span><br><span class=\"line\">Reload privilege tables now? [Y/n] Y</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2-2-Nginx-源码安装\"><a href=\"#2-2-Nginx-源码安装\" class=\"headerlink\" title=\"2.2 Nginx 源码安装\"></a>2.2 Nginx 源码安装</h2><p>三个源码包： <a href=\"http://zlib.net/zlib-1.2.12.tar.gz\"><strong>zlib-1.2.12</strong></a>(压缩库) <a href=\"https://versaweb.dl.sourceforge.net/project/pcre/pcre/8.45/pcre-8.45.zip\"><strong>pcre-8.45</strong></a>(正则表达式库) <a href=\"https://www.openssl.org/source/openssl-1.1.1o.tar.gz\"><strong>openssl-1.1.1o</strong></a>(加密库，如果要使用HTTPS，这个库是必须的)</p>\n<h3 id=\"2-2-1-创建用户\"><a href=\"#2-2-1-创建用户\" class=\"headerlink\" title=\"2.2.1 创建用户\"></a>2.2.1 创建用户</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">groupadd -r nginx</span><br><span class=\"line\">useradd -r -g nginx -s /bin/<span class=\"literal\">false</span> -M nginx</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-2-2-编译安装\"><a href=\"#2-2-2-编译安装\" class=\"headerlink\" title=\"2.2.2 编译安装\"></a>2.2.2 编译安装</h3><p>安装编译器</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt install build-essential </span><br></pre></td></tr></table></figure>\n\n<p>编译安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./configure --prefix=/etc/nginx --group=nginx --user=nginx --sbin-path=/usr/sbin/nginx --modules-path=/usr/lib/nginx/modules --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pid --lock-path=/var/run/nginx.lock --http-client-body-temp-path=/var/cache/nginx/client_temp --http-proxy-temp-path=/var/cache/nginx/proxy_temp --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp --http-scgi-temp-path=/var/cache/nginx/scgi_temp --with-compat --with-file-aio --with-threads --with-http_addition_module --with-http_auth_request_module --with-http_dav_module --with-http_flv_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_mp4_module --with-http_random_index_module --with-http_realip_module --with-http_secure_link_module --with-http_slice_module --with-http_ssl_module --with-http_stub_status_module --with-http_sub_module --with-http_v2_module --with-mail --with-mail_ssl_module --with-stream --with-stream_realip_module --with-stream_ssl_module --with-stream_ssl_preread_module --with-pcre-jit --with-openssl-opt=no-nextprotoneg --with-debug --with-pcre=../pcre-8.45 --with-zlib=../zlib-1.2.12 --with-openssl=../openssl-1.1.1o</span><br><span class=\"line\">## --with-pcre=../pcre-8.45 --with-zlib=../zlib-1.2.12 --with-openssl=../openssl-1.1.1o填源码包路径</span><br><span class=\"line\">## 注意，如果是使用二进制包安装了zlib,pcre,openssl,及相应的开发库，不需要指定路径。</span><br><span class=\"line\">mkdir /var/cache/nginx</span><br></pre></td></tr></table></figure>\n\n<p>然后，<code>make</code> 和 <code>make install</code></p>\n<h3 id=\"2-2-2-启动项\"><a href=\"#2-2-2-启动项\" class=\"headerlink\" title=\"2.2.2 启动项\"></a>2.2.2 启动项</h3><p><code>vim /etc/sytemd/system/nginx.service</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=nginx - high performance web server</span><br><span class=\"line\">Documentation=http://nginx.org/en/docs/</span><br><span class=\"line\">After=network-online.target remote-fs.target nss-lookup.target</span><br><span class=\"line\">Wants=network-online.target</span><br><span class=\"line\"></span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">PIDFile=/run/nginx.pid</span><br><span class=\"line\">ExecStartPre=/usr/sbin/nginx -t -c /etc/nginx/nginx.conf</span><br><span class=\"line\">ExecStart=/usr/sbin/nginx -c /etc/nginx/nginx.conf</span><br><span class=\"line\">ExecReload=/bin/kill -s HUP $MAINPID</span><br><span class=\"line\">ExecStop=/bin/kill -s TERM $MAINPID</span><br><span class=\"line\"></span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>\n\n<p>这个可以在nginx 官网找到，可以按照自己需求修改。注意路径修改成自己的安装路径。 <code>systemctl daemon-reload</code> <code>systemctl start nginx.service</code> 启动Nginx <code>systemctl enable nginx.service</code> 开机启动。</p>\n<p>记得，如果中途修改了service文件，一定要先运行 systemctl daemon-reload重新加载守护进程文件。然后运行 systemctl start nginx.service重启服务。</p>\n<h2 id=\"2-3-PHP安装\"><a href=\"#2-3-PHP安装\" class=\"headerlink\" title=\"2.3 PHP安装\"></a>2.3 PHP安装</h2><h3 id=\"2-3-1-安装\"><a href=\"#2-3-1-安装\" class=\"headerlink\" title=\"2.3.1 安装\"></a>2.3.1 安装</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install php7.4 php7.4-fpm</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2-3-2-配置Nginx支持\"><a href=\"#2-3-2-配置Nginx支持\" class=\"headerlink\" title=\"2.3.2 配置Nginx支持\"></a>2.3.2 配置Nginx支持</h3><p>需要PHP的网页启用</p>\n<ol>\n<li><p>在<code>server&#123;&#125;</code>内，找到<code>index</code>开头的配置行，在该行中添加<code>index.php</code>。</p>\n</li>\n<li><p>在<code>server&#123;&#125;</code>内，找到<code>location ~ \\.php$ &#123;&#125;</code>，启用以下行</p>\n</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ \\.php$ &#123;</span><br><span class=\"line\">   include snippets/fastcgi-php.conf;</span><br><span class=\"line\">   fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>待续~~~</p>\n"},{"title":"NVM-Windows","date":"2022-05-17T12:45:35.000Z","cover":"/img/nvm.jpg","_content":"\n# nvm是什么\n\n**nvm**全英文也叫**node.js version management**，是一个**nodejs**的版本管理工具。**nvm**和**n**都是**node.js**版本管理工具，为了解决**node.js**各种版本存在不兼容现象可以通过它可以安装和切换不同版本的**node.js**。\n\n# nvm下载\n\n在[github](https://github.com/coreybutler/nvm-windows/releases)上下载最新版本,本次下载安装的是windows版本。\n\n# nvm安装\n\n1. **卸载之前的node后安装nvm**, nvm-setup.exe安装版，直接运行nvm-setup.exe\n2. 选择nvm安装路径(无空格与中文)\n3. 选择nodejs路径\n4. 确认安装即可\n5. 安装完确认\n\n打开CMD，输入命令 nvm ，安装成功则可以看到列出了各种命令，**nvm-windows 需要管理员权限**。\n\n# nvm命令提示\n\n- nvm arch：显示node是运行在32位还是64位。\n- nvm install <version> [arch] ：安装node， version是特定版本也可以是最新稳定版本latest。可选参数arch指定安装32位还是64位版本，默认是系统位数。可以添加--insecure绕过远程服务器的SSL。\n- **nvm list [available]** **：显示已安装的列表。可选参数available，显示可安装的所有版本。list可简化为ls。**\n- nvm on ：开启node.js版本管理。\n- nvm off ：关闭node.js版本管理。\n- nvm proxy [url] ：设置下载代理。不加可选参数url，显示当前代理。将url设置为none则移除代理。\n- nvm node_mirror [url] ：设置node镜像。默认是https://nodejs.org/dist/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。\n- nvm npm_mirror [url] ：设置npm镜像。https://github.com/npm/cli/archive/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。\n- nvm uninstall <version> ：卸载指定版本node。\n- **nvm use [version] [arch]** **：使用制定版本node。可指定32/64位。**\n- nvm root [path] ：设置存储不同版本node的目录。如果未设置，默认使用当前目录。\n- nvm version ：显示nvm版本。version可简化为v。\n\n# nvm常见问题\n\n如果下载node过慢，请更换国内镜像源, 在 nvm 的安装路径下，找到 settings.txt，设置node_mirro与npm_mirror为国内镜像地址。下载就飞快了~~\n\nnvm node_mirror https://npmmirror.com/mirrors/node/\nnvm npm_mirror https://npm.taobao.org/mirrors/npm/\n\n> 来源：[http://nvm.uihtm.com/](http://nvm.uihtm.com/)\n","source":"_posts/2022-05-17-NVM-Windows.md","raw":"---\ntitle: NVM-Windows\ndate: 2022-05-17 20:45:35\ncover: /img/nvm.jpg\ntags:\n- [工具]\ncategories:\n- [软件]\n---\n\n# nvm是什么\n\n**nvm**全英文也叫**node.js version management**，是一个**nodejs**的版本管理工具。**nvm**和**n**都是**node.js**版本管理工具，为了解决**node.js**各种版本存在不兼容现象可以通过它可以安装和切换不同版本的**node.js**。\n\n# nvm下载\n\n在[github](https://github.com/coreybutler/nvm-windows/releases)上下载最新版本,本次下载安装的是windows版本。\n\n# nvm安装\n\n1. **卸载之前的node后安装nvm**, nvm-setup.exe安装版，直接运行nvm-setup.exe\n2. 选择nvm安装路径(无空格与中文)\n3. 选择nodejs路径\n4. 确认安装即可\n5. 安装完确认\n\n打开CMD，输入命令 nvm ，安装成功则可以看到列出了各种命令，**nvm-windows 需要管理员权限**。\n\n# nvm命令提示\n\n- nvm arch：显示node是运行在32位还是64位。\n- nvm install <version> [arch] ：安装node， version是特定版本也可以是最新稳定版本latest。可选参数arch指定安装32位还是64位版本，默认是系统位数。可以添加--insecure绕过远程服务器的SSL。\n- **nvm list [available]** **：显示已安装的列表。可选参数available，显示可安装的所有版本。list可简化为ls。**\n- nvm on ：开启node.js版本管理。\n- nvm off ：关闭node.js版本管理。\n- nvm proxy [url] ：设置下载代理。不加可选参数url，显示当前代理。将url设置为none则移除代理。\n- nvm node_mirror [url] ：设置node镜像。默认是https://nodejs.org/dist/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。\n- nvm npm_mirror [url] ：设置npm镜像。https://github.com/npm/cli/archive/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。\n- nvm uninstall <version> ：卸载指定版本node。\n- **nvm use [version] [arch]** **：使用制定版本node。可指定32/64位。**\n- nvm root [path] ：设置存储不同版本node的目录。如果未设置，默认使用当前目录。\n- nvm version ：显示nvm版本。version可简化为v。\n\n# nvm常见问题\n\n如果下载node过慢，请更换国内镜像源, 在 nvm 的安装路径下，找到 settings.txt，设置node_mirro与npm_mirror为国内镜像地址。下载就飞快了~~\n\nnvm node_mirror https://npmmirror.com/mirrors/node/\nnvm npm_mirror https://npm.taobao.org/mirrors/npm/\n\n> 来源：[http://nvm.uihtm.com/](http://nvm.uihtm.com/)\n","slug":"NVM-Windows","published":1,"updated":"2022-05-17T14:04:45.522Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3bbwfde000nt8j7b1d08h9f","content":"<h1 id=\"nvm是什么\"><a href=\"#nvm是什么\" class=\"headerlink\" title=\"nvm是什么\"></a>nvm是什么</h1><p><strong>nvm</strong>全英文也叫<strong>node.js version management</strong>，是一个<strong>nodejs</strong>的版本管理工具。<strong>nvm</strong>和<strong>n</strong>都是<strong>node.js</strong>版本管理工具，为了解决<strong>node.js</strong>各种版本存在不兼容现象可以通过它可以安装和切换不同版本的<strong>node.js</strong>。</p>\n<h1 id=\"nvm下载\"><a href=\"#nvm下载\" class=\"headerlink\" title=\"nvm下载\"></a>nvm下载</h1><p>在<a href=\"https://github.com/coreybutler/nvm-windows/releases\">github</a>上下载最新版本,本次下载安装的是windows版本。</p>\n<h1 id=\"nvm安装\"><a href=\"#nvm安装\" class=\"headerlink\" title=\"nvm安装\"></a>nvm安装</h1><ol>\n<li><strong>卸载之前的node后安装nvm</strong>, nvm-setup.exe安装版，直接运行nvm-setup.exe</li>\n<li>选择nvm安装路径(无空格与中文)</li>\n<li>选择nodejs路径</li>\n<li>确认安装即可</li>\n<li>安装完确认</li>\n</ol>\n<p>打开CMD，输入命令 nvm ，安装成功则可以看到列出了各种命令，<strong>nvm-windows 需要管理员权限</strong>。</p>\n<h1 id=\"nvm命令提示\"><a href=\"#nvm命令提示\" class=\"headerlink\" title=\"nvm命令提示\"></a>nvm命令提示</h1><ul>\n<li>nvm arch：显示node是运行在32位还是64位。</li>\n<li>nvm install <version> [arch] ：安装node， version是特定版本也可以是最新稳定版本latest。可选参数arch指定安装32位还是64位版本，默认是系统位数。可以添加–insecure绕过远程服务器的SSL。</li>\n<li><strong>nvm list [available]</strong> <strong>：显示已安装的列表。可选参数available，显示可安装的所有版本。list可简化为ls。</strong></li>\n<li>nvm on ：开启node.js版本管理。</li>\n<li>nvm off ：关闭node.js版本管理。</li>\n<li>nvm proxy [url] ：设置下载代理。不加可选参数url，显示当前代理。将url设置为none则移除代理。</li>\n<li>nvm node_mirror [url] ：设置node镜像。默认是<a href=\"https://nodejs.org/dist/%E3%80%82%E5%A6%82%E6%9E%9C%E4%B8%8D%E5%86%99url%EF%BC%8C%E5%88%99%E4%BD%BF%E7%94%A8%E9%BB%98%E8%AE%A4url%E3%80%82%E8%AE%BE%E7%BD%AE%E5%90%8E%E5%8F%AF%E8%87%B3%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95settings.txt%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B%EF%BC%8C%E4%B9%9F%E5%8F%AF%E7%9B%B4%E6%8E%A5%E5%9C%A8%E8%AF%A5%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E3%80%82\">https://nodejs.org/dist/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。</a></li>\n<li>nvm npm_mirror [url] ：设置npm镜像。<a href=\"https://github.com/npm/cli/archive/%E3%80%82%E5%A6%82%E6%9E%9C%E4%B8%8D%E5%86%99url%EF%BC%8C%E5%88%99%E4%BD%BF%E7%94%A8%E9%BB%98%E8%AE%A4url%E3%80%82%E8%AE%BE%E7%BD%AE%E5%90%8E%E5%8F%AF%E8%87%B3%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95settings.txt%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B%EF%BC%8C%E4%B9%9F%E5%8F%AF%E7%9B%B4%E6%8E%A5%E5%9C%A8%E8%AF%A5%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E3%80%82\">https://github.com/npm/cli/archive/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。</a></li>\n<li>nvm uninstall <version> ：卸载指定版本node。</li>\n<li><strong>nvm use [version] [arch]</strong> <strong>：使用制定版本node。可指定32/64位。</strong></li>\n<li>nvm root [path] ：设置存储不同版本node的目录。如果未设置，默认使用当前目录。</li>\n<li>nvm version ：显示nvm版本。version可简化为v。</li>\n</ul>\n<h1 id=\"nvm常见问题\"><a href=\"#nvm常见问题\" class=\"headerlink\" title=\"nvm常见问题\"></a>nvm常见问题</h1><p>如果下载node过慢，请更换国内镜像源, 在 nvm 的安装路径下，找到 settings.txt，设置node_mirro与npm_mirror为国内镜像地址。下载就飞快了~~</p>\n<p>nvm node_mirror <a href=\"https://npmmirror.com/mirrors/node/\">https://npmmirror.com/mirrors/node/</a><br>nvm npm_mirror <a href=\"https://npm.taobao.org/mirrors/npm/\">https://npm.taobao.org/mirrors/npm/</a></p>\n<blockquote>\n<p>来源：<a href=\"http://nvm.uihtm.com/\">http://nvm.uihtm.com/</a></p>\n</blockquote>\n","site":{"data":{"sidebar":"<div class=\"cc-license animated\" itemprop=\"sponsor\">\n  <a href=\"https://www.netlify.com\" class=\"cc-opacity\" title=\"Deploy with Netlify → https://www.netlify.com\" target=\"_blank\"><img width=\"80\" src=\"https://www.netlify.com/img/global/badges/netlify-dark.svg\" alt=\"Netlify\"></a>\n</div>","link":[{"class_name":"友情链接 👋👋","class_desc":"大佬带飞","link_list":[{"name":"EdNovas","link":"https://ednovas.xyz/","avatar":"https://cdn.jsdelivr.net/gh/wdm1732418365/CDN/New%20folder/icon.png","descr":"Ed大佬，网络通信"},{"name":"guole's Blog","link":"https://guole.fun/","avatar":"https://guole.fun/img/gl.jpg","descr":"guole大佬，主题美化"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Hexo","link":"https://hexo.io/zh-cn/","avatar":"https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg","descr":"快速、简单且强大的网页框架"},{"name":"Hugo","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/hugo.png","descr":"Go 语言的静态网站生成器"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":"https://cdn.jsdelivr.net/gh/jerryc127/CDN/img/butterfly-github-avatar.png","descr":"本站主题，真好看"},{"name":"Lovelt","link":"https://gohugo.io/","avatar":"https://cdn.guole.fun/logo/lovelt.png","descr":"Hugo主题"},{"name":"阿里图标库","link":"https://www.iconfont.cn/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"多次使用，感谢"},{"name":"8K壁纸库","link":"https://wallhaven.cc/","avatar":"https://cdn.guole.fun/logo/weizhi.png","descr":"背景"}]}]}},"excerpt":"","more":"<h1 id=\"nvm是什么\"><a href=\"#nvm是什么\" class=\"headerlink\" title=\"nvm是什么\"></a>nvm是什么</h1><p><strong>nvm</strong>全英文也叫<strong>node.js version management</strong>，是一个<strong>nodejs</strong>的版本管理工具。<strong>nvm</strong>和<strong>n</strong>都是<strong>node.js</strong>版本管理工具，为了解决<strong>node.js</strong>各种版本存在不兼容现象可以通过它可以安装和切换不同版本的<strong>node.js</strong>。</p>\n<h1 id=\"nvm下载\"><a href=\"#nvm下载\" class=\"headerlink\" title=\"nvm下载\"></a>nvm下载</h1><p>在<a href=\"https://github.com/coreybutler/nvm-windows/releases\">github</a>上下载最新版本,本次下载安装的是windows版本。</p>\n<h1 id=\"nvm安装\"><a href=\"#nvm安装\" class=\"headerlink\" title=\"nvm安装\"></a>nvm安装</h1><ol>\n<li><strong>卸载之前的node后安装nvm</strong>, nvm-setup.exe安装版，直接运行nvm-setup.exe</li>\n<li>选择nvm安装路径(无空格与中文)</li>\n<li>选择nodejs路径</li>\n<li>确认安装即可</li>\n<li>安装完确认</li>\n</ol>\n<p>打开CMD，输入命令 nvm ，安装成功则可以看到列出了各种命令，<strong>nvm-windows 需要管理员权限</strong>。</p>\n<h1 id=\"nvm命令提示\"><a href=\"#nvm命令提示\" class=\"headerlink\" title=\"nvm命令提示\"></a>nvm命令提示</h1><ul>\n<li>nvm arch：显示node是运行在32位还是64位。</li>\n<li>nvm install <version> [arch] ：安装node， version是特定版本也可以是最新稳定版本latest。可选参数arch指定安装32位还是64位版本，默认是系统位数。可以添加–insecure绕过远程服务器的SSL。</li>\n<li><strong>nvm list [available]</strong> <strong>：显示已安装的列表。可选参数available，显示可安装的所有版本。list可简化为ls。</strong></li>\n<li>nvm on ：开启node.js版本管理。</li>\n<li>nvm off ：关闭node.js版本管理。</li>\n<li>nvm proxy [url] ：设置下载代理。不加可选参数url，显示当前代理。将url设置为none则移除代理。</li>\n<li>nvm node_mirror [url] ：设置node镜像。默认是<a href=\"https://nodejs.org/dist/%E3%80%82%E5%A6%82%E6%9E%9C%E4%B8%8D%E5%86%99url%EF%BC%8C%E5%88%99%E4%BD%BF%E7%94%A8%E9%BB%98%E8%AE%A4url%E3%80%82%E8%AE%BE%E7%BD%AE%E5%90%8E%E5%8F%AF%E8%87%B3%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95settings.txt%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B%EF%BC%8C%E4%B9%9F%E5%8F%AF%E7%9B%B4%E6%8E%A5%E5%9C%A8%E8%AF%A5%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E3%80%82\">https://nodejs.org/dist/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。</a></li>\n<li>nvm npm_mirror [url] ：设置npm镜像。<a href=\"https://github.com/npm/cli/archive/%E3%80%82%E5%A6%82%E6%9E%9C%E4%B8%8D%E5%86%99url%EF%BC%8C%E5%88%99%E4%BD%BF%E7%94%A8%E9%BB%98%E8%AE%A4url%E3%80%82%E8%AE%BE%E7%BD%AE%E5%90%8E%E5%8F%AF%E8%87%B3%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95settings.txt%E6%96%87%E4%BB%B6%E6%9F%A5%E7%9C%8B%EF%BC%8C%E4%B9%9F%E5%8F%AF%E7%9B%B4%E6%8E%A5%E5%9C%A8%E8%AF%A5%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E3%80%82\">https://github.com/npm/cli/archive/。如果不写url，则使用默认url。设置后可至安装目录settings.txt文件查看，也可直接在该文件操作。</a></li>\n<li>nvm uninstall <version> ：卸载指定版本node。</li>\n<li><strong>nvm use [version] [arch]</strong> <strong>：使用制定版本node。可指定32/64位。</strong></li>\n<li>nvm root [path] ：设置存储不同版本node的目录。如果未设置，默认使用当前目录。</li>\n<li>nvm version ：显示nvm版本。version可简化为v。</li>\n</ul>\n<h1 id=\"nvm常见问题\"><a href=\"#nvm常见问题\" class=\"headerlink\" title=\"nvm常见问题\"></a>nvm常见问题</h1><p>如果下载node过慢，请更换国内镜像源, 在 nvm 的安装路径下，找到 settings.txt，设置node_mirro与npm_mirror为国内镜像地址。下载就飞快了~~</p>\n<p>nvm node_mirror <a href=\"https://npmmirror.com/mirrors/node/\">https://npmmirror.com/mirrors/node/</a><br>nvm npm_mirror <a href=\"https://npm.taobao.org/mirrors/npm/\">https://npm.taobao.org/mirrors/npm/</a></p>\n<blockquote>\n<p>来源：<a href=\"http://nvm.uihtm.com/\">http://nvm.uihtm.com/</a></p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl3bbwfd40009t8j70087crq6","category_id":"cl3bbwfd30007t8j7ggktdor7","_id":"cl3bbwfdf000ot8j7acwufm6v"},{"post_id":"cl3bbwfcu0001t8j7d86dg3vd","category_id":"cl3bbwfd30007t8j7ggktdor7","_id":"cl3bbwfdf000qt8j70sgk632u"},{"post_id":"cl3bbwfd5000bt8j7aea1655e","category_id":"cl3bbwfd30007t8j7ggktdor7","_id":"cl3bbwfdg000vt8j79hxz4iyv"},{"post_id":"cl3bbwfda000gt8j7318i0xwz","category_id":"cl3bbwfd30007t8j7ggktdor7","_id":"cl3bbwfdh000yt8j79pak6pnu"},{"post_id":"cl3bbwfcy0003t8j7g75f7240","category_id":"cl3bbwfd30007t8j7ggktdor7","_id":"cl3bbwfdh0010t8j7aopmg72a"},{"post_id":"cl3bbwfdc000it8j7dr5wczg2","category_id":"cl3bbwfd30007t8j7ggktdor7","_id":"cl3bbwfdh0012t8j74bvm6evl"},{"post_id":"cl3bbwfd20006t8j7e1r5bhry","category_id":"cl3bbwfd30007t8j7ggktdor7","_id":"cl3bbwfdi0014t8j7c7b3akqs"},{"post_id":"cl3bbwfde000nt8j7b1d08h9f","category_id":"cl3bbwfdg000ut8j7f11vbrwe","_id":"cl3bbwfdi0016t8j7baa08oki"}],"PostTag":[{"post_id":"cl3bbwfcu0001t8j7d86dg3vd","tag_id":"cl3bbwfd00004t8j7bvwrcu5v","_id":"cl3bbwfda000et8j794za8ymz"},{"post_id":"cl3bbwfcy0003t8j7g75f7240","tag_id":"cl3bbwfd00004t8j7bvwrcu5v","_id":"cl3bbwfdd000lt8j74bnc8ku0"},{"post_id":"cl3bbwfde000nt8j7b1d08h9f","tag_id":"cl3bbwfd00004t8j7bvwrcu5v","_id":"cl3bbwfdg000st8j72gs82y3o"},{"post_id":"cl3bbwfd20006t8j7e1r5bhry","tag_id":"cl3bbwfdc000jt8j7gm2bauf2","_id":"cl3bbwfdg000wt8j7elev19u4"},{"post_id":"cl3bbwfd40009t8j70087crq6","tag_id":"cl3bbwfdf000rt8j70zxb0mhd","_id":"cl3bbwfdh0011t8j7af28hdzi"},{"post_id":"cl3bbwfd5000bt8j7aea1655e","tag_id":"cl3bbwfdf000rt8j70zxb0mhd","_id":"cl3bbwfdi0015t8j78an2fz4m"},{"post_id":"cl3bbwfda000gt8j7318i0xwz","tag_id":"cl3bbwfdf000rt8j70zxb0mhd","_id":"cl3bbwfdi0018t8j74w06a160"},{"post_id":"cl3bbwfdc000it8j7dr5wczg2","tag_id":"cl3bbwfdc000jt8j7gm2bauf2","_id":"cl3bbwfdi0019t8j75d2ya35u"}],"Tag":[{"name":"工具","_id":"cl3bbwfd00004t8j7bvwrcu5v"},{"name":"服务部署","_id":"cl3bbwfdc000jt8j7gm2bauf2"},{"name":"博客","_id":"cl3bbwfdf000rt8j70zxb0mhd"}]}}